%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Group of tourists with suitcases and bags standing in airport.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 8/1/2020
%%BoundingBox: 0 0 5000 2000
%%HiResBoundingBox: 0 0 5000 2000
%%CropBox: 0 0 5000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Group of tourists with suitcases and bags standing in airport</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Group of tourists with suitcases and bags standing in airport. Families, elderly couples travelling with luggage. Vector illustration for trip, journey, travel, vacation concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>tourist</rdf:li>
               <rdf:li>travel</rdf:li>
               <rdf:li>airport</rdf:li>
               <rdf:li>walk</rdf:li>
               <rdf:li>suitcase</rdf:li>
               <rdf:li>family</rdf:li>
               <rdf:li>bag</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>trip</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>guitar</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>elderly</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>journey</rdf:li>
               <rdf:li>selfie</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>together</rdf:li>
               <rdf:li>traveler</rdf:li>
               <rdf:li>isolate</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>check in</rdf:li>
               <rdf:li>vacation</rdf:li>
               <rdf:li>children</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>wheeling</rdf:li>
               <rdf:li>luggage</rdf:li>
               <rdf:li>baggage</rdf:li>
               <rdf:li>flight</rdf:li>
               <rdf:li>airplane</rdf:li>
               <rdf:li>aviation</rdf:li>
               <rdf:li>passenger</rdf:li>
               <rdf:li>queue</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>festive</rdf:li>
               <rdf:li>decoration</rdf:li>
               <rdf:li>departure</rdf:li>
               <rdf:li>waiting</rdf:li>
               <rdf:li>standing</rdf:li>
               <rdf:li>registration</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-08-01T13:39:31+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-08-01T13:39:31+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-08-01T13:39:31+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqlJ8x20Or/oy+iezklcpZTylRDcEBDxjev2zzpw67HLfBJjxDfv8mHHvRTW&#xA;SRI0Z5GCIoqzMaAAdyTlYBOwZE0oR6hp8jrHHcxO7/YRXUk99gDkjikOYKBOJ6ojIMnYqsnlEMMk&#xA;rAssaliq7kgCuwwxjZpBNC1yMrorqaqwBB9jiRSQp/W7Y/7tXam9dqluAH/BCmR4gz8OXd+OarhY&#xA;OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVQurtLf0+Ss3qOEHEVoT45iarVjDw2CeKVbNmPG&#xA;ZX5OvL2G0RWlDtyPFVjRpGJ+SAnMtoyZBHn+t0kUV7ZhZUZY5lVjG3wsOhANOhGUanTQzQOOf0lt&#xA;xZTEiQ2KsQwQhNmAopapFe1cuAoUEdd0m8p3ur3mltNqgCz+tIigADZG4mtPBwwHt49co005Sjcu&#xA;dub2hixwyVj5UPt/ZSZ3l0tvHy6sfsr4775LNlEBfVxccOIr7edZ4hIoIBrseu2Sx5BMWGM48JpU&#xA;JABJ6D6cmTTEKJuLckHd2HSiliD9A2yHjRZ8BQ14r30EtpwaNJRwZqbgV3Nfs/RU44tRITBEeX49&#xA;yMmIGNWgfLXlS30YPNJL9avpKhpyoRVSuyRoCeIp1NanuelM3UaqWTyDj4sIh708YVUipFRSo6jM&#xA;ZuCnbW0NtH6cQ2J5MxNWZj1ZidyTgApnOZkbKqQCCDuDscLBSjtlitlt4maNUHFGFCyjtTkCNvfD&#xA;ORkbWAEUobQrptXF6bqbgqsEhLAJWgQseHGhepbYdd/bMfwjxXbnjVRGPg4R7+v2934705aMmExo&#xA;xQ8eKv1YbUB+KtT88vcCW6nY2n1S1jt/WknEYoJZm5yH/Wagriwxw4YgWT70n85a9faJp0V5awiV&#xA;WlWGWqs5X1CFUhVKk75k6bHCZqV/BhmnKIsMRXzJ5tvtSksWuxbRP6kUNzCYT8QB4MEoz0JA69sz&#xA;5YMYhYj87cUZZmVEsq8gaxc6r5djluYpo5oHaB3uKh5SgB9Tf+bl4nMDVYxGezlYJEx3T8XERlMQ&#xA;Pxjr/n9GYQygyrq5HAatUyxi7FXYq7FXYq7FXYq7FXYqllrra3F36AhZYyxVJa9SAT0p7ZgYddxz&#xA;4eE1dW5M9Nwxu9+5GX1/Z2Nubi8mWCEEAyOaCp2AzNnMRFlqxYpZJcMRZVIZoZ4llhdZInFUkQhl&#xA;I8QRhBBFhjKJiaIor8LFplVlKsAVIoQdwQcVBpJ5dX8v6RObRESBiayLBGAoJ/m4gb5ZDT0ByjfL&#xA;paZ5pTJvilw8+ZpNZIYLhFLjmvVTU9/llGTEJbSCYzI5LkjSNeKKFUdhhjEAUEEk812SQ7FXYq0z&#xA;KqlmICgVJOwAGKrLe5trmP1beVJoqkc42DrUGhFRXpigSB5NzSrDDJM4JWNS7BQWaiipoo3J9sUs&#xA;F/L784vL/m/SNT1BozpbaQpmv4pnDhIArN6oYAVUBDX4dvuyyeIg004s4mCe5U8gfmtYedtVv7fT&#xA;NNuYtLtF5W+qTgKk5DBWVU6ila9enWmOTHw7E+ruZwkZC6PD3s5ytm7FXYqh77T7O+hEF3EJYgwY&#xA;KajcdDtTJ48koG4mixlASFF1tpun2tDbW0UJG1URVP3gVxnllLmSVjCI5BEZBkoCzhE3qgANWuwA&#xA;336/flIwREuJs8Q1SGv9Ra3uI0QhwSA6AgsK1P2evQeOY+o1JhMAb/e2YsPFElVgvmJSO5jaGV9g&#xA;SBwLeAILfjluPUHYTHDI/L9LGWLmYmwi8yWl2KuxV2KuxV2KuxVQjsLSOYzJGBISTWpoCepArQZT&#xA;HTwjLiA3bDlkRRSLz7C0uiDblGsimRNqkEFRQHrQtlesFwc/smYjm8yNlXyPpkuneXoYpH5GYtOq&#xA;g1CLJQha+3f3w6TGYQALDtTUDLmJHTb5J5PNFBDJPM4jhiUvI7bBVUVJPyGZLr3yN5k/5yJ/MfUd&#xA;cubnRdQ/RmmLI31K0WGB6Rg0UyNIjlmI3belegzYjBCI35uunqZXszD8v/PmpeY3W211BFqci+t9&#xA;cAAWdC9Hk9NAOJWoJCjfqBmFroxlKJ3qO23Tu/Hudn2XrQIZI3G/q36itx7+VD3voezMJtIDC4kh&#xA;9NfTkBqGWgoa+4yEjZtrjVClXAyS/XdW/Rlj9YEfqOzemg6AEgmp9tsuwYhM7mgBbXkmQNhZOyV+&#xA;WvMV/qN49vcIhVYy4dAQaggb7nxyEsmKRIh0+1yJ6bJjjGU/4r27mSZBreb/AJq/mR5P07S9R8vz&#xA;6i41WSLjJFao8hirRgszqCsYcfCa70PTLIYyXD1eSPAY36ilX5Wromk65DbyXite6lbMbNKOquF4&#xA;OeAI68T1b5DwzExZpZJHagHLh2dj02KMjLiyZPurp+167l6XzL5r0eDyD+blybmE/wCEPM8MkV+q&#xA;1CLaXp9O4Wo+z6MpDrTtxpmSJ3HzDgnGY5Nh6T+llmmeYNK/Lry5Jc2cL6wlpGIdPggUQNPGW3ml&#xA;IUhOKqOR4kkmtOuavDljkzEylXFyen1WlyQ00YxjxcP1VX4PvefXf5p6j+aHmux0fWFbTvL/AMbp&#xA;plrIxWWSNfU/0mT4S4ohGwFPxza6iJw4jKPN0WhA1GaMJcj0e/8A5Wy+r5euGhZm09b2aLTgfsrF&#xA;EFjdY/8AIE6yBe3htTMOHFwji51+PscrUcHiSEPpv+37WYZJpdirsVYfqv5reUNN8wSaHLLNNdWy&#xA;89QmgjMkNqvjO4Pw0rvQGnemSMaFnqxErJAF1ufJmAIIBBqDuCMiyQblU1RS6/3sQSNtqVDEsN/a&#xA;mYkiBmF9Y0P0/obhvj26FZqVDAYiQ0zMPQA2bkzfD93jkdV9PD/F099/oZYed9OqPzNcd2KuxV2K&#xA;uxV2KuxVoMrVoQabGniMUkPFvNWq3Vx5p1CbmQYJnt4gdwqxfu6AHxIJ+nJmAlGi8vqdZkxaozga&#xA;lHYfKk/8gan9WaIciUmcx3Ar+0zfC30VGMg3dm5yDZ34jv72a+ajE+hXlnJbzXQv4JbUQwrKeRlj&#xA;ZaM8QrEprTmSAviMEOd9zv5cqfPE/wCXvlsaQNEtbH6nrZuUnmS5b1GESrR2gnChngfiBt0J+IKd&#xA;s1uPXZZZOMnix10/SOh/AtyJdnxnDw4Csnn+vuV9D0W703zDorXCCKWWe4CRgivox2sgZtv2ebpT&#xA;NrGVxt5Y4ZY5SjLmNnvvlEv+hkVt1SRwhqSaFuW/0sfoyond3ekB8KN/jcpzi5Dy780PPRtZhp9p&#xA;FHMlrIv1iRi1S+4ZFoQBQHqa75iHtKWKZEK5bu603YscuIZMhI32ATX8qdd0rVrW9NujJewOolDk&#xA;EmNxVCPbkGB+WR0ZFHvYdriYkL+lnmZrqHjlh+WqDVfNV7rkEckmpX189mj8ZAIZ5GZJWG45cGFB&#xA;+zmFrdWYkCJ5c2Gl7PEpmcxd8v1sX0nVyvkfy95vfa60W5g+tVA5GJJvqs4NdviFJPYgZSZGOplj&#xA;HXl/uh+pzJ5fE00JyH0f9I/tfRSsGUMOjAEfTmyBsOORTxL8x9JcedNUmvH+sQX8VuIIX+JUhji4&#xA;FKHxk5t9OavtDKeKIH8It6bsHTROKcpCxM18AP1ksDKT6LG1rK5k0SQFIZ3JLWpbYK/UmLfZv2e+&#xA;VbZ9xtk/3X7fvcr1aMGJ9WDoesPI98e49OR2Z75N/LzTtEilu7uwRNUuW5G7orEIyqf3Eg5LxNd2&#xA;Q/FkNXqc0OGMieEdHWCOHxPFxVZZs8jw6TD5Z0dmtJLgEQTwUQwROSeSUFAeVT06ZmYdRKQrmb+x&#xA;oGmieLJLaIHLz/H2s0ghWGCOFSxWNQiliWYhRTcncnNi6hfirx380vz3vPLfmJ/LGgacl7qiCNZZ&#xA;5ixRZZlDRxpGlC5o6n7Q8MuhiBFnk4uXUGMuEDdg9voP5h6P5W1031mlxrOpSvNTlE7n1x++kcg8&#xA;WpyYhd9/bNdk1GHJmjvsPwHb6SGbHpcm1zPLl8f2PpLTbZ7XTrW2kbm8EMcbv4lFCk/TTMwuCBsq&#xA;ywxTIUlQOh7EVyE4RkKIsMoyINhZDZWsLc44wHpTkSWNPCrEnK8eCEDYG7KWSUtiVbLmDsVdirsV&#xA;dirsVdiqTXHl9o7qS+024a2u3JLK1GibkakEEVFTlBw0biaLnQ1lxEMg4o/a8n80C5Gv3v1oAXBk&#xA;rIF3FSAduu2ZOEER35/teJ7blE6qXB9Pp+yIDJND02NPJX6QU8bgXRdXHWm0fH7xXMfWfT7novZa&#xA;EQNxfFb0cu7WfqUHqGPlxJoK8a0JocsP0uQRUni+r6nrUbXzXcUNstvZPNEYJmnoygnkA8MWanS4&#xA;cfhgx3udbiv0lzMOqmNVOJNVi4gOY581HyloUaWmn6xdzzXepS2MEYeZlKxIyKzJEqqgALDcmrHu&#xA;c30j0Dx85El6Z5XupbSRbK5FIrtfWtJOxNKMtfHb/OuYfGRkIPXk9Pp8IlpYSjzjz+ZLKGrxPH7V&#xA;Nq+OXNQfPP5jxwKllMrf6VdS3D3aDYfD6fBqeJLvmknEc+pezxZJfR/DECvtTf8AIWCY+YdRnBPo&#xA;pacHXsWeVSp+5GzJ0Q9R9zre2CPDA83t+bJ554f5y85z6R5jgM9yI7aSaSW6jLU5qCU+yeyj/PbN&#xA;f+W8aE+/o5HaWsOHJhhH6as/Hb9ZSzy95b1Kb8npdNlQ/pC+trieOI7HnKzSxLv05fD9+Yeo1ERr&#xA;OIfTEgfoLPBgkdLwn6iC9w8rztN5c02RzV/q8auevxIoVvxGbnGbiC16mHBkkPN55+dXmWy0W+0e&#xA;G7spLoalyigZOIUPG6VDMSCPtrTK8+m4xxdwLfoteMJEKJ4pCmKyXdqyPGtnF6cilHV6vVTsR265&#xA;ohko2A9rLT8QqRJDLPyxtbG9/LiwvJLGGzvrt7iO5a2jESsLeeWKOlKmiKAor75uO0KqPXut4XRZ&#xA;JCRlQB8httszHytozQSSXc7+o6D0YP8AJTqTv88jo4A3JytdqRICIFdSyPM51jsVeHfmL+V2rD80&#xA;rDzvaItxpBuLWfUlDKskL2/BAwVivJW4L9mprXbJZcoGKQ8mrFpZTzxrv+5mtw31j4pImjSVQQj0&#xA;qUYbH4Sw+Ib5yGpBE/k9Hj9PwP3Mu0K7+t6PZzl/UdolEr+Miji//DA51OGXFAHydTqsfBlkOW/2&#xA;dEdljjuxV2KuxV2KuxV2KuxV2KqV3DJNaTQxSmCWWNkjnUVKMwIDgf5J3xRIWKfKsmiah+mLuFb6&#xA;RLm2mkjmueXJuQYqzDkOTciv7R75j5O0YwB2sp0vspmzSHHKPAd73J+Wz1HyVcW+mfl9dade6lJc&#xA;3dzfEW5uG5MarHIVUD7KgRsfCvucr8c58cpVVfsdrj7Mjoc8IA2CCe7oXqGj6ppuracl1YSie1bl&#xA;HUgggoeLKysAQdu4zMoh1ZO5YBeflrpGi2i29rExtLp2tntvVlYFJR8Q5yMxTptxNBmvkMwNzIlv&#xA;3U52jwYTOUgCJcBid+jxDVvzk8xaLq+paRDaWk0Gn3U9ravIsgYRwyMiBuLqDRVHYZ0I08SAXlZ4&#xA;RZfQXkm8k84flzpV67rFqCgh3UUCTQuUbpuKgVzX6zT7mLvuztR4QB5iqLMJrqHTdKku9QlWOGzg&#xA;aW7n+IqqRJyd96tQAVyMQdgjJIWSOT5z/Me8t5vMzxxEqyx8jA4ZXTlIxAZWAoaEVHXxzT5Ym76W&#xA;9bpskSBG9+EFlf5DapDDq2paa9A95FHLG3cmAtVfukr9GX6KVEjvcHtjETAS/m/pe1O6RozuwREB&#xA;ZmY0AA3JJObJ55475wsNOvtOufMUF1DINBnlvZrUn4poZGRoRVeXHmYyASKZTpsZyCUBtxEi2fa2&#xA;K8mOf8yMbHxYTdfny0UDOmigOPs8rmorXwEQyuXsyIizk/2P/Hky7Z2+n7f2PY/yt806fqnl2ytj&#xA;cRLqLQ/WPqnNfUMclJCypXkVBkoT2yzDHhBj/NNORrTxGM/58In7Aqfmx5asNa8oXE9wp+s6P/uS&#xA;spVpVZLcFiDXqrLUMP6Zl4IiUhE8pbH4uBORjUx9Udx7w+c9Q8y6vFb8o5QrEgV4Kf1jNhPsLSgf&#xA;T9pbB7R6w/xD/Sj9TPItUM2j6MLRzFBFYwjihI/euC9w21N2mZic5PtQcOYx6R5PX9hQjLTiZFym&#xA;ST77Zd+W3mi9hsr2GHTr3WZZbqRlS1e2HppFHCrFjdz243ZxTiTmZ2dD92STW7pu3ZAZgAP4f0vS&#xA;NH1SDVNOivoUeJZeQaKUKJEeNijo3EstVdSDxYjwJGZso0adODYRmRSkXmZJb5rXSID8dw/qzsP2&#xA;Ik6k/T0+WY+ccVRHV2GhIx8WU9Nh72FX/nLSWuJpKSCJCQhCinBBRab/AMozW6jszLOZlt+Pg6zF&#xA;7RacCiJX7h+tkfli+j0wpbzyAaZqSLd6Zcn7J9QAmMnxoR/mc2GEHGeA9eTttRKOpxjNDmB6vd3v&#xA;K/Lmq+YI7i4vryv6cbVykmoyupjNu0iu5UsysIfQ5KqL8hvmTlxy8av4eH9n3usw6vCNJKRrj46v&#xA;8dK2e0eU5omsp4YpDLHBO6xuTWsZ3Q/dlGnOxHcXO149Ql/OiE7zIcF2KuxV2KuxV2KuxV2KvmWy&#xA;tru681agkClyGupZvZIuTsf+FzQ5IGRNPb6fKICN9aHzTPRfzD0ny7q8M80c92LeR1aG3jJIZ0Mb&#xA;Hk3FKDvQ5u+ydDm8Mkj0yqnnvaLXYZZIiJuULEvsZ1+Xn5keWtX1F4Fup7G/1O7uJINJnhcFiRzq&#xA;ZQrRcuKmg59s2WowyjAXHl1efxZQZc/g9NIBFCKjwOYDlPgzzNA13581qOIc+Wo3j7b/AAJK7sfo&#xA;UE5usfIfB1UvqL6L/wCcadZ9XSNX0d23tp0uogf5Zl4NT2BiH35i9oQ3BcvSy2IZF+ZGoX8sr2Vh&#xA;JIkilUmT05CjRlG5D7LKwJYDOV1WUDMeL6QHfYdJOWIGNbnviwSC28xtrUNxduJLb1Y2uS0LMzp8&#xA;Rk/3VXeq5TPLiMCB9X482yGk1IkDYr+tFb5TvLbTPzVgaMBbaW6khVQOAH1lSijiaUozjbLdHKpR&#xA;t2esgTpyOtfdu9JnubidJEmkaSOUFZEYkqwbYgr0ofDNYdRkJviPzcDwo8qChPFFPG8U6LLG6iN0&#xA;cBlZFPIKQeoB3pgGoyDlKXzKnFE9A8c/5yC06ws4PLr2lrFbtMLtZWiRU5CIxcAeIH2ebUzp+xc0&#xA;5wIkSeX6XQdrwETGhXP9CUaJresx6fpkkd/cJJZwhbR1lcGFWQKwjIPwAqADTtmHqckhkkATzep0&#xA;GnxywYzKMSeEdA9l8jajqus+Vtftr+7lu/U09gvrOzkGSKRTQkk75f2Xlkcm5uiPvcbt7TwjjiYx&#xA;AJB5bPDLnT7q7sLuWBeSWMYuLjxEZkSKv/BSrncZpAAeZeIxi0/8m3Es+gSRx7vZLMwHgiqZq/ic&#xA;4jtzD/hF/wA6P3PoHs7qQNKQf4ZV86r7Syryf5q1XRNNt20u2hkmb6wLiS5LFfjZCvFUKk/3dDVh&#xA;Trv0zI0MR4W/e8v292nHHqjEg2AP1s58jefrC302LT9Xj+p3I+s3M0yH1IA0k7S8FNBIf72g+DLt&#xA;RkjH1E0HF7N1P5qfh44ky5ppqX5n6IllOdPJlvQAtus6mOHkx4h5H7IleTd6dN8xcWsxSlRNO+y9&#xA;j6mEeLhv3FMPLOkG30x764na5u7yIs1zIasyvV+RpUDkTXiNlWijYZnZjG/TXv8Ax0/tdT6+GpE9&#xA;du54vqNpfTaVdy20TSR26q9yy78IywWp+/EvG4MZkSR/CzvyZdwax+VtxFOpludFWcRBQS9Y0MsV&#xA;ANzs3GntkYRByRv+cHqNBqJeBIA9DH4FKND0MvfkXKh7aWW0AQn7QikLyfLkH4ZPHnBgP879X7XE&#xA;zaCOnyDGTxA0fm9kgghgiWKFFjiQUVFFAAPllFO5X4q7FXYq7FXYq7FXYq7FXicFp/h385zBKv8A&#xA;oepyuFB6NHeqeI37CU8fozWgcOauh/S9CZ+LpLHOP+9/Y8y86/V9K8z6raRKTHFeXCRKTuEWVgKn&#xA;5Z2+lIhhgP6IeK1MjkyykeZkSmX5WXCT+fdAdRSl04IPj6EmQ10rwlGnFZA9t/OXz4vk3yRdXkMn&#xA;HVbwG00wDqJpAayf88lq3zoO+aPBj4peTsM0+GLx/wD5x2/KafUZn836yjJp5jnt9OhcbzmeNoZZ&#xA;TX9hVdlHi3y3ytTmrYc3H0+K9yjvyNS40L80dR0O62lMNzaOKUBkgkVuX/AxtT55drPViEguDadP&#xA;VfzS1aDQ9HGpJRtQmdILaJ90O5ZmYCjbKD360zltfpoS9Ru+T0PZolOXD/DzeU/8rP1//lntP+Ak&#xA;/wCqmav8tHzd3+Vj5oHyo8up+fNMnmAMk+oRzyAdNpBIQAa7bZmYI+qIXVenDL+q97byq3I8bgca&#xA;7VXen34nsg3tL7HQDXeTzu986D/HB8o6NZNql2sghkuFkEcauBWWvwv8MX7R9jtmUPZ48HGZ18P2&#xA;tJ7UHFwiP2sJ/wCchYL+fzH5d8sRRxyXZV3txG5ZnN5KsUYZSi8Tyi8T1zO7M0pwxNlwO084yGID&#xA;ILf8gvNsFvFCt5p5EaKgPqTfsin++cwsmlnKRO270mHtPDjhGAEvSAOnT4vRfI/knUfLun3sd3NF&#xA;NNPCsaLCWI+BW7sF6lvDLdHpzjkSerjdqdoQzxiIg+m+byj8qbKC6m8yJOA8LaLcxuhFQQ7Ia/Rx&#xA;zqu08nBAHulf3vMaHHxz4e/b5pP+XdoR5H846itfVhS0gjp/LPMBIf8AgFp8jmn7ahsJeX6Q7rsP&#xA;L6uDoZX8gadHqc1naW0ESKzFOZLVP2mOwAIzG0u2MPM9uR8TW5D/AEgPkAEzE05gWaQLGwWro+wH&#xA;09s1GuzjJIAcg977Ldk5NJhlLIAJT/01dx7vdXv8pH+W3lWTzJqB1G9Wui2TglGG1xMNxHQ/7rTq&#xA;3j9JpLSabiNnkHL7V7Q4I8ET6j+P7Pm9A86+bJrF10nTF9XUrgANQcigfYAL3du2bmIfP+0NcYfu&#xA;4bzP4+bvLnl5fLvlzUJ9RRZpZoXluoRuvpxox9MnvsTXEm2Wh0ngYyZczz/Uxb8koWt9C1zU2+GF&#xA;3VVXfiPQjZ2pX/jKO+DIaFp7Ix8V/wBIgfj5sfXW9TF5oiISq3l8sEjBVIkCvHzHSoNJR08c0+DU&#xA;T28y9vr+ydNdkbwhtudhvXXfk93zbvNOxV2KuxV2KuxV2KuxV2KvN/zj0S5eHTPMFhGXvdOnVGVA&#xA;SxRm5odt/hdfxzD1cNhIdHbdl5RcscuUg8H/ADLlSbzjqcyV4S3Msi160dy38c67CbxQ/qh5XKKn&#xA;IeaYfk9/yneh/wDMW3/UPJkNV/clcP8AeBmWvaFN+Z/5wDSdcMmmab5cRzJo8pIkuIBIKTQsu1J6&#xA;rzIPwqBQk9NVDJwRNdXKkBklXd0e9W1tb2tvFbW0aw28KLHDEgCqiKKKqgbAAZikuUA8W/MC1tfK&#xA;f5waL5wnljttMvf97JXZQQ6obeUqlebfunQ/CD3zOx5QcRgefRxpwqfF0TTzfBp35kXGn/4a1RJ1&#xA;gikZeYZYDU7kVXnyqtDsc0epjxz4BzD0fZ2TwsJykeiR2YdJ+UHn5ZeC6esi1p6qzwcfn8Tq34Zj&#xA;/lcnc7Adp4K5/YU88i/l5rmled7B9R9CMWwad4xIHahRlUAAUryI7++Tw4THIAWnWaqM9OTG99no&#xA;n5mea7nyt5SuNUt4uchdLcTn7FuZzwWeQUNVRyNu+baAsvMzlQSn8o/y7Xyzpb6jqBWfX9THqXU9&#xA;efCNjyEat3qfiY9z8hl2o1HiHb6WGPDwc+bFNH0G88zf85B6trl5BIumeXVSO1MiMqtKqeknGoFR&#xA;z9SSo8BkOMCFBr8KRy2Rt0e15S5LsVeDeQ9IutKttfe4MUIvIBZ2jGaF3Yu/xLxRy26CvSm2ZXau&#xA;vxZ8NY5Wfi39maHLp9RE5Y8Ivb4bteSPKl/Y+U/OmjyyQLdXDRtbJ6yHklu7M5opNNhmLrdVDNCo&#xA;m5Abt2j0mTBlE5xIgTt8WM3Jj067SOeLnPDEqAg7BlqD2/HMTNhnPFEQO1buv7P12n0+uyzzxPF4&#xA;kuGX83fu93XdU0GwvvNXmG10dZBBHMSztQlVRByc16M/EbLX7hmHi0M+dEDveuzds4ZRuMhLuAe/&#xA;6k48qeUnbR9Na8TTYh6VjEQHZARzbp8TAEue7fM5uMWMbRGzy2XKZSMpbpd5AsNLu9Pj8zRz/X7n&#xA;UwZRdOKFASQyAdmBBVvu6YZCQ2lsXBwaPHCZmDxk9Sn3mFHfQNTRBV2tJ1UVAqTGwG5yLk5ImUSB&#xA;1Dz7TVGj/lJFbq6reX8jROodSTJLISUFDu3opSg3zH1cicZ4d3M7B0wxZYRyekiz8ejtc8tGwuPI&#xA;duqEywX3q3TKCxDM8TvWnYFQtcx/B4BAebtfzfiyzS6GO3uFvUc2DoXYq7FXYq7FXYq7FUmbynpb&#xA;MWM+o1JqaanqAH3CfJ8Z8vkGPAPwWv8ACOlf7/1H/uKaj/2UY8Z8vkF4B+CUHfflv5Qv3V7+2uLt&#xA;1FFe4vb2UgeALzNg4y1T00JfULQM/wCTX5bzvzm0gyNQAFrm7OwFAP73sMuGqyAUCkaeA6Kmn/lJ&#xA;5B064W50/TpbS4SvCaG8vI3WooaMswIqNsEtTkkKJ2SMMQbAR0nkDy1LfQ38i3j31urJBdNqN+ZU&#xA;R/tKr+vyAbuMr8Q/gBl4Yu0R/hHSv9/6j/3FNR/7KMeM+XyCeAfglA6p+Wfk7VjCdUtri/NsS1v9&#xA;Zvr2b02NKlOczcTsOmEZCGJxRPNEL5D8uCSKULd+rAvCCQ6hfFo1O1EJnqv0ZXKiQSBY8g3QnKMT&#xA;EE8J5i1b/COlf7/1H/uKaj/2UZPjPl8g18A/BKGn/L7ytcSCW4huZ5hsJZb29d6DoOTTFsqljjI2&#xA;QL9zk49TkhHhjIiPvbv/AMv/AC1qNnJY363l3ZSgCW2n1C/kiYKQwqjTlTQgEZbxlxjAHmqW/knQ&#xA;7aCO3t3v4oIlCRRJqeoKqqooFUCegAHQYOM/gBeAJda/lL5EtL9tQtbO4t752LPdRX9+khLHkxLL&#xA;OCanc4fELHwo3f601/wjpX+/9R/7imo/9lGPGfL5BlwD8Eu/wjpX+/8AUf8AuJ6j/wBlGDjPl8gv&#xA;CPwUC35Z+SmUq1g5B/5ebn8P3uURwwibAFuXl1mXJExnIyiVzflt5NYsXsXctXkWubpq161rLvXE&#xA;YIXdC0y1uaUeAyJiRVeS2H8s/JkBJt7KW3LbMYbu7iqPfhKtcvEiHXjTwHILbT8r/JdnfyajaWtx&#xA;BfzArLdR318srA0qC4n5U2yXiyqkxwxHIJh/hHSv9/6j/wBxTUf+yjBxny+QZ8A/BKjaeRPL1nEY&#xA;rT67bxFmkMcWo36KXc8maizgVYmpOE5Sef3BAgAqTeS9EmieGaTUJIZVKSRvqeoMrKwoVYGehBGA&#xA;ZD+AE8A/BScfk1+WwjMY0cCNiGaP6xdcSV6Ej1aGlcs/M5O9j4Ue5F3v5Y+S7+KCK+spbuK1HG1j&#xA;nvLyVYhQCkavMQgoo+z4ZAZpDkWRgDzTK38q6XBLHJHLf1iZWRW1G/dPhNQCjTlWHsRTI8Z/AC8I&#xA;TfIsnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2EF2343BE3D3EA11BCD7C5230AF4E61A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2EF2343BE3D3EA11BCD7C5230AF4E61A</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:28fbdd37-31d3-2a4c-8f3c-a495f3ef55d7</stRef:instanceID>
            <stRef:documentID>xmp.did:303D7D0885C3EA119B4EB79FB34E7F72</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eb821486-8388-674f-87a1-50ae0399ab60</stEvt:instanceID>
                  <stEvt:when>2020-06-30T13:23:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0626d6ab-c801-c74c-9181-3c85a45cf5c8</stEvt:instanceID>
                  <stEvt:when>2020-07-05T22:39:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:303D7D0885C3EA119B4EB79FB34E7F72</stEvt:instanceID>
                  <stEvt:when>2020-07-11T17:46:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28fbdd37-31d3-2a4c-8f3c-a495f3ef55d7</stEvt:instanceID>
                  <stEvt:when>2020-07-20T19:35:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2EF2343BE3D3EA11BCD7C5230AF4E61A</stEvt:instanceID>
                  <stEvt:when>2020-08-01T13:39:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=140 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=156 B=141</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=87 B=66</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>182</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=116 B=88</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=164 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=224 B=178</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=150 G=217 B=201 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=80 G=191 B=165</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>80</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>165</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=143 B=124 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=70 B=85 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=55 B=91</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=155 G=193 B=249</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>154</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=177 B=242 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=83 B=137 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=70 G=110 B=182 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>70</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
5000 2000 li
5000 0 li
cp
clp
5000 2000 mo
0 2000 li
0 0 li
5000 0 li
5000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
4467.22 793.602 mo
4410.28 829.196 4335 811.833 4299.41 754.898 cv
4263.81 697.963 4281.18 622.684 4338.11 587.089 cv
4395.05 551.495 4470.33 568.857 4505.92 625.792 cv
4541.52 682.728 4524.15 758.007 4467.22 793.602 cv
cp
.968627 .8 .498039 rgb
f
4465.54 790.913 mo
4410.08 825.581 4336.76 808.671 4302.1 753.217 cv
4267.43 697.764 4284.34 624.445 4339.79 589.777 cv
4395.25 555.109 4468.56 572.02 4503.23 627.473 cv
4537.9 682.927 4520.99 756.245 4465.54 790.913 cv
cp
f
4485.08 639.479 mo
4513.44 684.834 4499.66 744.588 4454.3 772.943 cv
4408.95 801.298 4349.19 787.516 4320.84 742.161 cv
4292.48 696.805 4306.26 637.051 4351.62 608.696 cv
4396.98 580.341 4456.73 594.123 4485.08 639.479 cv
cp
1 1 1 rgb
f
4451.36 768.238 mo
4408.44 795.073 4351.68 781.983 4324.85 739.059 cv
4298.01 696.134 4311.1 639.381 4354.03 612.546 cv
4396.95 585.71 4453.71 598.8 4480.54 641.725 cv
4507.38 684.649 4494.29 741.403 4451.36 768.238 cv
cp
f
4332.73 728.356 mo
4318.79 737.07 li
4316.5 738.501 4315.8 741.529 4317.23 743.819 cv
4318.67 746.109 4321.69 746.808 4323.98 745.376 cv
4337.92 736.662 li
4340.21 735.23 4340.91 732.202 4339.48 729.913 cv
4338.05 727.622 4335.02 726.924 4332.73 728.356 cv
cp
.968627 .8 .498039 rgb
f
4442.21 753.608 mo
4439.93 755.04 4439.23 758.067 4440.66 760.357 cv
4449.37 774.295 li
4450.8 776.586 4453.83 777.284 4456.12 775.852 cv
4458.41 774.42 4459.11 771.393 4457.68 769.103 cv
4448.96 755.164 li
4447.53 752.874 4444.51 752.176 4442.21 753.608 cv
cp
f
4481.4 635.408 mo
4467.47 644.122 li
4465.18 645.554 4464.48 648.582 4465.91 650.872 cv
4467.34 653.162 4470.37 653.86 4472.66 652.428 cv
4486.6 643.714 li
4488.89 642.282 4489.59 639.255 4488.15 636.964 cv
4486.72 634.674 4483.7 633.976 4481.4 635.408 cv
cp
f
4349.27 604.932 mo
4346.98 606.364 4346.28 609.391 4347.71 611.681 cv
4356.42 625.62 li
4357.86 627.91 4360.88 628.608 4363.17 627.176 cv
4365.46 625.744 4366.16 622.717 4364.73 620.427 cv
4356.02 606.489 li
4354.59 604.198 4351.56 603.5 4349.27 604.932 cv
cp
f
4376.24 558.748 mo
4374.48 539.556 li
4374.33 537.98 4375.49 536.586 4377.07 536.442 cv
4399.08 534.417 li
4400.66 534.272 4402.05 535.432 4402.2 537.007 cv
4403.96 556.199 li
4404.11 557.775 4402.95 559.171 4401.37 559.316 cv
4379.36 561.339 li
4377.78 561.484 4376.39 560.324 4376.24 558.748 cv
cp
f
4297.22 608.713 mo
4280.74 598.72 li
4279.39 597.9 4277.63 598.332 4276.81 599.685 cv
4265.35 618.591 li
4264.53 619.943 4264.96 621.704 4266.31 622.524 cv
4282.79 632.516 li
4284.15 633.337 4285.91 632.905 4286.73 631.551 cv
4298.19 612.649 li
4299.01 611.296 4298.58 609.534 4297.22 608.713 cv
cp
f
4315.47 573.812 mo
4314.17 574.626 4312.44 574.229 4311.63 572.924 cv
4304.27 561.16 li
4303.46 559.855 4303.86 558.132 4305.16 557.317 cv
4329.17 542.308 li
4330.47 541.493 4332.19 541.891 4333.01 543.196 cv
4340.36 554.96 li
4341.18 556.265 4340.78 557.987 4339.48 558.802 cv
4315.47 573.812 li
cp
f
4322.98 577.258 mo
4310.57 580.265 4297.1 575.225 4289.96 563.803 cv
4281.04 549.529 4285.38 530.725 4299.65 521.801 cv
4313.92 512.877 4332.73 517.214 4341.65 531.488 cv
4348.79 542.913 4347.44 557.235 4339.29 567.075 cv
4343.28 573.454 li
4354.71 561.282 4357.03 542.47 4347.77 527.662 cv
4336.75 510.035 4313.45 504.661 4295.82 515.68 cv
4278.2 526.699 4272.82 550.003 4283.84 567.629 cv
4293.1 582.438 4311.03 588.59 4326.97 583.647 cv
4322.98 577.258 li
cp
f
4336.83 585.033 mo
4339.63 583.282 4342.47 581.657 4345.35 580.156 cv
4334.74 563.181 li
4321.48 571.472 li
4331.96 588.236 li
4333.55 587.137 4335.17 586.068 4336.83 585.033 cv
cp
f
4410.23 685.479 mo
4412.84 689.663 4411.57 695.173 4407.39 697.788 cv
4403.21 700.403 4397.7 699.132 4395.08 694.949 cv
4392.47 690.766 4393.74 685.255 4397.92 682.641 cv
4402.1 680.026 4407.61 681.297 4410.23 685.479 cv
cp
.980392 .878431 .698039 rgb
f
4400.27 616.618 mo
4405.8 690.08 li
4405.94 691.931 4404.55 693.544 4402.7 693.683 cv
4400.85 693.823 4399.24 692.436 4399.1 690.584 cv
4399.08 690.293 4399.04 693.578 4400.27 616.618 cv
cp
f
4472.21 715.662 mo
4401.91 693.639 li
4400.14 693.084 4399.15 691.199 4399.71 689.428 cv
4400.26 687.658 4402.15 686.671 4403.92 687.226 cv
4404.2 687.313 4401.16 686.067 4472.21 715.662 cv
cp
f
4405.75 688.28 mo
4406.82 689.989 4406.3 692.24 4404.59 693.309 cv
4402.88 694.377 4400.63 693.858 4399.56 692.149 cv
4398.49 690.44 4399.01 688.188 4400.72 687.12 cv
4402.43 686.051 4404.68 686.57 4405.75 688.28 cv
cp
f
3360.04 1746.87 mo
3322.9 1746.87 li
3322.9 1711.66 li
3360.04 1711.66 li
3360.04 1746.87 li
cp
.094118 .27451 .333333 rgb
f
3508.77 1746.87 mo
3471.64 1746.87 li
3471.64 1711.66 li
3508.77 1711.66 li
3508.77 1746.87 li
cp
f
3340.53 1719.02 mo
3310.72 1719.02 li
3310.72 1696.54 li
3340.53 1696.54 li
3340.53 1719.02 li
cp
.07451 .215686 .356863 rgb
f
3369.11 1214.53 mo
3369.11 1211.87 3371.09 1209.7 3373.52 1209.7 cv
3449.28 1209.7 li
3451.71 1209.7 3453.69 1211.87 3453.69 1214.53 cv
3453.69 1348.26 li
3467.11 1348.26 li
3467.11 1214.53 li
3467.11 1203.78 3459.11 1195.04 3449.28 1195.04 cv
3373.52 1195.04 li
3363.69 1195.04 3355.69 1203.78 3355.69 1214.53 cv
3355.69 1348.26 li
3369.11 1348.26 li
3369.11 1214.53 li
cp
.207843 .32549 .537255 rgb
f
3508.66 1720.04 mo
3327.37 1709.87 li
3317.68 1709.87 3309.82 1701.62 3309.82 1691.45 cv
3292.63 1368.94 li
3292.1 1346.38 3317.68 1342.82 3327.37 1342.82 cv
3524.65 1342.82 li
3534.34 1342.82 3542.19 1351.07 3542.19 1361.24 cv
3542.19 1691.45 li
3542.27 1708.56 3525.43 1719.75 3508.66 1720.04 cv
cp
.235294 .560784 .486275 rgb
f
3503.3 1720 mo
3314.22 1720 li
3302.27 1720 3292.58 1710.32 3292.58 1698.36 cv
3292.58 1374.6 li
3292.58 1362.64 3302.27 1352.95 3314.22 1352.95 cv
3503.3 1352.95 li
3515.26 1352.95 3524.95 1362.64 3524.95 1374.6 cv
3524.95 1698.36 li
3524.95 1710.31 3515.26 1720 3503.3 1720 cv
cp
.313726 .74902 .647059 rgb
f
3481.83 1720 mo
3337.7 1720 li
3337.7 1531.56 li
3337.7 1494.96 3367.38 1465.29 3403.98 1465.29 cv
3415.56 1465.29 li
3452.16 1465.29 3481.83 1494.96 3481.83 1531.56 cv
3481.83 1720 li
cp
.235294 .560784 .486275 rgb
f
3414.63 1328.97 mo
3432.89 1328.97 3448.36 1337.07 3448.99 1346.79 cv
3463.63 1346.79 li
3463.09 1330.79 3441.37 1317.91 3414.63 1317.91 cv
3387.9 1317.91 3366.18 1330.79 3365.63 1346.79 cv
3380.28 1346.79 li
3380.91 1337.07 3396.38 1328.97 3414.63 1328.97 cv
cp
.07451 .215686 .356863 rgb
f
3442.63 1210.8 mo
3381.06 1210.8 li
3376.64 1210.8 3373.05 1207.21 3373.05 1202.79 cv
3373.05 1200.1 li
3373.05 1195.67 3376.64 1192.09 3381.06 1192.09 cv
3442.63 1192.09 li
3447.05 1192.09 3450.64 1195.67 3450.64 1200.1 cv
3450.64 1202.79 li
3450.64 1207.21 3447.05 1210.8 3442.63 1210.8 cv
cp
f
3200.12 334.417 mo
3200.12 334.417 3204.06 323.285 3217.28 319.31 cv
3229.06 315.767 3240 322.689 3243.28 333.594 cv
3247.07 346.217 3240.5 364.481 3215.67 386.104 cv
3183.03 381.766 3167.47 370.16 3163.67 357.537 cv
3160.39 346.632 3165.7 334.825 3177.48 331.282 cv
3190.69 327.308 3200.12 334.417 3200.12 334.417 cv
cp
.956863 .54902 .498039 rgb
f
3104.22 368.695 mo
3116.22 367.111 3125.79 365.229 3135.11 362.933 cv
3138.18 362.176 3143.73 361.771 3145.21 358.612 cv
3145.98 356.97 3145.74 355.262 3144.16 354.172 cv
3141.27 352.176 3136.89 354.32 3133.8 355.082 cv
3124.36 357.401 3113.57 359.578 3102.54 361.145 cv
3100.47 361.439 3099.18 363.834 3099.61 365.76 cv
3100.09 367.952 3102.14 368.969 3104.22 368.695 cv
3104.22 368.695 li
cp
f
3267.72 354.254 mo
3272.25 353.22 3276.76 352.104 3281.28 350.999 cv
3285.6 349.943 3290.89 349.453 3294.62 346.977 cv
3297.38 345.15 3296.68 341.072 3293.22 340.709 cv
3288.75 340.241 3283.89 342.222 3279.57 343.294 cv
3275.05 344.412 3270.54 345.517 3266.04 346.705 cv
3261.24 347.973 3262.85 355.366 3267.72 354.254 cv
3267.72 354.254 li
cp
f
3160.3 417.679 mo
3163.66 406.787 3169.85 402.176 3174.24 397.246 cv
3176.58 394.609 3174.01 390.818 3170.68 392.201 cv
3161.58 395.992 3155.6 406.426 3152.93 415.448 cv
3151.52 420.197 3158.84 422.431 3160.3 417.679 cv
3160.3 417.679 li
cp
f
3218.17 428.888 mo
3216.86 424.264 3216.47 419.531 3217.13 414.76 cv
3217.54 411.841 3221.12 403.104 3215.47 402.997 cv
3210.16 402.896 3209.46 411.764 3209.11 415.523 cv
3208.63 420.561 3209.17 425.726 3210.59 430.576 cv
3212 435.348 3219.54 433.713 3218.17 428.888 cv
3218.17 428.888 li
cp
f
3249.6 391.166 mo
3252.55 392.381 3255.51 393.597 3258.46 394.813 cv
3261.41 396.025 3264.45 398.092 3267.59 396.617 cv
3269.36 395.787 3269.64 393.745 3269.02 392.116 cv
3267.89 389.158 3263.45 388.323 3260.75 387.231 cv
3257.79 386.035 3254.84 384.837 3251.88 383.64 cv
3249.91 382.844 3247.55 384.364 3246.98 386.264 cv
3246.31 388.458 3247.63 390.355 3249.6 391.166 cv
3249.6 391.166 li
cp
f
3162.34 314.238 mo
3147.16 293.473 3147.32 293.311 3144.92 291.879 cv
3142.47 290.412 3139.15 292.615 3139.84 295.495 cv
3140.52 298.342 3140.46 297.861 3156.51 319.65 cv
3157.78 321.384 3160.68 321.206 3162.13 319.861 cv
3163.86 318.256 3163.62 315.98 3162.34 314.238 cv
3162.34 314.238 li
cp
f
3203.5 304.015 mo
3204.08 299.815 3204.2 295.604 3203.87 291.376 cv
3203.57 287.449 3203.63 281.387 3199.48 279.604 cv
3198.59 279.222 3197.18 279.578 3196.54 280.285 cv
3193.85 283.239 3195.77 288.223 3196.03 291.846 cv
3196.33 295.799 3196.19 299.785 3195.81 303.727 cv
3195.61 305.798 3197.52 307.645 3199.51 307.719 cv
3201.76 307.803 3203.22 306.082 3203.5 304.015 cv
3203.5 304.015 li
cp
f
3262.61 293.728 mo
3262.85 291.806 3261.04 290.485 3259.38 290.252 cv
3255.97 289.772 3252.61 293.78 3250.37 295.957 cv
3247.76 298.492 3245.42 301.265 3243.25 304.184 cv
3242 305.867 3242.83 308.493 3244.51 309.529 cv
3246.47 310.743 3248.54 309.913 3249.85 308.269 cv
3258.44 297.535 3261.99 298.473 3262.61 293.728 cv
cp
f
4108.93 473.26 mo
4108.14 461.987 4116.65 452.215 4127.92 451.433 cv
4139.19 450.65 4148.96 459.154 4149.75 470.426 cv
4150.53 481.698 4142.03 491.471 4130.75 492.253 cv
4119.48 493.036 4109.71 484.532 4108.93 473.26 cv
cp
.968627 .8 .498039 rgb
f
4143.62 531.035 mo
4142.4 525.099 4141.66 518.746 4139.64 513.025 cv
4137.9 508.105 4130.22 509.608 4130.61 514.892 cv
4131.08 521.361 4133.11 527.92 4134.46 534.258 cv
4135.01 536.824 4138.41 538.016 4140.65 537.228 cv
4143.4 536.263 4144.15 533.613 4143.62 531.035 cv
4143.62 531.035 li
cp
f
4178.69 505.688 mo
4171.9 501.69 4165.99 496.735 4159.74 492.008 cv
4154.85 488.315 4149.58 494.672 4153.6 499.061 cv
4159.37 505.366 4166.95 510.291 4174.27 514.605 cv
4176.59 515.971 4179.81 514.637 4180.94 512.354 cv
4182.21 509.795 4181.01 507.056 4178.69 505.688 cv
4178.69 505.688 li
cp
f
4165.84 469.063 mo
4164.31 470.294 4164 472.063 4164.95 473.782 cv
4167.24 477.942 4173.06 477.736 4177.2 477.596 cv
4181.51 477.449 4185.83 476.572 4189.9 475.18 cv
4195.93 473.122 4192.67 463.765 4186.62 465.83 cv
4174.78 469.87 4170.3 465.485 4165.84 469.063 cv
cp
f
4159.33 429.28 mo
4153.37 437.992 4148.51 440.934 4149.26 445.729 cv
4149.71 448.533 4151.92 449.871 4154.63 449.257 cv
4157.83 448.532 4159.57 445.141 4161.49 442.76 cv
4163.33 440.478 4165.13 438.19 4166.77 435.758 cv
4168.26 433.552 4168.47 430.696 4166.29 428.797 cv
4164.46 427.205 4160.84 427.068 4159.33 429.28 cv
4159.33 429.28 li
cp
f
4136.13 427.771 mo
4134.22 422.49 4133.81 420.569 4131.34 418.116 cv
4129.19 415.983 4124.66 417.344 4124.36 420.486 cv
4124.01 424.15 4124.78 425.512 4126.78 431.06 cv
4127.69 433.577 4130.56 434.981 4133.1 434.09 cv
4135.62 433.207 4137.04 430.296 4136.13 427.771 cv
4136.13 427.771 li
cp
f
4111.07 440.548 mo
4102.49 434.026 4100.74 432.189 4097.37 432.545 cv
4095.39 432.753 4093.17 434.652 4093.6 436.871 cv
4094.4 440.995 4096.8 442.115 4104.7 447.873 cv
4106.81 449.417 4109.72 449.495 4111.55 447.397 cv
4113.18 445.518 4113.17 442.141 4111.07 440.548 cv
4111.07 440.548 li
cp
f
4076.59 470.442 mo
4073.21 472.236 4074.57 478.085 4078.23 478.563 cv
4081.74 479.023 4083.1 478.458 4100.14 475.347 cv
4102.77 474.867 4104.94 472.945 4104.74 470.062 cv
4104.57 467.615 4102.1 464.984 4099.45 465.462 cv
4081.75 468.655 4079.98 468.641 4076.59 470.442 cv
cp
f
4103.29 498.32 mo
4093.95 507.359 4092.58 505.763 4088.89 511.291 cv
4087.21 513.818 4089.99 517.848 4092.92 517.309 cv
4096.69 516.617 4097.71 515.981 4102.62 512.089 cv
4105.47 509.827 4108.2 507.402 4110.82 504.877 cv
4112.77 503.004 4112.24 499.491 4110.33 497.831 cv
4108.15 495.933 4105.23 496.438 4103.29 498.32 cv
4103.29 498.32 li
cp
f
475.592 1750.55 mo
475.592 1750.55 li
475.592 1754.05 478.423 1756.88 481.915 1756.88 cv
4507.2 1756.88 li
4510.69 1756.88 4513.52 1754.05 4513.52 1750.55 cv
4513.52 1750.55 li
4513.52 1747.06 4510.69 1744.23 4507.2 1744.23 cv
481.915 1744.23 li
478.423 1744.23 475.592 1747.06 475.592 1750.55 cv
cp
.07451 .215686 .356863 rgb
f
2702.29 1184.26 mo
2702.22 1181.38 2677.78 1012.75 2674.75 1007.84 cv
2656.02 912.175 li
2596.58 905.945 li
2596.58 905.945 2620.47 1029.83 2622.85 1036.08 cv
2624.31 1039.91 2677.68 1231.09 2677.68 1231.09 cv
2677.68 1231.09 2677 1255.95 2685.78 1255.95 cv
2694.55 1255.95 2725.56 1246.88 2725.56 1246.88 cv
2729.36 1231.09 li
2702.29 1184.26 li
cp
.956863 .54902 .498039 rgb
f
2852.36 1501.88 mo
2609.97 1501.88 li
2587.91 1501.88 2570.04 1484 2570.04 1461.94 cv
2570.04 1310.37 li
2570.04 1288.31 2587.91 1270.44 2609.97 1270.44 cv
2852.36 1270.44 li
2874.42 1270.44 2892.3 1288.31 2892.3 1310.37 cv
2892.3 1461.94 li
2892.3 1484 2874.42 1501.88 2852.36 1501.88 cv
cp
.956863 .454902 .345098 rgb
f
2662.67 1278.18 mo
2662.67 1266.77 li
2662.67 1255.8 2671.59 1246.88 2682.56 1246.88 cv
2729.36 1246.88 li
2740.33 1246.88 2749.25 1255.8 2749.25 1266.77 cv
2749.25 1278.18 li
2765.05 1278.18 li
2765.05 1266.77 li
2765.05 1247.09 2749.04 1231.09 2729.36 1231.09 cv
2682.56 1231.09 li
2662.88 1231.09 2646.88 1247.09 2646.88 1266.77 cv
2646.88 1278.18 li
2662.67 1278.18 li
cp
.094118 .27451 .333333 rgb
f
2794.68 1501.88 mo
2552.29 1501.88 li
2530.24 1501.88 2512.36 1484 2512.36 1461.94 cv
2512.36 1310.37 li
2512.36 1288.31 2530.24 1270.44 2552.29 1270.44 cv
2794.68 1270.44 li
2816.74 1270.44 2834.62 1288.31 2834.62 1310.37 cv
2834.62 1461.94 li
2834.62 1484 2816.74 1501.88 2794.68 1501.88 cv
cp
.717647 .341176 .258824 rgb
f
2631.21 905.533 mo
2625.59 835.848 2618.08 773.615 2615.58 765.718 cv
2600.37 717.748 2391.29 714.558 2369.41 794.118 cv
2366.22 805.729 2358.2 844.184 2373.51 899.192 cv
2496.16 850.042 li
2631.21 905.533 li
cp
.094118 .27451 .333333 rgb
f
2393.86 817.198 mo
2385.32 848.251 2416.82 1161.32 2430.43 1174.93 cv
2444.03 1188.53 2612.95 1177.56 2637.52 1152.99 cv
2662.09 1128.42 2629 779.143 2615.58 765.718 cv
2602.15 752.293 2415.74 737.638 2393.86 817.198 cv
cp
.235294 .560784 .486275 rgb
f
2530.04 999.487 mo
2520.52 1001.12 li
2514.93 968.397 2510.37 940.958 2506.64 917.949 cv
2488.09 803.304 2490.43 798.451 2490.24 797.118 cv
2490.08 779.295 2479.26 763.43 2462.69 756.683 cv
2430.34 743.52 li
2435.2 741.914 2440.23 740.493 2445.39 739.229 cv
2466.33 747.75 li
2501.38 762.009 2499.86 797.749 2499.9 797.837 cv
2499.9 811.246 2508.41 867.344 2516.38 916.984 cv
2523.34 960.28 2529.89 998.662 2530.04 999.487 cv
cp
.07451 .215686 .356863 rgb
f
2616.87 993.344 mo
2583.41 797.622 2586.82 790.93 2586.59 789.333 cv
2586.42 771.524 2575.61 755.656 2559.04 748.913 cv
2515.3 731.114 li
2518.94 722.173 li
2562.68 739.973 li
2597.73 754.235 2596.21 789.975 2596.24 790.063 cv
2596.24 815.16 2626.08 989.954 2626.38 991.717 cv
2616.87 993.344 li
cp
f
2412.62 1080.07 mo
2413.05 1083.4 2413.47 1086.68 2413.9 1089.9 cv
2461.32 1094.75 2585.94 1103.52 2618.43 1079.66 cv
2612.72 1071.88 li
2582.76 1093.88 2455.07 1084.52 2412.62 1080.07 cv
cp
.094118 .27451 .333333 rgb
f
2363.3 1660.49 mo
2363.3 1660.49 2350.72 1672.82 2350.44 1677.34 cv
2350.15 1681.86 2349.33 1730.32 2354.46 1734.85 cv
2359.59 1739.37 2374.67 1742.58 2369.83 1747.67 cv
2366.16 1751.51 2337.97 1750.69 2319.29 1749.66 cv
2313.83 1749.36 2306.99 1705.65 2304.83 1699.22 cv
2301.69 1689.89 2290.39 1669.59 2293.24 1663.08 cv
2294.63 1659.92 2304.96 1652.69 2314.32 1646.62 cv
2324.18 1640.22 2333.61 1625.99 2333.61 1625.99 cv
2363.3 1660.49 li
cp
.968627 .643137 .568627 rgb
f
2531.54 1690.77 mo
2531.54 1690.77 2521.79 1718.43 2520.43 1722.33 cv
2520.33 1722.62 2516.14 1740.34 2516.14 1744.94 cv
2516.14 1762.22 2593.72 1730.28 2576.33 1722.62 cv
2574.76 1721.92 2569.82 1716.39 2569.3 1710.51 cv
2568.51 1701.45 2575.84 1690.08 2575.84 1690.08 cv
2531.54 1690.77 li
cp
f
2638.6 1084.46 mo
2666.69 1156.54 li
2666.69 1156.54 2685.01 1328.56 2674.34 1431.54 cv
2669.88 1474.6 2573.27 1705.14 2573.27 1705.14 cv
2525.28 1698.35 li
2589.55 1425.35 li
2565.9 1320.95 li
2532.43 1114.58 li
2638.6 1084.46 li
cp
.0941176 .27451 .333333 rgb
f
2506.29 1088.21 mo
2482.19 1168.48 li
2445.54 1410.73 li
2321.6 1637.35 li
2321.6 1637.35 2340.23 1665.7 2360.25 1670.16 cv
2536.16 1441.12 li
2631.5 1154.4 li
2628.16 1090.69 li
2506.29 1088.21 li
cp
.207843 .32549 .537255 rgb
f
2665.43 946.219 mo
2597.03 953.231 li
2597.03 953.231 2593.9 896.912 2593.9 870.047 cv
2593.9 837.455 2599.9 796.674 2603.74 797.861 cv
2614.39 801.151 2626.39 805.012 2635.21 817.182 cv
2665.72 859.293 2665.43 946.219 2665.43 946.219 cv
cp
.980392 .878431 .698039 rgb
f
2375.46 1742.38 mo
2370.93 1737.07 2355.78 1731.7 2352.77 1730.65 cv
2341.43 1726.69 2314.95 1646.2 2314.95 1646.2 cv
2314.95 1646.2 2291.94 1652.96 2290.17 1656.49 cv
2288.39 1660.01 2304.38 1698.79 2304.38 1698.79 cv
2307.4 1714.65 2315.04 1750.77 2315.04 1750.77 cv
2368.87 1750.77 li
2373.07 1750.77 2380.4 1748.15 2375.46 1742.38 cv
cp
.0941176 .27451 .333333 rgb
f
2511.73 1750.64 mo
2520.43 1722.34 li
2520.43 1722.34 2539.27 1730.38 2548.6 1729.06 cv
2557.93 1727.74 2576.14 1722.45 2576.14 1722.45 cv
2613.38 1734.76 2643.88 1740.74 2638.33 1750.64 cv
2638.33 1750.64 li
2511.73 1750.64 li
cp
f
2514.99 793.919 mo
2514.99 793.919 2478.78 798.908 2469.25 805.842 cv
2458.52 813.652 2425.29 850.081 2425.29 850.081 cv
2425.29 850.081 2494.46 1046.43 2491.78 1081.36 cv
2489.1 1116.3 2481.52 1168.04 2481.52 1168.04 cv
2481.52 1168.04 2615.84 1176.44 2666.72 1156.54 cv
2666.72 1156.54 2650.65 1077.38 2650.65 1056.6 cv
2650.65 1035.81 2641.63 828.063 2635.21 817.182 cv
2628.79 806.301 2615.84 800.11 2591.3 794.804 cv
2566.75 789.497 2514.99 793.919 2514.99 793.919 cv
cp
.968627 .8 .498039 rgb
f
2524.87 737.862 mo
2515.94 793.913 li
2515.94 793.913 2548.64 865.232 2568.18 859.229 cv
2584.57 854.19 2574.48 792.936 2574.48 792.936 cv
2574.48 792.936 2565.55 760.041 2568.23 743.579 cv
2570.91 727.117 2524.87 737.862 2524.87 737.862 cv
cp
.968627 .643137 .568627 rgb
f
2568.23 743.579 mo
2570.91 727.117 2524.87 737.862 2524.87 737.862 cv
2524.13 742.684 li
2525.48 745.909 2527.12 748.67 2529.12 750.787 cv
2539.41 761.681 2555.48 768.223 2569.38 768.718 cv
2567.98 759.842 2567.13 750.329 2568.23 743.579 cv
cp
.956863 .454902 .345098 rgb
f
2517.32 655.606 mo
2516.02 655.141 2506.89 721.826 2524.21 740.174 cv
2541.54 758.523 2575.29 764.528 2587.39 750.077 cv
2600.78 734.093 2600.11 662.422 2573.18 643.547 cv
2546.25 624.672 2517.32 655.606 2517.32 655.606 cv
cp
.968627 .643137 .568627 rgb
f
2488.11 657.774 mo
2472.65 684.866 2483.84 713.813 2502.83 728.265 cv
2521.82 742.716 2521.48 759.267 2521.48 759.267 cv
2524.55 750.775 li
2526.77 744.234 2527.67 737.298 2526.93 730.438 cv
2526.49 726.321 2525.59 721.87 2523.86 718.21 cv
2519.29 708.559 2533.67 702.147 2537.7 694.118 cv
2540.81 687.935 2540.96 673.791 2545.85 663.571 cv
2551.69 655.77 li
2551.69 655.77 2565.16 645.448 2578.35 648.361 cv
2591.53 651.273 2521.98 598.407 2488.11 657.774 cv
cp
.968627 .8 .498039 rgb
f
2536.82 705.985 mo
2536.96 714.121 2533.2 720.781 2528.42 720.862 cv
2523.65 720.942 2519.67 714.412 2519.54 706.275 cv
2519.4 698.14 2523.15 691.479 2527.93 691.399 cv
2532.7 691.319 2536.68 697.849 2536.82 705.985 cv
cp
.968627 .643137 .568627 rgb
f
2558.25 629.454 mo
2553.14 625.893 2543.54 618.99 2533.95 613.85 cv
2521.24 607.039 2505.69 608.547 2494.49 617.62 cv
2479.27 629.947 2460.92 648.378 2463.19 664.22 cv
2463.19 664.22 2480.83 701.075 2480.83 709.85 cv
2480.83 718.625 2480.83 730.91 2480.83 730.91 cv
2480.83 730.91 2564.94 688.937 2603 638.626 cv
2603 638.626 2576.64 642.283 2558.25 629.454 cv
cp
.235294 .560784 .486275 rgb
f
2566.77 634.108 mo
2538.52 669.956 2496.51 692.324 2478.66 700.724 cv
2479.07 701.923 2479.42 703.062 2479.73 704.118 cv
2488.03 700.25 2501.7 693.327 2516.73 683.436 cv
2533.2 672.594 2553.85 656.452 2570.2 635.415 cv
2569.05 635.021 2567.91 634.586 2566.77 634.108 cv
cp
.313726 .74902 .647059 rgb
f
2423.71 1292.38 mo
2412.17 1292.38 li
2412.17 1249.65 li
2412.17 1248.4 2411.24 1247.37 2410.1 1247.37 cv
2347.03 1247.37 li
2345.89 1247.37 2344.96 1248.4 2344.96 1249.65 cv
2344.96 1292.38 li
2333.42 1292.38 li
2333.42 1249.65 li
2333.42 1241.38 2339.53 1234.65 2347.03 1234.65 cv
2410.1 1234.65 li
2417.61 1234.65 2423.71 1241.38 2423.71 1249.65 cv
2423.71 1292.38 li
cp
.094118 .27451 .333333 rgb
f
2551.27 1487.4 mo
2215.9 1487.4 li
2202.63 1487.4 2191.87 1476.64 2191.87 1463.36 cv
2191.87 1291.96 li
2191.87 1278.69 2202.63 1267.93 2215.9 1267.93 cv
2551.27 1267.93 li
2564.55 1267.93 2575.31 1278.69 2575.31 1291.96 cv
2575.31 1463.36 li
2575.31 1476.64 2564.55 1487.4 2551.27 1487.4 cv
cp
.968627 .8 .498039 rgb
f
2554.66 1267.93 mo
2520.59 1267.93 li
2531.99 1267.93 2541.24 1276.1 2541.24 1286.18 cv
2541.24 1469.14 li
2541.24 1479.22 2531.99 1487.4 2520.59 1487.4 cv
2554.66 1487.4 li
2566.06 1487.4 2575.31 1479.22 2575.31 1469.14 cv
2575.31 1286.18 li
2575.31 1276.1 2566.06 1267.93 2554.66 1267.93 cv
cp
.980392 .878431 .698039 rgb
f
2398.44 1199.97 mo
2395.92 1198.32 2398.61 1157 2398.61 1157 cv
2398.61 1157 2402.79 1038.04 2403.24 1031.62 cv
2456.67 921.788 li
2410.48 878.671 li
2410.48 878.671 2355.49 999.772 2353.7 1006.63 cv
2351.92 1013.49 2364.64 1175.17 2365.31 1189.44 cv
2365.31 1189.44 2355.64 1211 2352.63 1221.95 cv
2349.61 1232.9 2354.9 1243.94 2354.52 1247.16 cv
2354.46 1247.64 2366.47 1254.59 2369.66 1253.68 cv
2379.16 1250.96 2384.49 1250.18 2386.72 1250.69 cv
2399.95 1253.68 2395.57 1234.57 2397.75 1234.65 cv
2399.92 1234.74 2407.34 1234.65 2408.64 1234.65 cv
2410.61 1234.65 2412 1208.86 2398.44 1199.97 cv
cp
.972549 .643137 .572549 rgb
f
2380.36 920.46 mo
2440.91 967.269 li
2440.91 967.269 2467.64 941.862 2481.07 913.761 cv
2494.67 885.313 2485.16 801.098 2470.69 804.956 cv
2438.33 813.585 2380.36 920.46 2380.36 920.46 cv
cp
.980392 .878431 .698039 rgb
f
2597.62 772.152 mo
2597.62 791.037 li
2596.21 787.293 li
2596.38 787.605 2632.66 827.816 2650.81 915.926 cv
2652.5 924.51 li
2657.1 951.828 2658.19 967.903 2658.18 967.815 cv
2660.94 1006.74 2659.75 1022.32 2657.21 1054.86 cv
2656.74 1060.41 2649.12 1061.64 2646.92 1056.52 cv
2639.36 1038.89 2636.38 1020.68 2633.51 1003.05 cv
2631.21 987.903 2629.35 961.839 2629.36 961.93 cv
2628.94 958.667 2627.31 932.531 2618.37 888.938 cv
2605.75 831.185 2590.78 802.284 2587.61 794.781 cv
2587.51 794.659 2586.13 793.024 2586.21 793.113 cv
2586.21 789.73 2586.21 780.389 2586.21 772.152 cv
2586.21 769.002 2588.76 766.449 2591.91 766.449 cv
2595.06 766.449 2597.62 769.002 2597.62 772.152 cv
cp
.094118 .27451 .333333 rgb
f
2501.31 776.21 mo
2501.83 791.731 li
2501.83 794.858 li
2524.29 834.272 2556.36 923.89 2539.01 1014.15 cv
2532.54 1043.67 2518.01 1082.29 2490.63 1095.08 cv
2487.95 1096.73 2482.83 1094.39 2481.17 1091.71 cv
2479.52 1089.03 2486.29 1081.1 2486.25 1081.19 cv
2500.45 1054.83 2506.83 969.215 2505.83 944.825 cv
2505.21 889.285 2495.1 834.586 2490.23 798.473 cv
2489.91 776.775 li
2489.76 773.629 2492.18 770.952 2495.33 770.796 cv
2498.47 770.64 2501.15 773.064 2501.31 776.21 cv
cp
f
2684.02 1253.46 mo
2684.02 1253.46 2672.4 1238.98 2679.42 1233.94 cv
2686.44 1228.89 2715.5 1235.36 2717.59 1237.45 cv
2719.67 1239.53 2727.9 1246.88 2727.9 1246.88 cv
2684.02 1253.46 li
cp
.956863 .54902 .498039 rgb
f
3093.6 887.074 mo
3060.88 807.765 li
3045.72 771.021 2996.36 738.923 2960.31 755.661 cv
2871.33 568.009 li
2863.76 549.642 2842.72 540.895 2824.35 548.472 cv
2824.35 548.472 li
2805.99 556.05 2797.24 577.083 2804.82 595.451 cv
2892.75 780.911 li
2810.45 811.006 2886.81 919.726 2902.02 956.587 cv
2902.02 956.587 2877.06 1010.2 2889.96 1059.46 cv
2925.56 1195.34 3010.38 1204.79 3074.13 1178.49 cv
3112.88 1162.5 li
3176.62 1136.21 3175.07 1011.31 3141.66 941.481 cv
3132.69 922.733 3093.6 887.074 3093.6 887.074 cv
cp
.094118 .27451 .333333 rgb
f
3330.05 729.017 mo
3334.81 707.416 3339.46 685.679 3326.93 661.949 cv
3316.8 642.745 3299.27 631.695 3278.99 629.289 cv
3221.52 622.47 3216.46 673.827 3161.87 696.305 cv
3138.55 705.907 3114.63 703.16 3093.79 715.573 cv
3056.16 737.987 3070.02 765.117 3094.98 823.691 cv
3156.08 967.12 3261.2 884.065 3279.73 855.822 cv
3293.51 834.812 3327 742.921 3330.05 729.017 cv
cp
.07451 .215686 .356863 rgb
f
3296.89 802.725 mo
3266.06 812.358 3200.73 860.45 3196.55 859.437 cv
3120.47 798.889 li
3073.66 839.967 li
3073.66 839.967 3178.09 917.295 3184.03 920.129 cv
3188.41 922.224 3271.2 851.879 3314.55 830.685 cv
3313.94 816.577 3303.8 815.07 3296.89 802.725 cv
cp
.956863 .54902 .498039 rgb
f
3175.84 832.798 mo
3128.17 894.525 li
3128.17 894.525 3077.92 855.9 3059.39 835.121 cv
3036.91 809.909 3012.32 755.782 3015.95 753.803 cv
3026.13 748.246 3048.1 743.794 3063.25 747.181 cv
3115.69 758.896 3175.84 832.798 3175.84 832.798 cv
cp
.717647 .341176 .258824 rgb
f
3294.91 837.248 mo
3289.04 806.561 li
3289.04 806.561 3306.4 810.703 3317.44 827.868 cv
3328.49 845.033 3346.99 903.048 3350.14 904.765 cv
3353.3 906.481 3388.25 852.634 3394.36 844.146 cv
3401.92 833.648 3404.74 821.598 3409.47 812.443 cv
3414.21 803.289 3430.88 800.172 3437.19 801.316 cv
3443.5 802.46 3428.52 829.237 3428.52 829.237 cv
3428.52 829.237 3390.64 895.038 3378.02 931.084 cv
3365.4 967.131 3325.95 984.296 3319.63 979.147 cv
3313.32 973.997 3294.91 837.248 3294.91 837.248 cv
cp
.956863 .54902 .498039 rgb
f
3301.76 929.371 mo
3350 901.85 li
3350 901.85 3328.1 809.52 3289.04 806.561 cv
3301.76 929.371 li
cp
.968627 .8 .498039 rgb
f
3409.89 817.482 mo
3409.89 817.482 3411.47 810.554 3415.72 809.137 cv
3419.97 807.72 3427.37 808.979 3427.84 809.137 cv
3428.32 809.294 3436.5 804.885 3436.5 804.885 cv
3429.73 817.482 li
3429.73 817.482 3416.51 833.07 3412.1 827.245 cv
3407.69 821.418 3409.89 817.482 3409.89 817.482 cv
cp
.968627 .643137 .568627 rgb
f
3438.87 805.462 mo
3438.87 805.462 3443.64 829.764 3442.44 834.855 cv
3441.22 839.962 3438.18 837.225 3437.61 836.115 cv
3435.26 831.547 3433.62 815.96 3433.62 815.96 cv
3438.87 805.462 li
cp
.956863 .54902 .498039 rgb
f
3428.58 825.67 mo
3428.58 825.67 3430.86 840.742 3433.2 842.519 cv
3434.72 843.673 3436.66 842.991 3437.29 839.947 cv
3437.92 836.902 3434.25 818.322 3434.25 818.322 cv
3428.58 825.67 li
cp
f
3414.66 868.436 mo
3406.73 864.573 li
3440.4 795.501 li
3440.4 795.501 li
3444.78 797.634 3446.6 802.913 3444.46 807.291 cv
3414.66 868.436 li
cp
.094118 .27451 .333333 rgb
f
3100.22 1635.02 mo
3100.22 1635.02 3096.13 1676.57 3085.61 1684.2 cv
3075.09 1691.82 3061.06 1720.05 3068.08 1735.31 cv
3070.27 1740.08 3074.65 1742.83 3079.64 1744.37 cv
3094.42 1748.92 3110.15 1741.26 3116.44 1727.13 cv
3119.95 1719.24 3123.04 1708.71 3123.66 1695.45 cv
3125.24 1661.69 3135.76 1644.52 3135.76 1644.52 cv
3100.22 1635.02 li
cp
.968627 .643137 .568627 rgb
f
3261.88 1652.02 mo
3261.88 1652.02 3265.2 1693.95 3262.51 1707.57 cv
3261.06 1714.87 3253.04 1729.89 3256.72 1736.75 cv
3260.4 1743.62 3264.61 1745.34 3264.61 1745.34 cv
3360.04 1746.87 li
3365.23 1746.95 3361.8 1743.62 3357.61 1740.54 cv
3350.75 1735.51 3345.21 1732.18 3323.3 1721.6 cv
3321.87 1720.91 3316.67 1717.61 3314.79 1716.46 cv
3310.03 1713.56 3305.25 1709 3301.14 1704.43 cv
3294.29 1696.82 3293.69 1659.89 3293.69 1659.89 cv
3261.88 1652.02 li
cp
f
3336.47 1094.73 mo
3336.47 1094.73 3348.48 1162.8 3340.59 1207.42 cv
3332.7 1252.05 3294.83 1665.71 3294.83 1665.71 cv
3252.75 1668.08 li
3252.75 1668.08 3243.93 1495.29 3245.51 1471.26 cv
3247.08 1447.23 3259.57 1407.01 3259.57 1407.01 cv
3255.38 1267.5 li
3308.49 1084.22 li
3336.47 1094.73 li
cp
.717647 .341176 .258824 rgb
f
3212.78 1080.41 mo
3212.78 1080.41 3179.64 1130.19 3171.75 1171.38 cv
3163.86 1212.57 3177.54 1339.17 3162.37 1393.16 cv
3154.15 1422.38 3123.01 1467.51 3118.28 1505.27 cv
3113.54 1543.03 3094.97 1641.94 3094.97 1641.94 cv
3137.04 1650.27 li
3234.8 1403.23 li
3311.48 1179.96 li
3331.13 1064.96 li
3212.78 1080.41 li
cp
.956863 .454902 .345098 rgb
f
3239.6 797.198 mo
3239.6 797.198 3216.88 800.947 3199.96 817.51 cv
3163.67 853.033 3221.29 990.023 3224.44 1014.05 cv
3227.6 1038.08 3198.58 1094.14 3198.58 1094.14 cv
3198.58 1094.14 3307.01 1114.18 3336.47 1094.73 cv
3336.47 1094.73 3339.93 901.915 3336.77 884.75 cv
3333.62 867.584 3298.31 814.611 3291.99 807.745 cv
3285.68 800.878 3239.6 797.198 3239.6 797.198 cv
cp
.980392 .878431 .698039 rgb
f
3198.57 833.619 mo
3201.37 825.163 3210.95 821.089 3219.13 824.624 cv
3230.33 829.468 3245.8 838.662 3253.36 854.413 cv
3265.98 880.733 3310.17 971.137 3323.84 974.57 cv
3337.52 978.002 3393.27 880.733 3393.27 880.733 cv
3393.27 880.733 3391.7 863.567 3396.43 853.841 cv
3401.16 844.114 3415.37 833.814 3417.47 837.248 cv
3419.58 840.681 3409.58 849.264 3409.58 850.98 cv
3409.58 852.696 3413.79 853.841 3419.58 850.408 cv
3425.36 846.975 3428.5 840.032 3428.5 840.032 cv
3428.5 840.032 3437.99 857.274 3427.99 872.723 cv
3418 888.171 3413.79 894.465 3413.79 894.465 cv
3413.79 894.465 3349.09 1038.08 3325.42 1039.8 cv
3303.38 1041.4 3176.42 900.584 3198.57 833.619 cv
cp
.968627 .643137 .568627 rgb
f
3254.21 738.689 mo
3254.21 738.689 3253.98 739.979 3253.58 742.173 cv
3251.62 752.7 3244.09 787.622 3239 797.222 cv
3232.85 808.824 3260.05 845.827 3286.24 841.311 cv
3294.03 839.967 3279.65 807.312 3280.34 803.853 cv
3281.66 797.232 3283.46 788.198 3285.29 778.937 cv
3286.33 773.712 3287.38 768.414 3288.36 763.436 cv
3291.16 749.286 3293.45 737.713 3293.45 737.713 cv
3254.21 738.689 li
cp
.968627 .643137 .568627 rgb
f
3253.58 742.173 mo
3253.98 739.979 3254.21 738.689 3254.21 738.689 cv
3293.45 737.713 li
3293.45 737.713 3291.16 749.286 3288.36 763.436 cv
3287.38 768.386 3286.34 773.653 3285.31 778.85 cv
3279.25 777.96 3272.92 775.021 3266.58 769.477 cv
3259.66 763.432 3255.12 756.169 3252.38 748.414 cv
3252.87 745.939 3253.27 743.806 3253.58 742.173 cv
cp
.956863 .454902 .345098 rgb
f
3277.81 645.437 mo
3277.81 645.437 3261.81 647.656 3250.22 662.619 cv
3238.63 677.582 3226.13 723.854 3254.93 749.012 cv
3283.72 774.169 3312.18 745.692 3316.4 715.5 cv
3320.62 685.306 3319.76 644.347 3277.81 645.437 cv
cp
.968627 .643137 .568627 rgb
f
3325.61 705.182 mo
3322.18 711.85 3316.41 715.542 3312.73 713.429 cv
3309.05 711.315 3308.85 704.196 3312.29 697.527 cv
3315.72 690.859 3321.49 687.166 3325.17 689.28 cv
3328.85 691.394 3329.05 698.513 3325.61 705.182 cv
cp
f
3282.69 644.737 mo
3282.69 644.737 3257.98 688.74 3240.3 690.773 cv
3222.63 692.807 3220.31 716.188 3220.31 716.188 cv
3220.31 716.188 3226.63 662.311 3244.13 651.921 cv
3261.63 641.531 3282.69 644.737 3282.69 644.737 cv
cp
.0745098 .215686 .356863 rgb
f
3246.08 701.258 mo
3247.52 709.071 3244.63 716.238 3239.63 717.264 cv
3234.62 718.289 3229.4 712.786 3227.96 704.972 cv
3226.53 697.157 3229.42 689.991 3234.42 688.965 cv
3239.43 687.94 3244.65 693.443 3246.08 701.258 cv
cp
.968627 .643137 .568627 rgb
f
3119.3 1719.7 mo
3096.38 1723.87 3081.13 1710.49 3073.19 1700.47 cv
3067.36 1711.82 3063.79 1725.99 3068.08 1735.31 cv
3071.85 1743.52 3081.74 1744.18 3090.43 1744.51 cv
3099.61 1744.85 3108.59 1741.63 3113.14 1733.65 cv
3115.27 1729.92 3117.47 1725.28 3119.3 1719.7 cv
cp
.235294 .560784 .486275 rgb
f
3314.78 1716.46 mo
3289.54 1722.92 3270.88 1718.52 3260.45 1714.32 cv
3257.76 1721.94 3254.19 1731.49 3256.08 1736.99 cv
3258.4 1743.74 3261.7 1745.26 3264.61 1745.34 cv
3287.66 1745.94 3349.05 1746.76 3366.63 1746.99 cv
3369.08 1747.02 3370.44 1744.16 3368.86 1742.28 cv
3364.5 1737.08 3316.66 1717.6 3314.78 1716.46 cv
cp
f
3233.99 959.852 mo
3290.81 922.565 li
3290.81 922.565 3267.14 855.685 3241.09 832.011 cv
3215.05 808.336 3202.74 814.083 3197.3 818.99 cv
3182.21 832.603 3184.87 865.747 3202.03 906.585 cv
3219.2 947.423 3233.99 959.852 3233.99 959.852 cv
cp
.968627 .8 .498039 rgb
f
3144.75 1659.37 mo
3144.75 1659.37 3142.53 1698.51 3142.52 1698.59 cv
3141.71 1703.56 3138.5 1715.84 3138.5 1720.36 cv
3138.5 1737.33 3214.01 1705.95 3197.09 1698.43 cv
3195.56 1697.75 3187.53 1692.6 3187.03 1686.82 cv
3186.25 1677.92 3184.28 1659.92 3184.28 1659.92 cv
3144.75 1659.37 li
cp
.968627 .643137 .568627 rgb
f
3196.9 1698.27 mo
3196.9 1698.27 3179.17 1703.46 3170.09 1704.76 cv
3161.01 1706.05 3148.11 1699.85 3141.69 1702.8 cv
3134.62 1706.05 3136.93 1744.53 3136.93 1744.53 cv
3136.93 1744.53 3232.81 1746.99 3264.61 1745.34 cv
3275.72 1744.76 3233.15 1710.36 3196.9 1698.27 cv
cp
.956863 .454902 .345098 rgb
f
2978.38 1663.12 mo
2978.38 1663.12 2976.16 1702.27 2976.15 1702.35 cv
2975.33 1707.32 2972.13 1719.59 2972.13 1724.11 cv
2972.13 1741.08 3047.64 1709.71 3030.72 1702.18 cv
3029.19 1701.5 3018.78 1692.51 3018.28 1686.73 cv
3017.5 1677.83 3017.91 1663.67 3017.91 1663.67 cv
2978.38 1663.12 li
cp
.968627 .643137 .568627 rgb
f
3030.53 1702.02 mo
3030.53 1702.02 3012.8 1707.21 3003.72 1708.51 cv
2994.64 1709.81 2982.67 1698.88 2976.25 1701.83 cv
2969.18 1705.08 2967.36 1744.23 2967.36 1744.23 cv
2967.36 1744.23 3071.68 1748.87 3096.09 1745.39 cv
3107.11 1743.82 3066.78 1714.11 3030.53 1702.02 cv
cp
.956863 .454902 .345098 rgb
f
3098.05 1098.07 mo
3129.97 1111.84 li
3197.13 1432.56 li
3194.41 1672.99 li
3140.57 1674.24 li
3140.57 1674.24 3115.53 1463.93 3115.53 1447.63 cv
3115.53 1431.33 2999.55 1162.4 2999.55 1162.4 cv
3098.05 1098.07 li
cp
.207843 .32549 .537255 rgb
f
3073.4 1115.72 mo
3073.4 1115.72 3064.48 1359.01 3064.48 1400.66 cv
3064.48 1442.32 3051.77 1676.49 3051.77 1676.49 cv
2976.85 1678.94 li
2976.85 1678.94 2972.96 1607.88 2967.17 1503.34 cv
2966.26 1486.97 2968.34 1453.93 2967.17 1436.99 cv
2958.77 1315.08 2942.17 1200.32 2950.1 1154.83 cv
2951.38 1147.51 2953.78 1128.36 2958.45 1123.53 cv
2993.79 1086.97 3073.4 1115.72 3073.4 1115.72 cv
cp
.27451 .431373 .713726 rgb
f
2984.52 746.184 mo
2984.52 746.184 2947.29 751.361 2937.48 758.559 cv
2926.45 766.665 2914.2 784.802 2914.2 784.802 cv
2914.2 784.802 2959.92 1000.91 2960 1037.28 cv
2960.06 1065.41 2950.1 1134.49 2950.1 1134.49 cv
2950.1 1134.49 3088.25 1143.21 3140.58 1122.56 cv
3140.58 1122.56 3124.06 1040.4 3124.06 1018.83 cv
3124.06 997.254 3104.29 801.078 3099.79 787.377 cv
3095.71 774.947 3088.25 752.61 3063.01 747.102 cv
3037.77 741.594 2984.52 746.184 2984.52 746.184 cv
cp
.956863 .454902 .345098 rgb
f
2994.69 688 mo
2985.78 746.297 li
2985.78 746.297 3013.78 796.278 3033.88 790.046 cv
3050.74 784.817 3045.72 745.163 3045.72 745.163 cv
3045.72 745.163 3036.53 711.02 3039.28 693.934 cv
3042.04 676.848 2994.69 688 2994.69 688 cv
cp
.968627 .643137 .568627 rgb
f
3039.28 693.934 mo
3042.04 676.848 2994.69 688 2994.69 688 cv
2993.93 693.005 li
2995.31 696.353 2997 699.219 2999.06 701.416 cv
3009.64 712.722 3026.17 719.513 3040.46 720.027 cv
3039.03 710.814 3038.15 700.94 3039.28 693.934 cv
cp
.956863 .454902 .345098 rgb
f
2986.92 602.625 mo
2985.58 602.141 2976.19 671.356 2994.01 690.4 cv
3011.83 709.445 3046.54 715.678 3058.99 700.679 cv
3072.76 684.088 3072.07 609.698 3044.37 590.107 cv
3016.67 570.517 2986.92 602.625 2986.92 602.625 cv
cp
.968627 .643137 .568627 rgb
f
3033.83 553.083 mo
3012.42 557.419 2998.55 570.417 2993.45 575.956 cv
2983.73 577.096 2970.52 582.433 2956.87 604.875 cv
2940.09 632.469 2952.49 663.04 2972.02 678.039 cv
2982.57 686.142 2987.32 694.985 2989.46 701.403 cv
2990.24 703.743 2993.56 703.736 2994.36 701.403 cv
2994.36 701.403 li
2996.64 694.614 2997.57 687.415 2996.81 680.294 cv
2996.35 676.021 2995.43 671.401 2993.65 667.603 cv
2988.95 657.586 3003.74 650.931 3007.88 642.597 cv
3011.08 636.179 3011.23 621.499 3016.26 610.891 cv
3022.27 602.793 li
3022.27 602.793 3036.13 592.081 3049.69 595.104 cv
3063.25 598.126 3061.3 547.518 3033.83 553.083 cv
cp
.0745098 .215686 .356863 rgb
f
3006.97 654.914 mo
3007.12 663.359 3003.25 670.272 2998.34 670.355 cv
2993.43 670.438 2989.34 663.661 2989.2 655.216 cv
2989.06 646.771 2992.92 639.858 2997.83 639.775 cv
3002.74 639.691 3006.83 646.47 3006.97 654.914 cv
cp
.968627 .643137 .568627 rgb
f
3079.48 966.011 mo
3080.37 971.164 li
3080.83 973.814 3083.35 975.592 3086 975.132 cv
3192.79 956.638 li
3195.44 956.179 3197.22 953.658 3196.76 951.006 cv
3195.87 945.854 li
3195.41 943.202 3192.89 941.425 3190.24 941.884 cv
3083.45 960.379 li
3080.8 960.838 3079.02 963.359 3079.48 966.011 cv
cp
.07451 .215686 .356863 rgb
f
2928.1 774.013 mo
2940.62 773.649 2951.71 856.291 2943.76 864.443 cv
2935.82 872.595 2934.31 974.382 2934.31 974.382 cv
3052.5 971.444 li
3052.52 971.483 li
3054.82 969.938 3079.58 953.308 3083.12 949.673 cv
3086.84 945.86 3104.88 947.767 3109.66 953.01 cv
3114.43 958.252 3100.46 956.434 3096.32 958.397 cv
3091.69 960.586 3097.98 966.832 3097.98 966.832 cv
3097.98 966.832 3127.94 971.178 3133.77 964.982 cv
3139.61 958.786 3155.21 948.297 3157.33 954.494 cv
3158.43 957.691 3150.38 967.378 3145.85 971.444 cv
3151.51 967.21 3158.28 962.713 3160.6 963.496 cv
3164.85 964.926 3163.08 970.327 3160.78 971.916 cv
3158.48 973.505 3134.7 991.66 3130.99 992.931 cv
3127.36 994.172 3072.05 995.539 3062.5 997.655 cv
3062.5 997.655 2906.63 1033.15 2897.77 1030.93 cv
2890 1028.99 2882.22 979.101 2882.22 940.886 cv
2882.22 902.671 2888.95 775.146 2928.1 774.013 cv
cp
.968627 .643137 .568627 rgb
f
2944.35 755.159 mo
2944.35 755.159 2917.11 761.524 2900.02 785.489 cv
2882.13 810.574 2866.63 937.398 2866.63 937.398 cv
2937.36 948.833 li
2943.01 886.484 li
2961.9 857.964 li
2944.35 755.159 li
cp
.956863 .454902 .345098 rgb
f
3284.21 804.026 mo
3284.21 804.026 3289.1 798.597 3298.31 799.25 cv
3307.52 799.902 3319.58 811.556 3321.27 815.732 cv
3322.14 817.88 3316.35 834.857 3313.83 838.593 cv
3312.35 840.803 3308.93 841.902 3307.73 840.738 cv
3306.94 839.974 3307.77 836.115 3307.99 835.285 cv
3308.42 833.666 3311.47 823.17 3311.47 823.17 cv
3311.47 823.17 3305.52 833.75 3302.75 834.388 cv
3299.98 835.027 3298.45 832.783 3298.61 831.904 cv
3299.45 827.424 3304.09 818.816 3304.09 818.816 cv
3304.09 818.816 3297.11 829.048 3293.69 827.976 cv
3290.26 826.904 3291.69 823.258 3292.2 822.026 cv
3292.71 820.794 3297.48 813.73 3297.48 813.73 cv
3297.48 813.73 3289.92 824.195 3288.44 820.446 cv
3287.54 818.166 3292.48 808.248 3292.48 808.248 cv
3284.21 804.026 li
cp
.968627 .643137 .568627 rgb
f
2940.57 744.391 mo
3122.21 926.432 li
3122.21 948.833 li
2914.27 759.267 li
2940.57 744.391 li
cp
.094118 .27451 .333333 rgb
f
1108.15 1652.91 mo
1108.15 1652.91 1120.73 1665.35 1121.01 1669.91 cv
1121.3 1674.48 1122.13 1723.39 1116.99 1727.95 cv
1111.86 1732.52 1096.78 1735.76 1101.63 1740.89 cv
1105.29 1744.77 1133.48 1743.94 1152.17 1742.9 cv
1157.62 1742.6 1164.46 1698.48 1166.63 1692 cv
1169.76 1682.58 1181.07 1662.09 1178.21 1655.53 cv
1176.82 1652.33 1166.5 1645.04 1157.13 1638.91 cv
1147.28 1632.46 1137.85 1618.09 1137.85 1618.09 cv
1108.15 1652.91 li
cp
.968627 .643137 .568627 rgb
f
939.894 1683.47 mo
939.894 1683.47 949.643 1711.38 951.006 1715.32 cv
951.107 1715.61 955.295 1733.5 955.295 1738.14 cv
955.295 1755.58 877.707 1723.34 895.096 1715.61 cv
896.67 1714.91 901.607 1709.32 902.125 1703.39 cv
902.923 1694.24 895.589 1682.78 895.589 1682.78 cv
939.894 1683.47 li
cp
f
832.82 1071.55 mo
804.73 1144.3 li
804.73 1144.3 786.403 1317.91 797.075 1421.84 cv
801.538 1465.3 898.164 1697.98 898.164 1697.98 cv
946.155 1691.12 li
881.874 1415.59 li
905.528 1310.23 li
939.001 1101.95 li
832.82 1071.55 li
cp
.717647 .341176 .258824 rgb
f
965.15 1075.34 mo
989.251 1156.35 li
1025.9 1400.84 li
1149.86 1629.55 li
1149.86 1629.55 1131.22 1658.17 1111.21 1662.67 cv
935.271 1431.51 li
839.921 1142.13 li
843.268 1077.84 li
965.15 1075.34 li
cp
.956863 .454902 .345098 rgb
f
851.137 1021.26 mo
853.519 1014.95 877.407 889.919 877.407 889.919 cv
817.969 896.207 li
800.63 1002.06 li
779.663 992.414 762.097 984.322 762.097 984.322 cv
762.097 984.322 727.312 968.577 725.8 966.172 cv
724.522 964.137 727.622 963.163 718.097 947.037 cv
715.348 942.381 708.509 938.564 708.509 938.564 cv
708.509 938.564 700.061 933.935 698.4 935.545 cv
696.738 937.156 697.06 940.042 698.254 941.461 cv
699.449 942.881 703.028 944.326 704.222 945.746 cv
705.417 947.166 704.991 952.939 704.066 954.833 cv
703.145 956.726 678.714 942.279 678.714 942.279 cv
678.714 942.279 671.909 937.813 669.766 936.156 cv
667.938 934.744 662.797 930.097 662.797 930.097 cv
662.797 930.097 653.758 923.113 651.931 925.532 cv
649.693 928.496 678.627 953.023 677.691 954.587 cv
676.554 956.493 662.962 948.873 662.962 948.873 cv
662.962 948.873 657.392 943.852 654.333 942.487 cv
651.43 938.844 643.973 934.427 641.96 937.524 cv
641.589 938.097 649.556 946.548 649.556 946.548 cv
649.556 946.548 654.985 951.167 657.436 953.527 cv
661.759 957.689 669.682 961.704 672.826 964.29 cv
675.441 966.441 673.929 966.579 673.915 966.957 cv
673.904 967.249 670.023 964.921 664.645 961.821 cv
661.936 960.26 658.547 959.078 655.683 956.781 cv
653.032 954.656 648.963 952.25 646.479 950.862 cv
639.444 946.932 638.192 951.938 644.147 956.643 cv
646.416 958.436 648.901 960.368 651.428 962.316 cv
661.252 969.893 671.779 974.711 671.354 975.948 cv
670.802 977.553 652.128 967.63 652.128 967.63 cv
652.128 967.63 640.528 965.085 649.332 972.025 cv
659.549 980.077 668.96 984.117 669.387 984.271 cv
672.276 985.315 681.343 991.994 691.949 994.084 cv
702.555 996.174 719.544 998.946 719.544 998.946 cv
727.873 1003.67 796.165 1045.27 837.369 1069.46 cv
867.56 1032.71 li
864.116 1031.17 857.481 1028.14 849.146 1024.33 cv
850.274 1022.77 850.963 1021.72 851.137 1021.26 cv
cp
.972549 .643137 .572549 rgb
f
805.99 932.031 mo
874.394 939.109 li
874.394 939.109 877.531 882.27 877.531 855.156 cv
877.531 822.262 873.166 781.296 869.247 782.208 cv
858.247 784.768 845.035 789.518 836.215 801.801 cv
805.698 844.302 805.99 932.031 805.99 932.031 cv
cp
.235294 .560784 .486275 rgb
f
1156.51 1638.49 mo
1156.51 1638.49 1130.03 1719.72 1118.68 1723.72 cv
1115.67 1724.78 1098.71 1729.07 1095.99 1735.55 cv
1095.92 1735.72 1095.86 1735.91 1095.82 1736.13 cv
1094.94 1740.24 1098.38 1744.03 1102.58 1744.03 cv
1156.41 1744.03 li
1156.41 1744.03 1164.05 1707.58 1167.07 1691.56 cv
1167.07 1691.56 1183.07 1652.43 1181.29 1648.87 cv
1179.51 1645.31 1156.51 1638.49 1156.51 1638.49 cv
cp
.0941176 .27451 .333333 rgb
f
959.709 1743.9 mo
951.009 1715.33 li
951.009 1715.33 932.164 1723.45 922.833 1722.11 cv
913.504 1720.78 895.288 1715.45 895.288 1715.45 cv
858.048 1727.87 827.539 1733.9 833.088 1743.9 cv
833.088 1743.9 li
959.709 1743.9 li
cp
.235294 .560784 .486275 rgb
f
956.447 778.323 mo
956.447 778.323 992.655 783.358 1002.18 790.356 cv
1012.92 798.238 1032.94 829.669 1032.94 829.669 cv
1032.94 829.669 976.978 1033.17 979.655 1068.42 cv
982.333 1103.68 989.92 1155.9 989.92 1155.9 cv
989.92 1155.9 855.581 1164.38 804.702 1144.3 cv
804.702 1144.3 820.769 1064.41 820.769 1043.43 cv
820.769 1022.45 829.792 812.782 836.215 801.801 cv
842.638 790.82 855.581 784.572 880.128 779.216 cv
904.675 773.86 956.447 778.323 956.447 778.323 cv
cp
.313726 .74902 .647059 rgb
f
946.561 721.747 mo
955.523 780.427 li
955.523 780.427 924.218 830.499 904.679 824.439 cv
888.284 819.355 896.945 777.331 896.945 777.331 cv
896.945 777.331 900.071 765.718 902.071 752.792 cv
903.452 743.862 904.296 734.305 903.201 727.518 cv
900.521 710.903 946.561 721.747 946.561 721.747 cv
cp
.968627 .643137 .568627 rgb
f
903.201 727.518 mo
900.521 710.903 946.561 721.747 946.561 721.747 cv
947.304 726.614 li
945.956 729.869 944.31 732.656 942.312 734.792 cv
932.027 745.786 915.953 752.389 902.055 752.889 cv
903.446 743.931 904.3 734.329 903.201 727.518 cv
cp
.956863 .454902 .345098 rgb
f
954.114 638.731 mo
955.415 638.261 964.544 705.563 947.221 724.082 cv
929.897 742.6 896.144 748.661 884.037 734.076 cv
870.646 717.943 871.319 645.61 898.253 626.561 cv
925.188 607.511 954.114 638.731 954.114 638.731 cv
cp
.968627 .643137 .568627 rgb
f
916.707 596.941 mo
937.526 601.158 970.065 619.098 983.333 640.919 cv
999.646 667.75 987.599 697.477 968.608 712.062 cv
949.618 726.647 949.833 743.579 949.833 743.579 cv
946.88 734.78 li
944.665 728.179 943.76 721.179 944.501 714.254 cv
944.946 710.1 945.842 705.607 947.573 701.914 cv
952.141 692.174 937.762 685.703 933.73 677.599 cv
930.626 671.359 930.475 657.084 925.584 646.77 cv
919.743 638.896 li
919.743 638.896 906.581 630.919 893.083 631.418 cv
884.937 631.72 889.997 591.531 916.707 596.941 cv
cp
.956863 .454902 .345098 rgb
f
934.616 689.576 mo
934.479 697.787 938.236 704.509 943.009 704.59 cv
947.782 704.671 951.762 698.08 951.899 689.869 cv
952.037 681.658 948.28 674.936 943.507 674.855 cv
938.734 674.774 934.753 681.364 934.616 689.576 cv
cp
.968627 .643137 .568627 rgb
f
1012.41 1744.63 mo
982.604 1744.63 li
982.604 1722.14 li
1012.41 1722.14 li
1012.41 1744.63 li
cp
.07451 .215686 .356863 rgb
f
1041 1240.13 mo
1041 1237.47 1042.98 1235.31 1045.41 1235.31 cv
1121.16 1235.31 li
1123.6 1235.31 1125.58 1237.47 1125.58 1240.13 cv
1125.58 1373.87 li
1139 1373.87 li
1139 1240.13 li
1139 1229.38 1131 1220.64 1121.16 1220.64 cv
1045.41 1220.64 li
1035.58 1220.64 1027.57 1229.38 1027.57 1240.13 cv
1027.57 1373.87 li
1041 1373.87 li
1041 1240.13 li
cp
.207843 .32549 .537255 rgb
f
1180.55 1745.64 mo
999.256 1735.47 li
989.566 1735.47 981.71 1727.23 981.71 1717.05 cv
964.522 1394.54 li
963.983 1371.99 989.566 1368.42 999.256 1368.42 cv
1196.53 1368.42 li
1206.22 1368.42 1214.08 1376.67 1214.08 1386.85 cv
1214.08 1717.05 li
1214.15 1734.17 1197.32 1745.35 1180.55 1745.64 cv
cp
.07451 .215686 .356863 rgb
f
1175.19 1745.61 mo
986.107 1745.61 li
974.155 1745.61 964.466 1735.92 964.466 1723.97 cv
964.466 1400.2 li
964.466 1388.25 974.156 1378.56 986.108 1378.56 cv
1175.19 1378.56 li
1187.15 1378.56 1196.83 1388.25 1196.83 1400.2 cv
1196.83 1723.97 li
1196.83 1735.92 1187.15 1745.61 1175.19 1745.61 cv
cp
.27451 .431373 .713726 rgb
f
1153.72 1745.61 mo
1009.59 1745.61 li
1009.59 1557.17 li
1009.59 1520.56 1039.26 1490.89 1075.87 1490.89 cv
1087.45 1490.89 li
1124.05 1490.89 1153.72 1520.56 1153.72 1557.17 cv
1153.72 1745.61 li
cp
.207843 .32549 .537255 rgb
f
1086.52 1354.58 mo
1104.78 1354.58 1120.25 1362.67 1120.88 1372.39 cv
1135.52 1372.39 li
1134.98 1356.39 1113.26 1343.52 1086.52 1343.52 cv
1059.79 1343.52 1038.07 1356.39 1037.52 1372.39 cv
1052.17 1372.39 li
1052.8 1362.67 1068.27 1354.58 1086.52 1354.58 cv
cp
.07451 .215686 .356863 rgb
f
1114.52 1236.4 mo
1052.95 1236.4 li
1048.53 1236.4 1044.94 1232.82 1044.94 1228.39 cv
1044.94 1225.7 li
1044.94 1221.28 1048.53 1217.69 1052.95 1217.69 cv
1114.52 1217.69 li
1118.94 1217.69 1122.53 1221.28 1122.53 1225.7 cv
1122.53 1228.39 li
1122.53 1232.82 1118.94 1236.4 1114.52 1236.4 cv
cp
f
1000.65 919.622 mo
1000.65 919.622 1047.72 1001.99 1050.07 1023.96 cv
1052.42 1045.92 1059.51 1176.91 1059.51 1176.91 cv
1059.51 1176.91 1050.07 1233.41 1054.78 1238.12 cv
1059.48 1242.83 1072.82 1241.26 1076.74 1242.04 cv
1079.65 1242.62 1089.02 1241.48 1093.67 1240.85 cv
1095.42 1240.61 1097.12 1240.13 1098.72 1239.42 cv
1105.19 1236.42 li
1105.19 1236.42 1091.68 1183.12 1092.06 1179.24 cv
1092.43 1175.36 1103.41 1029.45 1097.14 1000.42 cv
1090.86 971.397 1048.5 874.123 1048.5 874.123 cv
1000.65 919.622 li
cp
.972549 .643137 .572549 rgb
f
1080.63 926.162 mo
1017.38 959.107 li
1017.38 959.107 996.817 911.113 983.388 882.751 cv
969.794 854.041 988.689 786.765 1003.16 790.658 cv
1035.52 799.367 1080.63 926.162 1080.63 926.162 cv
cp
.588235 .85098 .788235 rgb
f
911.09 1130.3 mo
911.725 1140.96 912.299 1151.64 912.814 1162.31 cv
913.768 1177.95 898.672 1191.9 879.364 1191.93 cv
854.267 1192 829.306 1190.24 804.675 1186.72 cv
785.715 1184.02 773.75 1168.33 777.463 1153.12 cv
779.869 1142.7 782.215 1132.28 784.501 1121.84 cv
788.05 1106.56 803.03 1096.84 818.412 1098.97 cv
838.843 1101.84 859.57 1103.23 880.431 1103.11 cv
896.126 1103.05 909.974 1114.65 911.09 1130.3 cv
cp
.094118 .27451 .333333 rgb
f
986.231 1115.22 mo
986.231 1115.22 933.036 1130.11 906.596 1134.47 cv
908.485 1161.49 li
989.92 1155.9 li
986.231 1115.22 li
cp
f
901.647 1130.3 mo
902.281 1140.96 902.856 1151.64 903.371 1162.31 cv
904.325 1177.95 889.229 1191.9 869.921 1191.93 cv
844.824 1192 819.863 1190.24 795.232 1186.72 cv
776.272 1184.02 764.307 1168.33 768.02 1153.12 cv
770.426 1142.7 772.771 1132.28 775.059 1121.84 cv
778.607 1106.56 793.587 1096.84 808.969 1098.97 cv
829.4 1101.84 850.128 1103.23 870.988 1103.11 cv
886.683 1103.05 900.531 1114.65 901.647 1130.3 cv
cp
.235294 .560784 .486275 rgb
f
843.411 1138.73 mo
812.568 1138.73 786.753 1130.15 785.211 1129.62 cv
787.03 1124.26 li
787.558 1124.44 840.252 1141.93 883.874 1126.86 cv
885.725 1132.21 li
871.752 1137.04 857.085 1138.73 843.411 1138.73 cv
cp
.094118 .27451 .333333 rgb
f
868.419 1137.49 mo
864.351 1138.16 li
863.146 1138.35 862.01 1137.54 861.811 1136.33 cv
861.424 1133.99 li
861.225 1132.79 862.04 1131.65 863.244 1131.45 cv
867.313 1130.78 li
868.517 1130.58 869.654 1131.4 869.853 1132.6 cv
870.24 1134.94 li
870.438 1136.15 869.624 1137.29 868.419 1137.49 cv
cp
.207843 .32549 .537255 rgb
f
866.356 1136.49 mo
870.011 1143.8 li
866.041 1144.35 li
866.356 1136.49 li
cp
867.33 1134.22 mo
864.536 1134.77 li
864.064 1146.53 li
872.877 1145.31 li
867.33 1134.22 li
cp
.07451 .215686 .356863 rgb
f
1199.78 1315.08 mo
1125.48 1315.08 li
1125.48 1285.52 li
1199.78 1285.52 li
1199.78 1315.08 li
cp
.607843 .756863 .976471 rgb
f
1259.4 809.365 mo
1255.36 898.145 1230.39 906.01 1229.9 907.242 cv
1229.38 907.339 1209.44 922.62 1187.37 902.406 cv
1194.7 894.993 li
1197.86 898.201 1202.67 901.09 1207.26 902.382 cv
1217.51 905.042 1224.15 899.949 1224.96 899.706 cv
1225.5 899.275 1230.74 896.118 1233.36 891.808 cv
1246.17 874.737 1252.28 830.378 1254.01 809.179 cv
1259.4 809.365 li
cp
.207843 .32549 .537255 rgb
f
1518.67 744.468 mo
1518.67 744.468 1507.84 786.773 1506.61 821.157 cv
1505.37 855.539 1481.59 884.216 1478.5 970.269 cv
1475.41 1056.32 1463.07 1135.42 1463.07 1135.42 cv
1463.07 1135.42 1367.27 1142.06 1348.41 1121.8 cv
1329.55 1101.53 1277.27 920.992 1295.92 831.439 cv
1314.57 741.886 1293.02 713.808 1335.63 684.473 cv
1378.23 655.137 1433.64 675.015 1457.1 682.98 cv
1480.55 690.945 1519.35 725.499 1518.67 744.468 cv
cp
.094118 .27451 .333333 rgb
f
1357.58 816.216 mo
1357.58 816.216 1349.16 884.354 1357.67 953.943 cv
1366.17 1023.53 1352.63 1160.82 1352.63 1160.82 cv
1352.63 1160.82 1281.27 1210.48 1260.3 1171.05 cv
1256.36 1163.65 1246.94 1075.7 1246.09 1038.93 cv
1245.01 992.113 1252.98 805.335 1252.98 805.335 cv
1252.98 805.335 1278.48 774.671 1357.58 816.216 cv
cp
.968627 .8 .498039 rgb
f
1336.92 731.539 mo
1312.59 738.025 1308.54 831.505 1308.54 831.505 cv
1231.41 822.691 li
1231.41 822.691 1245.47 725.214 1286.2 684.48 cv
1326.94 643.747 1429.88 668.647 1469.01 694.008 cv
1508.15 719.369 1491.17 751.674 1491.17 751.674 cv
1491.17 751.674 1361.25 725.052 1336.92 731.539 cv
cp
.07451 .215686 .356863 rgb
f
1372.33 910.218 mo
1428.63 910.218 1476.54 854.587 1479.33 851.72 cv
1481.39 836.473 li
1480.74 837.146 1424.64 896.325 1372.74 896.325 cv
1372.33 910.218 li
cp
f
1357.21 942.15 mo
1356.45 930.576 li
1331.45 927.867 1271.78 872.639 1249.63 851.125 cv
1249.3 865.543 li
1252.66 868.807 1323.55 938.504 1357.21 942.15 cv
cp
f
1360.86 1030.83 mo
1360.63 1019.57 li
1341.36 1028.02 1271.88 1022.55 1245.32 1019.57 cv
1245.46 1030.54 li
1269.96 1033.26 1338.15 1040.78 1360.86 1030.83 cv
cp
f
1357.4 1102.08 mo
1358.4 1089.42 li
1335.35 1099.41 1275.14 1124.83 1251.8 1119.76 cv
1253.11 1130.31 li
1279.91 1136.12 1332.42 1112.87 1357.4 1102.08 cv
cp
f
1355.07 1142.91 mo
1355.87 1132.5 li
1345.79 1132.5 1286.51 1107.77 1248.88 1092.13 cv
1250.34 1104.76 li
1260.51 1108.99 1339.6 1142.91 1355.07 1142.91 cv
cp
f
1323.65 1136.04 mo
1347.53 1136.04 li
1356.14 1136.04 1363.12 1129.06 1363.12 1120.45 cv
1363.12 980.993 li
1363.12 972.38 1356.14 965.398 1347.53 965.398 cv
1323.65 965.398 li
1315.04 965.398 1308.05 972.38 1308.05 980.993 cv
1308.05 1120.45 li
1308.05 1129.06 1315.04 1136.04 1323.65 1136.04 cv
cp
.313726 .74902 .647059 rgb
f
1363.12 1027.69 mo
1308.05 1027.69 li
1308.05 1016.2 li
1363.12 1016.2 li
1363.12 1027.69 li
cp
.07451 .215686 .356863 rgb
f
1319.05 1616.44 mo
1319.05 1616.44 1293.54 1639.78 1293.48 1639.82 cv
1289.91 1642.46 1280.33 1648.23 1277.54 1651.08 cv
1267.09 1661.79 1334.07 1688.5 1328.02 1673.33 cv
1327.47 1671.95 1326.45 1659.87 1329.69 1655.92 cv
1334.68 1649.82 1343.66 1641.14 1343.66 1641.14 cv
1319.05 1616.44 li
cp
.968627 .643137 .568627 rgb
f
1328 1673.11 mo
1328 1673.11 1313.62 1665.47 1307.09 1660.7 cv
1300.56 1655.92 1299.73 1641.65 1293.86 1639.56 cv
1287.4 1637.26 1260.25 1664.93 1260.25 1664.93 cv
1260.25 1664.93 1313.32 1722.42 1341.09 1741.57 cv
1347.07 1745.7 1354.32 1744.38 1356.89 1744.43 cv
1366.7 1744.6 1343.43 1703.06 1328 1673.11 cv
cp
.094118 .27451 .333333 rgb
f
1640.23 1661.7 mo
1640.23 1661.7 1648.15 1699.91 1648.16 1699.99 cv
1648.65 1704.98 1648.72 1717.61 1649.88 1721.95 cv
1654.24 1738.27 1718.8 1688.71 1700.59 1685.82 cv
1698.94 1685.56 1690.75 1682.28 1687.94 1677.24 cv
1683.04 1668.48 1678.39 1652.07 1678.39 1652.07 cv
1640.23 1661.7 li
cp
.968627 .643137 .568627 rgb
f
1700.37 1685.71 mo
1700.37 1685.71 1684.65 1695.26 1676.25 1698.84 cv
1667.86 1702.42 1652.49 1692.48 1647.07 1696.97 cv
1641.11 1701.91 1650.82 1745.67 1650.82 1745.67 cv
1650.82 1745.67 1761.26 1716.5 1784.75 1701.35 cv
1794.06 1695.35 1738.33 1688.04 1700.37 1685.71 cv
cp
.094118 .27451 .333333 rgb
f
1717.58 1110.76 mo
1699.96 1103.02 1699.22 1106.22 1696.99 1105.17 cv
1694.35 1103.93 1674.89 1070.89 1674.89 1070.89 cv
1674.89 1070.89 1616.86 973.902 1613.92 968.551 cv
1602.36 851.682 li
1540.88 842.835 li
1540.88 842.835 1556.95 969.532 1558.99 975.973 cv
1561.02 982.415 1655.5 1104.07 1663.45 1115.06 cv
1663.45 1115.06 1667.84 1131.74 1670.95 1142.12 cv
1674.07 1152.49 1681.82 1160.82 1683.16 1163.59 cv
1683.36 1164 1688.4 1172.96 1697.68 1182.29 cv
1705.68 1190.32 1702 1179 1702 1179 cv
1702 1179 1690.03 1161.43 1691.65 1160.7 cv
1692.9 1160.14 1698.84 1170.13 1707.59 1179.12 cv
1709.84 1181.43 1712.07 1183.7 1714.14 1185.77 cv
1719.56 1191.2 1724.66 1189.4 1719.95 1182.8 cv
1718.28 1180.47 1715.42 1176.66 1712.97 1174.25 cv
1710.33 1171.64 1708.8 1168.38 1706.94 1165.84 cv
1703.24 1160.81 1700.47 1157.19 1700.77 1157.14 cv
1701.16 1157.09 1701.17 1155.56 1703.64 1157.94 cv
1706.61 1160.79 1711.49 1168.27 1716.2 1172.13 cv
1718.88 1174.32 1724.16 1179.24 1724.16 1179.24 cv
1724.16 1179.24 1733.63 1185.17 1734.2 1184.73 cv
1737.24 1182.38 1732.01 1176.51 1727.96 1174.01 cv
1726.27 1171.11 1720.56 1166.09 1720.56 1166.09 cv
1720.56 1166.09 1711.42 1153.35 1713.31 1152 cv
1714.11 1151.42 1720.69 1158.55 1728.31 1164.52 cv
1735.39 1170.06 1743.51 1174.5 1744.9 1173.26 cv
1747.26 1171.17 1740.1 1164.18 1740.1 1164.18 cv
1740.1 1164.18 1734.81 1159.55 1733.18 1157.88 cv
1731.27 1155.92 1726.02 1149.61 1726.02 1149.61 cv
1726.02 1149.61 1708.83 1126.78 1710.71 1125.65 cv
1712.6 1124.51 1718.57 1123.45 1720.15 1124.49 cv
1721.74 1125.52 1723.56 1128.94 1725.14 1129.98 cv
1726.72 1131.02 1729.75 1131.02 1731.28 1129.18 cv
1732.81 1127.34 1727.24 1119.4 1727.24 1119.4 cv
1727.24 1119.4 1722.67 1112.99 1717.58 1110.76 cv
cp
.972549 .643137 .572549 rgb
f
1545.95 744.762 mo
1593.53 756.06 1605.52 861.904 1608.4 875.573 cv
1592.63 881.097 1573.92 886.669 1557.73 891.374 cv
1538.35 742.627 li
1538.35 742.627 1541.04 743.597 1545.95 744.762 cv
cp
.235294 .560784 .486275 rgb
f
1580.79 1137.46 mo
1649.23 1410.11 li
1692.5 1674.15 li
1638.62 1681.39 li
1638.62 1681.39 1562.73 1479.47 1560.62 1456.23 cv
1558.51 1432.99 1520.41 1324.35 1520.41 1324.35 cv
1580.79 1137.46 li
cp
.207843 .32549 .537255 rgb
f
1421.07 1105.9 mo
1421.07 1105.9 1426.19 1367.32 1421.97 1391.62 cv
1417.74 1415.91 1303.09 1623.18 1303.09 1623.18 cv
1341.69 1665 li
1341.69 1665 1505.74 1475.42 1512.97 1458.7 cv
1524.3 1432.49 1580.26 1136.93 1580.26 1136.93 cv
1421.07 1105.9 li
cp
.07451 .215686 .356863 rgb
f
1483.94 744.136 mo
1483.94 744.136 1454.87 741.479 1443.25 768.942 cv
1431.63 796.406 1420.01 928.443 1425.29 991.82 cv
1430.58 1055.2 1414.27 1129.76 1414.27 1129.76 cv
1515.59 1182.02 1581.63 1138.65 1581.63 1138.65 cv
1581.63 1138.65 1608.38 896.124 1598.53 851.333 cv
1577.93 757.718 1538.35 742.627 1538.35 742.627 cv
1483.94 744.136 li
cp
.588235 .85098 .788235 rgb
f
1403.44 1180.89 mo
1392.46 1163.06 1390 1165.59 1388.65 1163.27 cv
1387.06 1160.52 1388.83 1118.07 1388.83 1118.07 cv
1388.83 1118.07 1393.23 992.932 1393.7 986.185 cv
1449.9 870.649 li
1401.32 825.295 li
1401.32 825.295 1343.47 952.682 1341.59 959.894 cv
1339.71 967.106 1353.09 1137.18 1353.8 1152.19 cv
1353.8 1152.19 1348.16 1170.34 1345 1181.85 cv
1341.83 1193.37 1343.86 1205.79 1343.46 1209.18 cv
1343.4 1209.68 1342.71 1221.04 1345.52 1235.31 cv
1347.93 1247.61 1351.15 1234.88 1351.15 1234.88 cv
1351.15 1234.88 1350.67 1211.32 1352.5 1211.62 cv
1353.91 1211.85 1353.42 1224.72 1355.96 1238.36 cv
1356.61 1241.86 1357.27 1245.32 1357.89 1248.49 cv
1359.54 1256.81 1365.01 1258.21 1364.64 1249.24 cv
1364.51 1246.07 1364.17 1240.81 1363.41 1237.09 cv
1362.59 1233.07 1363.1 1229.12 1362.91 1225.63 cv
1362.54 1218.72 1362.18 1213.68 1362.47 1213.83 cv
1362.85 1214.01 1363.72 1212.6 1364.53 1216.3 cv
1365.49 1220.75 1365.51 1230.64 1367.43 1237.07 cv
1368.51 1240.72 1370.34 1248.48 1370.34 1248.48 cv
1370.34 1248.48 1375.23 1259.71 1375.97 1259.65 cv
1379.96 1259.3 1378.73 1250.69 1376.61 1245.92 cv
1376.79 1242.2 1374.65 1234.09 1374.65 1234.09 cv
1374.65 1234.09 1373.92 1216.74 1376.32 1216.62 cv
1377.35 1216.57 1379.04 1227.17 1382.31 1237.32 cv
1385.33 1246.74 1389.9 1255.77 1391.81 1255.46 cv
1395.05 1254.94 1392.78 1244.12 1392.78 1244.12 cv
1392.78 1244.12 1390.79 1236.63 1390.32 1234.09 cv
1389.76 1231.12 1388.76 1222.08 1388.76 1222.08 cv
1388.76 1222.08 1386.72 1190.49 1389 1190.58 cv
1391.29 1190.67 1397.1 1193.28 1397.89 1195.2 cv
1398.69 1197.12 1398.33 1201.4 1399.13 1203.32 cv
1399.92 1205.24 1402.56 1207.07 1404.94 1206.28 cv
1407.31 1205.5 1406.96 1194.77 1406.96 1194.77 cv
1406.96 1194.77 1406.61 1186.04 1403.44 1180.89 cv
cp
.972549 .643137 .572549 rgb
f
1377.39 859.117 mo
1441.08 908.355 li
1441.08 908.355 1469.2 881.629 1483.33 852.069 cv
1497.63 822.146 1480.21 743.294 1464.99 747.353 cv
1430.95 756.43 1377.39 859.117 1377.39 859.117 cv
cp
.235294 .560784 .486275 rgb
f
1515.11 578.833 mo
1515.11 578.833 1493.33 561.526 1481.21 587.616 cv
1481.3 587.41 1473.06 586.795 1471.91 587.072 cv
1467.02 588.252 1462 592.736 1457.53 595.046 cv
1441.61 603.277 1433.04 621.152 1430.75 638.031 cv
1427.96 658.52 1435.3 674.291 1447.77 690.302 cv
1451.45 695.021 1455.41 699.659 1460.48 702.902 cv
1466.59 706.816 1471.89 704.562 1477.78 706.5 cv
1482.75 708.133 1484.07 713.545 1490.22 712.15 cv
1498.83 710.194 1508.53 700.617 1518.79 703.017 cv
1529.03 705.414 1553.8 698.247 1553.86 698.229 cv
1585.68 689.013 1569.98 628.689 1565.89 607.404 cv
1562.04 587.391 1534.77 573.362 1515.11 578.833 cv
cp
.607843 .756863 .976471 rgb
f
1531.35 714.269 mo
1537.48 736.391 li
1540.75 748.742 li
1540.75 748.742 1552.46 763.519 1545.65 766.809 cv
1516.86 780.698 1491.07 745.7 1491.07 745.7 cv
1485.53 677.266 li
1531.35 714.269 li
cp
.968627 .643137 .568627 rgb
f
1487.33 699.444 mo
1499.21 721.48 1521.99 733.006 1537.54 736.6 cv
1531.35 714.269 li
1485.53 677.266 li
1487.33 699.444 li
cp
.956863 .454902 .345098 rgb
f
1500.91 608.743 mo
1520.22 599.256 1543.57 609.65 1549.43 629.746 cv
1551.97 638.481 1554.7 649.527 1556.58 661.748 cv
1561.11 691.14 1549.47 721.841 1535.86 723.619 cv
1522.25 725.396 1482.05 711.235 1475.04 669.585 cv
1470.71 643.87 1480.65 618.698 1500.91 608.743 cv
cp
.968627 .643137 .568627 rgb
f
1485.51 671.583 mo
1486.39 678.082 1482.72 683.923 1477.31 684.629 cv
1471.91 685.335 1466.81 680.639 1465.93 674.139 cv
1465.05 667.64 1468.73 661.799 1474.13 661.093 cv
1479.54 660.386 1484.63 665.083 1485.51 671.583 cv
cp
f
1525.73 687 mo
1525.73 687 1507.63 691.171 1505.64 697.408 cv
1503.65 703.644 1505.01 713.008 1513.02 720.797 cv
1521.03 728.585 1539.85 725.779 1545.22 722.317 cv
1550.59 718.854 1555.85 702.695 1551.62 693.089 cv
1547.39 683.484 1525.73 687 1525.73 687 cv
cp
.607843 .756863 .976471 rgb
f
1518.83 699.82 mo
1518.83 699.82 1518.32 706.913 1520.61 708.39 cv
1522.84 709.823 1525.71 711.111 1528.42 711.596 cv
1532.81 712.38 1536.97 710.858 1539.6 707.699 cv
1539.85 707.387 1540.09 707.063 1540.3 706.724 cv
1542.41 703.344 1543.31 697.134 1543.31 697.134 cv
1543.31 697.134 1536.04 694.744 1531.66 695.088 cv
1527.29 695.433 1518.83 699.82 1518.83 699.82 cv
cp
.968627 .643137 .568627 rgb
f
1520.29 876.872 mo
1521.62 822.325 1518.22 747.355 1466.02 726.085 cv
1447.37 718.286 1424.59 727.053 1407.32 733.459 cv
1407.32 733.459 li
1428.52 730.506 1448.51 738.648 1458.83 744.416 cv
1501.8 766.065 1501.46 828.091 1499.91 876.395 cv
1495.99 997.852 1402.6 984.987 1402.6 984.987 cv
1400.43 993.072 li
1400.43 993.072 1435.51 1004.55 1480.26 982.539 cv
1515.95 964.988 1520.29 876.872 1520.29 876.872 cv
cp
.094118 .27451 .333333 rgb
f
1101.85 418.264 mo
1093.48 433.726 li
1067.12 423.007 li
1052.09 444.106 li
1031.05 439.311 li
1028.62 449.963 li
1056.76 456.377 li
1071 436.382 li
1098.43 447.533 li
1111.03 424.265 li
1101.85 418.264 li
cp
.313726 .74902 .647059 rgb
f
2969.52 262.284 mo
2962.66 280.198 li
2977.76 289.094 li
2968.52 309.073 li
2989.45 313.29 li
2980.07 336.026 li
2998.12 342.178 li
2992.96 364.405 li
2983.44 364.944 li
2987.3 348.325 li
2968.25 341.834 li
2977.27 319.979 li
2955.99 315.69 li
2966.19 293.644 li
2951.44 284.956 li
2957.8 268.352 li
2946.13 264.794 li
2951.35 256.743 li
2969.52 262.284 li
cp
.607843 .756863 .976471 rgb
f
739.448 577.712 mo
754.632 605.468 744.442 640.274 716.687 655.452 cv
688.932 670.631 654.122 660.434 638.937 632.678 cv
623.751 604.921 633.942 570.116 661.697 554.938 cv
689.452 539.759 724.263 549.956 739.448 577.712 cv
cp
.968627 .8 .498039 rgb
f
666.679 627.851 mo
674.797 642.69 693.409 648.142 708.249 640.027 cv
723.088 631.912 728.536 613.303 720.417 598.463 cv
666.679 627.851 li
cp
.937255 .937255 .937255 rgb
f
2158.69 293.116 mo
2136.27 298.721 li
2123.27 263.637 li
2089.47 267.788 li
2075.45 243.123 li
2062.96 250.222 li
2081.72 283.209 li
2113.75 279.276 li
2127.27 315.773 li
2161.01 307.34 li
2158.69 293.116 li
cp
.27451 .431373 .713726 rgb
f
1646.39 446.117 mo
1668.25 439.236 li
1668.25 439.236 1689.74 410.011 1688.39 402.317 cv
1687.04 394.624 1677.86 380.209 1681.57 376.966 cv
1685.28 373.722 1693.92 369.477 1702.57 377.638 cv
1708.85 383.562 1713.08 410.702 1716.18 411.688 cv
1718.12 412.304 1730.79 408.71 1740.01 405.933 cv
1746.07 404.106 1752.66 405.862 1757.12 410.485 cv
1757.13 410.499 li
1760.14 413.624 1760.61 418.442 1758.25 422.051 cv
1754.58 427.67 li
1759.98 431.752 li
1764 434.792 1764.88 440.53 1761.95 444.599 cv
1758.96 448.746 li
1762.52 451.038 li
1767.1 453.991 1768.18 460.303 1764.83 464.574 cv
1762.12 468.043 li
1762.92 468.86 li
1766.26 472.257 1766.51 477.655 1763.5 481.293 cv
1760.73 484.642 li
1702.51 502.956 li
1697.05 504.672 1691.3 505.234 1685.6 504.609 cv
1664.04 507.602 li
1661.72 507.924 1659.5 506.473 1658.83 504.191 cv
1643.31 452.053 li
1642.56 449.534 1643.93 446.891 1646.39 446.117 cv
cp
.980392 .878431 .698039 rgb
f
2707.65 316.208 mo
2687.56 314.586 li
2684.82 333.172 li
2664.95 332.448 li
2660.14 349.887 li
2645.19 351.775 li
2646.14 359.346 li
2666.14 356.82 li
2670.7 340.294 li
2691.37 341.047 li
2694.07 322.767 li
2712.27 324.237 li
2707.65 316.208 li
cp
.956863 .54902 .498039 rgb
f
929.575 424.828 mo
915.942 440.031 li
920.736 459.88 li
921.124 461.483 919.504 462.835 917.996 462.167 cv
899.325 453.899 li
881.929 464.593 li
880.523 465.457 878.737 464.334 878.907 462.693 cv
881 442.381 li
865.454 429.141 li
864.198 428.071 864.714 426.026 866.327 425.68 cv
886.292 421.394 li
894.08 402.518 li
894.709 400.993 896.813 400.851 897.642 402.278 cv
907.887 419.942 li
928.246 421.515 li
929.892 421.642 930.676 423.601 929.575 424.828 cv
cp
.996078 .827451 .2 rgb
f
1260.06 341.536 mo
1243.74 346.55 li
1238.63 362.832 li
1238.21 364.147 1236.47 364.417 1235.68 363.289 cv
1225.87 349.324 li
1208.8 349.488 li
1207.42 349.501 1206.63 347.928 1207.46 346.825 cv
1217.71 333.18 li
1212.28 317 li
1211.84 315.692 1213.09 314.45 1214.39 314.896 cv
1230.54 320.429 li
1244.25 310.265 li
1245.36 309.443 1246.92 310.249 1246.9 311.627 cv
1246.63 328.692 li
1260.53 338.59 li
1261.66 339.39 1261.38 341.131 1260.06 341.536 cv
cp
f
1473.12 477.45 mo
1473.12 481.344 1455.16 484.501 1433.02 484.501 cv
1410.87 484.501 1392.92 481.344 1392.92 477.45 cv
1392.92 473.556 1410.87 470.399 1433.02 470.399 cv
1455.16 470.399 1473.12 473.556 1473.12 477.45 cv
cp
.956863 .54902 .498039 rgb
f
1433.02 398.63 mo
1425.28 398.63 1419 392.356 1419 384.617 cv
1419 376.878 1425.28 370.604 1433.02 370.604 cv
1440.76 370.604 1447.03 376.878 1447.03 384.617 cv
1447.03 392.356 1440.76 398.63 1433.02 398.63 cv
cp
1433.02 352.027 mo
1414.77 352.027 1399.98 365.224 1399.98 381.504 cv
1399.98 397.784 1433.02 477.45 1433.02 477.45 cv
1433.02 477.45 1466.05 397.784 1466.05 381.504 cv
1466.05 365.224 1451.26 352.027 1433.02 352.027 cv
cp
.956863 .454902 .345098 rgb
f
3481.96 356.056 mo
3422.92 375.49 li
3445.29 329.799 li
3481.96 356.056 li
cp
.313726 .74902 .647059 rgb
f
3680.63 382.774 mo
3705.5 502.27 li
3870.73 467.87 li
3875.9 466.794 3879.22 461.73 3878.14 456.561 cv
3857.16 355.787 li
3856.08 350.617 3851.02 347.299 3845.85 348.375 cv
3680.63 382.774 li
cp
.85098 .898039 .937255 rgb
f
3731.7 456.714 mo
3738.7 437.758 li
3730.34 438.787 li
3729.84 438.849 3729.43 439.211 3729.3 439.702 cv
3724.17 459.352 li
3729.98 458.142 li
3730.75 457.98 3731.4 457.446 3731.7 456.714 cv
cp
.207843 .32549 .537255 rgb
f
3713.09 446.152 mo
3716.59 440.539 li
3713.05 441.078 li
3712.83 441.11 3712.65 441.226 3712.58 441.369 cv
3709.85 447.126 li
3712.33 446.61 li
3712.66 446.542 3712.94 446.37 3713.09 446.152 cv
cp
f
3722.82 414.05 mo
3736.8 428.637 li
3728.73 431.029 li
3728.24 431.173 3727.72 431.007 3727.4 430.608 cv
3714.86 414.638 li
3720.67 413.428 li
3721.44 413.267 3722.25 413.5 3722.82 414.05 cv
cp
f
3709.97 431.161 mo
3715.41 434.913 li
3711.95 435.832 li
3711.75 435.888 3711.53 435.855 3711.41 435.75 cv
3706.61 431.562 li
3709.08 431.046 li
3709.42 430.978 3709.75 431.021 3709.97 431.161 cv
cp
f
3737.17 429.017 mo
3713.59 436.097 li
3712.54 436.414 3709.26 438.037 3709.48 439.118 cv
3709.71 440.2 3713.36 440.38 3714.46 440.249 cv
3738.9 437.331 li
3741.38 437.034 3751.52 432.919 3751.01 430.473 cv
3750.5 428.026 3739.56 428.299 3737.17 429.017 cv
cp
f
3714.14 417.471 mo
3698.91 420.643 li
3698.56 420.714 3698.22 420.491 3698.15 420.146 cv
3698.15 420.146 li
3698.08 419.802 3698.3 419.461 3698.64 419.389 cv
3713.88 416.218 li
3714.22 416.146 3714.56 416.369 3714.64 416.714 cv
3714.64 416.714 li
3714.71 417.059 3714.48 417.399 3714.14 417.471 cv
cp
f
3716.57 421.781 mo
3701.34 424.953 li
3701 425.024 3700.65 424.801 3700.58 424.457 cv
3700.58 424.457 li
3700.51 424.112 3700.73 423.771 3701.08 423.7 cv
3716.31 420.528 li
3716.66 420.456 3717 420.679 3717.07 421.024 cv
3717.07 421.024 li
3717.14 421.368 3716.92 421.709 3716.57 421.781 cv
cp
f
3722.43 457.305 mo
3707.2 460.477 li
3706.85 460.548 3706.63 460.889 3706.7 461.233 cv
3706.7 461.233 li
3706.77 461.578 3707.12 461.801 3707.46 461.729 cv
3722.69 458.558 li
3723.04 458.486 3723.26 458.145 3723.19 457.801 cv
3723.19 457.801 li
3723.12 457.456 3722.78 457.233 3722.43 457.305 cv
cp
f
3722.95 452.381 mo
3707.71 455.553 li
3707.37 455.625 3707.14 455.966 3707.21 456.31 cv
3707.21 456.31 li
3707.29 456.654 3707.63 456.878 3707.97 456.806 cv
3723.21 453.635 li
3723.55 453.563 3723.77 453.222 3723.7 452.877 cv
3723.7 452.877 li
3723.63 452.533 3723.29 452.31 3722.95 452.381 cv
cp
f
3935.54 329.702 mo
3868.76 343.605 li
3861.28 345.163 3856.08 350.617 3857.16 355.787 cv
3878.14 456.561 li
3879.22 461.73 3886.16 464.658 3893.64 463.1 cv
3960.42 449.197 li
3935.54 329.702 li
cp
.85098 .898039 .937255 rgb
f
3699.07 471.354 mo
3705.5 502.27 li
3870.73 467.87 li
3875.9 466.794 3879.22 461.73 3878.14 456.561 cv
3873.65 435.006 li
3699.07 471.354 li
cp
.52549 .694118 .94902 rgb
f
3862.01 379.081 mo
3857.16 355.787 li
3856.08 350.617 3851.02 347.299 3845.85 348.375 cv
3680.63 382.774 li
3687.42 415.429 li
3862.01 379.081 li
cp
f
3857.35 394.821 mo
3771.53 412.689 li
3770.2 406.29 li
3856.02 388.421 li
3857.35 394.821 li
cp
.27451 .431373 .713726 rgb
f
3926.59 384.539 mo
3891.42 391.862 li
3890.08 385.462 li
3925.26 378.14 li
3926.59 384.539 li
cp
f
3932.23 349.052 mo
3866.98 362.636 li
3865.65 356.236 li
3930.9 342.653 li
3932.23 349.052 li
cp
f
3859.65 405.868 mo
3773.83 423.736 li
3772.5 417.336 li
3858.32 399.468 li
3859.65 405.868 li
cp
f
3862.21 418.124 mo
3776.38 435.992 li
3775.05 429.592 li
3860.87 411.725 li
3862.21 418.124 li
cp
f
3960.42 449.197 mo
3916.8 458.277 li
3915.97 454.27 li
3959.58 445.189 li
3960.42 449.197 li
cp
f
3959.29 443.789 mo
3915.68 452.87 li
3915.04 449.785 li
3958.65 440.705 li
3959.29 443.789 li
cp
f
3958.36 439.305 mo
3914.75 448.385 li
3914.1 445.3 li
3957.72 436.22 li
3958.36 439.305 li
cp
f
3952.04 408.968 mo
3908.43 418.048 li
3907.79 414.963 li
3951.4 405.883 li
3952.04 408.968 li
cp
f
3951.23 405.063 mo
3907.62 414.144 li
3907.22 412.219 li
3950.83 403.139 li
3951.23 405.063 li
cp
f
3950.66 402.319 mo
3907.04 411.399 li
3906.64 409.474 li
3950.26 400.395 li
3950.66 402.319 li
cp
f
3957.43 434.82 mo
3913.81 443.9 li
3912.64 438.257 li
3956.25 429.177 li
3957.43 434.82 li
cp
f
3956.08 428.357 mo
3912.46 437.438 li
3911.29 431.794 li
3954.91 422.714 li
3956.08 428.357 li
cp
f
3954.74 421.894 mo
3911.12 430.974 li
3909.95 425.331 li
3953.56 416.251 li
3954.74 421.894 li
cp
f
3953.39 415.431 mo
3909.77 424.511 li
3908.6 418.868 li
3952.21 409.788 li
3953.39 415.431 li
cp
f
3896.12 380.074 mo
3889.26 381.501 li
3885.67 364.247 li
3892.53 362.819 li
3896.12 380.074 li
cp
f
3904.56 378.316 mo
3897.7 379.744 li
3894.11 362.489 li
3900.97 361.061 li
3904.56 378.316 li
cp
f
3915.99 375.936 mo
3909.13 377.364 li
3905.54 360.109 li
3912.4 358.682 li
3915.99 375.936 li
cp
f
3924.43 374.178 mo
3917.58 375.606 li
3913.98 358.352 li
3920.84 356.924 li
3924.43 374.178 li
cp
f
2461.38 302.293 mo
2361.47 394.263 li
2320.89 327.106 li
2461.38 302.293 li
cp
f
2319.79 295.955 mo
2320.89 327.106 li
2461.38 302.293 li
2319.79 295.955 li
cp
.607843 .756863 .976471 rgb
f
2318.62 338.464 mo
2461.38 302.293 li
2318.74 385.731 li
2318.62 338.464 li
cp
f
2314.69 393.358 mo
2314.69 393.345 2314.69 393.333 2314.69 393.32 cv
2314.69 393.334 2314.69 393.346 2314.69 393.358 cv
cp
2210.49 447.706 mo
2210.69 445.738 2212.45 444.303 2214.42 444.499 cv
2214.64 444.522 2237.22 446.601 2268.17 434.959 cv
2298.66 423.491 2313.71 396.616 2314.7 393.291 cv
2315.12 391.388 2316.99 390.162 2318.9 390.545 cv
2320.85 390.932 2322.11 392.821 2321.72 394.762 cv
2320.7 399.846 2303.47 429.341 2270.7 441.669 cv
2238.05 453.949 2214.67 451.732 2213.69 451.632 cv
2211.72 451.431 2210.29 449.672 2210.49 447.706 cv
cp
.968627 .8 .498039 rgb
f
2064.87 455.024 mo
2107.13 454.988 2148.99 447.746 2189.3 433.5 cv
2222.5 421.767 2251.8 399.622 2285.06 390.72 cv
2286.97 390.207 2288.1 388.242 2287.59 386.329 cv
2287.08 384.417 2285.12 383.281 2283.2 383.793 cv
2248.78 393.008 2219.67 415.163 2186.91 426.74 cv
2147.37 440.714 2106.31 447.818 2064.86 447.855 cv
2049.63 447.868 2032.06 445.477 2012.64 440.751 cv
2010.71 440.285 2008.78 441.463 2008.31 443.387 cv
2007.84 445.311 2009.02 447.25 2010.94 447.718 cv
2028.19 451.915 2047.04 455.04 2064.87 455.024 cv
cp
f
4392.32 1155.45 mo
4392.32 1155.45 4385.37 1152.14 4379.04 1140.42 cv
4374.98 1132.9 4362.92 1123.26 4367.94 1121.7 cv
4372.96 1120.15 4380.65 1132.86 4382.1 1129.21 cv
4383.54 1125.58 4369.17 1098.06 4373.72 1096.65 cv
4378.27 1095.23 4390.18 1122 4391.47 1118.74 cv
4392.76 1115.49 4379.31 1092.1 4385.74 1090.1 cv
4392.18 1088.1 4399.12 1118.89 4402.58 1117.82 cv
4406.03 1116.75 4401 1093.26 4406.18 1091.65 cv
4411.36 1090.05 4410.63 1120.7 4412.49 1119.82 cv
4413.49 1119.34 4418.09 1104.49 4420.9 1105.61 cv
4424.08 1106.86 4415.5 1137.34 4419.31 1144.06 cv
4423.12 1150.77 4453.63 1234.28 4443.2 1244.71 cv
4431.83 1256.08 4359.51 1282.15 4344.37 1277.66 cv
4329.24 1273.18 4320.57 1258.22 4324.21 1249.03 cv
4327.85 1239.83 4399.35 1219.17 4400.49 1216.28 cv
4401.63 1213.4 4392.32 1155.45 4392.32 1155.45 cv
cp
.968627 .643137 .568627 rgb
f
4386.41 1130.93 mo
4388.6 1130.83 4390.75 1131.33 4392.82 1132.09 cv
4393.12 1132.3 4399.98 1134.31 4402.93 1141.88 cv
4399.67 1138.01 4396.05 1133.72 4386.41 1130.93 cv
cp
.956863 .54902 .498039 rgb
f
4055.03 1654.45 mo
4055.03 1654.45 4058.61 1693.51 4056.26 1706.25 cv
4055.94 1707.95 4055.25 1710.12 4054.44 1712.5 cv
4052.02 1719.63 4058.66 1741.44 4058.66 1741.44 cv
4147.66 1741.77 li
4152.51 1741.79 4149.27 1738.71 4145.33 1735.89 cv
4138.87 1731.28 4133.67 1728.24 4113.11 1718.63 cv
4111.77 1718 4106.88 1714.98 4105.12 1713.94 cv
4100.65 1711.29 4096.14 1707.09 4092.25 1702.87 cv
4085.77 1695.85 4084.79 1661.43 4084.79 1661.43 cv
4055.03 1654.45 li
cp
.968627 .643137 .568627 rgb
f
4105.11 1713.93 mo
4081.64 1720.25 4064.2 1716.37 4054.42 1712.57 cv
4051.99 1719.7 4047.67 1744.23 4050.39 1744.23 cv
4072.71 1744.23 4091.5 1744.49 4154.96 1744.77 cv
4157.25 1744.78 4157.33 1739.12 4155.84 1737.39 cv
4151.71 1732.59 4106.87 1714.98 4105.11 1713.93 cv
cp
.207843 .32549 .537255 rgb
f
3943.4 1190.79 mo
3943.4 1190.79 3944.67 1246.54 3960.65 1282.25 cv
3976.21 1317.02 4050.69 1402.79 4070.49 1452.84 cv
4064.37 1481.08 4047.54 1520.77 4048.76 1552.06 cv
4050.14 1587.53 4048.08 1681.36 4048.08 1681.36 cv
4088.05 1682.63 li
4140.48 1440.47 li
4061.47 1179.19 li
4025.61 1115.75 li
3943.4 1190.79 li
cp
.235294 .560784 .486275 rgb
f
3772.64 1598.92 mo
3772.64 1598.92 3748.08 1632.62 3737.26 1641.14 cv
3731.47 1645.7 3715.74 1651.83 3714.08 1659.38 cv
3712.42 1666.92 3785.33 1733.66 3785.33 1733.66 cv
3789.19 1737.08 3788.75 1732.35 3787.58 1727.33 cv
3785.67 1719.11 3783.65 1713.04 3773.98 1690.93 cv
3773.35 1689.49 3771.56 1683.64 3770.89 1681.57 cv
3769.18 1676.32 3768.52 1669.8 3768.38 1663.71 cv
3768.13 1653.55 3791.5 1625.37 3791.5 1625.37 cv
3772.64 1598.92 li
cp
.968627 .643137 .568627 rgb
f
3770.88 1681.56 mo
3747.71 1670.14 3736.5 1654.79 3731.36 1644.9 cv
3724.42 1648.89 3705.75 1657.41 3707.4 1659.79 cv
3720.29 1678.5 3733.67 1701.77 3785.45 1745.85 cv
3787.3 1747.43 3794.9 1738.33 3794.93 1735.9 cv
3795 1729.17 3771.56 1683.64 3770.88 1681.56 cv
cp
.207843 .32549 .537255 rgb
f
4066.67 792.049 mo
4059.77 747.093 4019.1 714.768 3976.56 736.582 cv
3966.99 741.488 3954.04 751.443 3947.43 759.924 cv
3929.26 783.245 3924.86 812.149 3905.6 834.576 cv
3888.99 853.913 3844.66 850.264 3823.96 865.136 cv
3803.26 880.007 3788.75 906.67 3788.75 938.565 cv
3788.75 974.235 3796.8 1012.1 3824.44 1034.65 cv
3852.08 1057.2 3891.36 1062.82 3925.73 1053.26 cv
3960.09 1043.71 3989.58 1020.29 4010.8 991.621 cv
4032.02 962.951 4047.03 931.521 4057.6 897.455 cv
4069.41 859.432 4071.12 821.104 4066.67 792.049 cv
cp
.094118 .27451 .333333 rgb
f
4064.61 1003.1 mo
4064.61 1003.1 4107.78 1100.82 4115.99 1122.88 cv
4124.21 1144.94 4167.29 1218.68 4169.06 1221.49 cv
4170.83 1224.3 4209.98 1229.29 4207.79 1234.34 cv
4205.59 1239.38 4188.92 1233.06 4188.92 1235.83 cv
4188.92 1242.06 4213.28 1287.75 4209.32 1288.86 cv
4201.93 1290.92 4194.21 1260.63 4190.92 1262.21 cv
4187.63 1263.8 4206.44 1290.22 4201.88 1294.77 cv
4197.33 1299.32 4186.51 1268.07 4183.51 1268.04 cv
4180.5 1268.02 4199.58 1298.88 4193.09 1298.35 cv
4189.57 1298.06 4175.82 1269.64 4172.87 1272.6 cv
4171.62 1273.84 4186.28 1296.73 4182.27 1296.02 cv
4178.25 1295.31 4166.67 1277.23 4162.04 1267.05 cv
4157.41 1256.87 4159.49 1247.03 4147.24 1233.09 cv
4134.98 1219.14 4085.79 1175.13 4071.21 1139.9 cv
4056.63 1104.68 4024.19 1026.94 4024.19 1026.94 cv
4064.61 1003.1 li
cp
.956863 .54902 .498039 rgb
f
4028.21 903.759 mo
4028.21 903.759 4064.1 920.894 4081.78 1027.59 cv
4020.96 1044.55 li
3995.65 975.778 li
4028.21 903.759 li
cp
.956863 .454902 .345098 rgb
f
3946.22 1155.08 mo
3946.22 1155.08 3915.32 1201.5 3907.96 1239.92 cv
3900.79 1277.34 3912.71 1390.31 3900.25 1442.68 cv
3879.06 1462.31 3842.54 1485.21 3825.61 1511.55 cv
3806.42 1541.41 3750.97 1617.14 3750.97 1617.14 cv
3783 1641.08 li
3964.71 1472.64 li
4038.27 1247.92 li
4063.51 1182.21 li
3946.22 1155.08 li
cp
.313726 .74902 .647059 rgb
f
3971.24 890.953 mo
3971.24 890.953 3930.32 888.353 3914.13 905.961 cv
3897.95 923.569 3950.04 1062.86 3952.99 1085.27 cv
3955.93 1107.68 3923.69 1184.58 3923.69 1184.58 cv
3923.69 1184.58 4041.45 1205.03 4068.92 1186.89 cv
4068.92 1186.89 4064.52 1007.28 4061.57 991.271 cv
4058.63 975.263 4034.1 910.162 4028.21 903.759 cv
4022.33 897.355 3971.24 890.953 3971.24 890.953 cv
cp
.968627 .8 .498039 rgb
f
3984.86 836.388 mo
3984.86 836.388 3984.65 837.59 3984.27 839.636 cv
3982.44 849.455 3975.42 882.022 3970.67 890.977 cv
3964.94 901.796 3990.31 936.306 4014.73 932.095 cv
4022 930.841 4008.58 900.387 4009.23 897.16 cv
4010.46 890.985 4012.13 882.561 4013.85 873.923 cv
4014.81 869.05 4015.79 864.109 4016.71 859.466 cv
4019.32 846.27 4021.45 835.478 4021.45 835.478 cv
3984.86 836.388 li
cp
.968627 .643137 .568627 rgb
f
3984.27 839.637 mo
3984.65 837.59 3984.86 836.388 3984.86 836.388 cv
4021.45 835.478 li
4021.45 835.478 4019.32 846.27 4016.71 859.466 cv
4015.8 864.083 4014.82 868.995 4013.86 873.842 cv
4008.21 873.012 4002.31 870.271 3996.39 865.1 cv
3989.94 859.463 3985.71 852.689 3983.16 845.457 cv
3983.61 843.148 3983.98 841.159 3984.27 839.637 cv
cp
.956863 .454902 .345098 rgb
f
4009.49 753.38 mo
4009.49 753.38 3992.24 751.391 3981.43 765.346 cv
3970.62 779.3 3958.97 822.454 3985.82 845.917 cv
4012.68 869.378 4039.21 842.821 4043.15 814.663 cv
4047.08 786.504 4048.61 752.363 4009.49 753.38 cv
cp
.968627 .643137 .568627 rgb
f
4051.09 814.247 mo
4047.89 820.466 4042.51 823.909 4039.08 821.938 cv
4035.64 819.967 4035.46 813.328 4038.67 807.108 cv
4041.87 800.889 4047.25 797.445 4050.68 799.417 cv
4054.12 801.388 4054.3 808.027 4051.09 814.247 cv
cp
f
4011.42 748.766 mo
4011.42 748.766 3988.38 789.804 3971.89 791.7 cv
3955.41 793.596 3953.24 815.402 3953.24 815.402 cv
3953.24 815.402 3959.14 765.156 3975.46 755.466 cv
3991.77 745.776 4011.42 748.766 4011.42 748.766 cv
cp
.094118 .27451 .333333 rgb
f
3976.21 802.012 mo
3977.55 809.3 3974.86 815.983 3970.19 816.939 cv
3965.53 817.896 3960.66 812.763 3959.32 805.476 cv
3957.98 798.188 3960.67 791.505 3965.34 790.548 cv
3970 789.592 3974.87 794.724 3976.21 802.012 cv
cp
.968627 .643137 .568627 rgb
f
3465.55 1675.97 mo
3487.32 1684.59 li
3805.48 1256.73 li
3805.48 1256.73 li
3793.48 1251.98 3787.44 1260.1 3780.96 1268.82 cv
3465.55 1675.97 li
cp
.207843 .32549 .537255 rgb
f
3499.26 1700.58 mo
3521.03 1709.21 li
3839.31 1270.13 li
3843.83 1264.06 3831.71 1260.19 3831.71 1260.19 cv
3499.26 1700.58 li
cp
.52549 .694118 .94902 rgb
f
3528.12 1472.72 mo
3495.73 1459.84 li
3535.51 1406.84 li
3568.52 1362.84 3644.15 1346.61 3704.43 1370.57 cv
3758.89 1392.22 li
3521.03 1709.21 li
3389.81 1657.05 li
3349.21 1628.4 li
3528.12 1472.72 li
cp
.956863 .454902 .345098 rgb
f
3758.89 1392.22 mo
3521.03 1709.21 li
3389.81 1657.05 li
3392.9 1652.92 li
3392.9 1652.92 li
3484.25 1659.14 3695.12 1442.57 3747.13 1387.55 cv
3758.89 1392.22 li
cp
.717647 .341176 .258824 rgb
f
3591.62 1493.11 mo
3611.24 1471.33 3641.56 1439.47 3663.41 1420.21 cv
3639.79 1453.52 3595.38 1501.43 3594.78 1502.13 cv
3568.73 1491.64 3534.73 1478.6 3495.73 1459.84 cv
3528.55 1469.78 3560.26 1481.21 3591.62 1493.11 cv
cp
f
3546.37 1714.43 mo
3546.37 1730.91 3533.01 1744.26 3516.54 1744.26 cv
3500.06 1744.26 3486.7 1730.91 3486.7 1714.43 cv
3486.7 1697.95 3500.06 1684.59 3516.54 1684.59 cv
3533.01 1684.59 3546.37 1697.95 3546.37 1714.43 cv
cp
.07451 .215686 .356863 rgb
f
3528.82 1714.43 mo
3528.82 1721.21 3523.32 1726.71 3516.54 1726.71 cv
3509.75 1726.71 3504.25 1721.21 3504.25 1714.43 cv
3504.25 1707.64 3509.75 1702.14 3516.54 1702.14 cv
3523.32 1702.14 3528.82 1707.64 3528.82 1714.43 cv
cp
.607843 .756863 .976471 rgb
f
3893.86 998.943 mo
3893.86 998.943 3865.37 1101.91 3860.45 1124.93 cv
3855.54 1147.94 3823.64 1227.17 3822.3 1230.2 cv
3820.96 1233.24 3792.8 1262.02 3796.57 1267.83 cv
3798.67 1271.07 3804.9 1274.87 3807.87 1274.41 cv
3810.84 1273.94 3812.58 1276.36 3816.53 1277.7 cv
3820.49 1279.04 3827.87 1278.1 3830.97 1267.36 cv
3834.07 1256.61 3835.48 1254.08 3845.58 1238.51 cv
3855.67 1222.93 3897.93 1172.22 3907.24 1135.25 cv
3916.54 1098.28 3937.32 1016.65 3937.32 1016.65 cv
3893.86 998.943 li
cp
.968627 .611765 .552941 rgb
f
3818.19 1278.09 mo
3822.3 1278.64 3828.27 1276.73 3830.97 1267.36 cv
3831.72 1264.76 3832.38 1262.64 3833.07 1260.7 cv
3832.25 1260.37 3831.71 1260.19 3831.71 1260.19 cv
3818.19 1278.09 li
cp
.52549 .694118 .94902 rgb
f
3882.87 1030.57 mo
3882.87 1030.57 3885.46 945.884 3896.94 922.091 cv
3908.42 898.299 3937.03 884.693 3947.83 905.533 cv
3958.97 927.032 3939.6 1031.55 3939.6 1031.55 cv
3882.87 1030.57 li
cp
.980392 .878431 .698039 rgb
f
4372.82 1222.13 mo
4326.18 1225.54 li
4340.49 1280.88 li
4388.32 1272.27 li
4372.82 1222.13 li
cp
.313726 .74902 .647059 rgb
f
4213.01 1251.48 mo
4213.01 1251.48 4202.6 1379.91 4202.6 1391.07 cv
4202.6 1402.22 4246.91 1405.38 4246.91 1405.38 cv
4260.46 1273.58 li
4213.01 1251.48 li
cp
.27451 .431373 .713726 rgb
f
4279.11 1220.21 mo
4279.11 1220.21 4250.35 1204.82 4226.65 1218.93 cv
4202.94 1233.04 4196.49 1315.93 4196.49 1315.93 cv
4272.42 1325.03 li
4279.11 1220.21 li
cp
.52549 .694118 .94902 rgb
f
4179.03 1681.69 mo
4179.03 1681.69 4174.12 1699.14 4170.22 1703.04 cv
4166.33 1706.93 4153.41 1722.05 4156.59 1729.54 cv
4159.76 1737.04 4238.46 1747.77 4241.45 1744.79 cv
4244.43 1741.8 4227.85 1729.16 4218.45 1721.41 cv
4209.05 1713.66 4202.32 1704.14 4206.26 1692.58 cv
4210.2 1681.01 4210.2 1682.16 4210.2 1681.01 cv
4210.2 1679.87 4179.03 1681.69 4179.03 1681.69 cv
cp
.968627 .643137 .568627 rgb
f
4241.45 1744.79 mo
4245.01 1742.12 4233.95 1730.18 4217.93 1720.97 cv
4211.22 1720.96 4202.28 1720.51 4194.7 1718.62 cv
4182.84 1715.65 4173.74 1705.38 4171.04 1702.04 cv
4170.8 1702.38 4151.72 1720.76 4155.44 1729.54 cv
4158.62 1737.04 4234.33 1750.12 4241.45 1744.79 cv
cp
.207843 .32549 .537255 rgb
f
4309.61 1690.16 mo
4309.61 1690.16 4311.07 1708.08 4308.11 1712.73 cv
4305.16 1717.38 4294.83 1735.82 4300.59 1741.58 cv
4305.78 1746.77 4377.87 1743.43 4380.13 1739.87 cv
4382.4 1736.3 4370.06 1725.66 4359.19 1720.15 cv
4348.33 1714.64 4339.68 1706.81 4341 1694.67 cv
4342.32 1682.52 4342.57 1683.64 4342.32 1682.52 cv
4342.07 1681.41 4309.61 1690.16 4309.61 1690.16 cv
cp
.968627 .643137 .568627 rgb
f
4389.09 1742.74 mo
4392.85 1740.35 4376.23 1725.32 4358.59 1719.83 cv
4352.04 1721.29 4343.21 1722.8 4335.4 1722.6 cv
4323.18 1722.3 4312.06 1714.25 4308.7 1711.58 cv
4308.54 1711.97 4292.11 1735.76 4299.47 1741.83 cv
4305.22 1746.57 4383.38 1746.36 4389.09 1742.74 cv
cp
.207843 .32549 .537255 rgb
f
4314.88 1436.42 mo
4268.33 1571.29 li
4214.94 1696.14 li
4170.22 1684.91 li
4170.22 1684.91 4186.36 1598.36 4201.52 1571.18 cv
4212.99 1550.61 4221 1432.55 4221 1432.55 cv
4314.88 1436.42 li
cp
.956863 .454902 .345098 rgb
f
4292.52 1459.12 mo
4308.65 1696.14 li
4346.76 1696.14 li
4346.76 1696.14 4363.41 1447.82 4357.31 1424.19 cv
4351.21 1400.56 4287.72 1405.89 4287.72 1405.89 cv
4292.52 1459.12 li
cp
.717647 .341176 .258824 rgb
f
4329.1 1226.41 mo
4329.1 1226.41 4279.99 1211.69 4272.42 1212.64 cv
4264.15 1213.68 4244.02 1224.34 4244.02 1224.34 cv
4244.02 1224.34 4245.26 1309.61 4241.7 1333.72 cv
4238.14 1357.83 4213.25 1435.07 4213.25 1435.07 cv
4213.25 1435.07 4248.31 1455.39 4307.25 1448.79 cv
4366.2 1442.18 4362.13 1427.96 4362.13 1427.96 cv
4362.13 1427.96 4356.54 1342.58 4350.96 1304.98 cv
4345.37 1267.38 4329.1 1226.41 4329.1 1226.41 cv
cp
.588235 .85098 .788235 rgb
f
4251.9 1220.4 mo
4251.9 1220.4 4262.95 1218.73 4272.42 1254.59 cv
4283.17 1295.23 4271.6 1337.32 4253.83 1347.98 cv
4236.06 1358.65 4228.74 1356.59 4228.74 1356.59 cv
4231.53 1381.65 li
4231.53 1381.65 4284.03 1369.9 4291.18 1325.03 cv
4302.9 1251.48 4268.33 1213.59 4268.33 1213.59 cv
4268.33 1213.59 4261.83 1214.64 4259.81 1215.46 cv
4257.65 1216.34 4251.9 1220.4 4251.9 1220.4 cv
cp
.27451 .431373 .713726 rgb
f
4224.76 1305.32 mo
4224.76 1305.32 4224.76 1348.68 4224.76 1357.83 cv
4224.76 1366.98 4235.27 1428.9 4248.14 1450.11 cv
4261.01 1471.32 4278.46 1494.97 4282.07 1496.33 cv
4285.68 1497.68 4293.53 1502.65 4297.6 1498.59 cv
4301.66 1494.52 4304.88 1496.39 4309.96 1494.18 cv
4315.04 1491.98 4309.29 1484.7 4302.17 1477.58 cv
4295.06 1470.47 4293.53 1468.78 4294.72 1467.59 cv
4295.9 1466.41 4301.66 1473.01 4304.71 1471.99 cv
4307.76 1470.98 4302.85 1460.31 4294.89 1456.58 cv
4286.93 1452.85 4274.22 1445.57 4273.04 1441.67 cv
4271.85 1437.78 4271.85 1438.79 4271.85 1437.78 cv
4271.85 1436.76 4262.88 1375.28 4262.88 1363.25 cv
4262.88 1351.22 4259.32 1312.1 4259.32 1312.1 cv
4224.76 1305.32 li
cp
.968627 .643137 .568627 rgb
f
4248.78 1222.25 mo
4244.16 1222.83 4231.62 1227.4 4227.22 1242.31 cv
4222.82 1257.21 4211.21 1299.56 4213.25 1320.23 cv
4213.25 1320.23 4262.71 1326.66 4262.71 1324.63 cv
4262.71 1322.6 4273.53 1269.58 4268.13 1246.37 cv
4263.42 1226.13 4256.81 1221.25 4248.78 1222.25 cv
cp
.313726 .74902 .647059 rgb
f
4321.41 1224.15 mo
4355.8 1347.73 li
4355.8 1347.72 li
4354.28 1331.59 4352.62 1316.17 4350.96 1304.98 cv
4345.37 1267.38 4328.81 1225.35 4328.81 1225.35 cv
4328.81 1225.35 4326.18 1224.7 4321.41 1224.15 cv
cp
.27451 .431373 .713726 rgb
f
4301.73 1097.84 mo
4301.73 1097.84 4320.38 1091.08 4332.43 1109.98 cv
4344.49 1128.88 4337.97 1127.08 4343.84 1136.53 cv
4349.7 1145.98 4365.01 1144.02 4365.01 1158.68 cv
4365.01 1173.34 4358.17 1175.63 4358.17 1175.63 cv
4358.17 1175.63 4364.36 1187.03 4357.52 1198.76 cv
4350.68 1210.48 4333.62 1220.58 4319.34 1218.96 cv
4319.34 1218.96 4297.9 1230.71 4276.4 1225.16 cv
4254.9 1219.61 4262.39 1219.61 4253.59 1219.61 cv
4244.8 1219.61 4221.01 1207.55 4224.92 1189.96 cv
4224.92 1189.96 4210.43 1172.75 4224.49 1158.68 cv
4238.55 1144.62 4241.21 1130.34 4249.36 1111.45 cv
4257.5 1092.55 4291.96 1093.28 4301.73 1097.84 cv
cp
.094118 .27451 .333333 rgb
f
4314.19 1198.43 mo
4314.19 1198.43 4313.41 1224.38 4315.84 1226.81 cv
4318.28 1229.25 4321.68 1233.29 4318.1 1239.48 cv
4314.52 1245.67 4298.96 1241.72 4291.71 1238.18 cv
4284.75 1234.78 4280.26 1228.45 4280.26 1228.45 cv
4283.89 1187.35 li
4314.19 1198.43 li
cp
.968627 .643137 .568627 rgb
f
4303.85 1209.18 mo
4298.85 1207.43 4290.12 1204.06 4283.38 1193.11 cv
4283.89 1187.35 li
4314.19 1198.43 li
4314.19 1198.43 4314 1204.76 4314.1 1211.46 cv
4309.85 1211.29 4306.23 1210.02 4303.85 1209.18 cv
cp
.717647 .341176 .258824 rgb
f
4278.55 1158.01 mo
4278.55 1158.01 4277.82 1142.76 4268.45 1145.72 cv
4259.08 1148.68 4266.22 1171.7 4273.99 1170.95 cv
4281.75 1170.19 4278.55 1158.01 4278.55 1158.01 cv
cp
.968627 .643137 .568627 rgb
f
4308 1108.19 mo
4308 1108.19 4322.66 1107.86 4330.15 1119.26 cv
4337.65 1130.67 4345.79 1163.25 4333.41 1185.72 cv
4321.03 1208.2 4305.23 1202.67 4298.71 1200.38 cv
4292.2 1198.1 4279.33 1193.05 4272.81 1172.04 cv
4266.3 1151.03 4271.02 1103.79 4308 1108.19 cv
cp
f
2129.38 1209.43 mo
2120.45 1184.34 2070.39 1062.03 2057.83 1058.76 cv
2036.95 1112.88 li
2038.04 1113.35 2039.96 1114.97 2086.66 1198.56 cv
2087.81 1200.67 2089.04 1202.82 2090.26 1205.01 cv
2093.55 1210.89 2097.05 1217.19 2100.75 1223.87 cv
2096.77 1246.49 li
2096.77 1246.49 2096.72 1282.76 2100.75 1284.13 cv
2102.59 1284.73 2103.74 1281.8 2104.54 1278.17 cv
2104.55 1278.06 li
2104.66 1277.52 2104.77 1276.99 2104.88 1276.45 cv
2104.88 1276.41 2104.88 1276.38 2104.88 1276.38 cv
2105.63 1272.44 2106 1268.27 2106.43 1267.28 cv
2106.91 1266.16 2107.97 1263.91 2109.48 1262.03 cv
2117.09 1285.17 2113.93 1283.21 2112.94 1290.64 cv
2112.66 1292.51 2113.07 1294.53 2112.8 1296.29 cv
2112.33 1299.3 2110.36 1301.58 2110.05 1303.92 cv
2109.63 1307.33 2111.02 1310.22 2111.63 1310.88 cv
2112.36 1311.73 2113.62 1310.33 2115.12 1307.54 cv
2123.88 1290.69 2122.01 1276.1 2123.45 1271.56 cv
2124.43 1268.51 2125.18 1274.25 2123.62 1283.02 cv
2123.25 1285.21 2123.84 1288.15 2122.95 1291.02 cv
2122.38 1292.94 2121 1294.62 2120.39 1296.49 cv
2119.84 1298.23 2119.74 1300.04 2119.35 1301.49 cv
2118.85 1303.42 2117.19 1306.02 2116.9 1307.55 cv
2115.84 1313.28 2116.65 1316.16 2117.15 1316.85 cv
2118.25 1318.27 2130.15 1292.76 2130.15 1292.76 cv
2130.15 1292.76 2134.02 1274.88 2134.3 1270.84 cv
2134.3 1270.84 2135.55 1268.5 2135.94 1273.27 cv
2135.99 1274.07 2135.27 1277.61 2135.14 1280.54 cv
2134.93 1284.58 2135.29 1288.16 2135.29 1288.16 cv
2135.29 1288.16 2133.81 1289.65 2132.19 1292.58 cv
2131.53 1293.8 2131.17 1295.84 2130.42 1297.2 cv
2129.63 1298.59 2128.32 1299.73 2127.61 1301.06 cv
2125.81 1304.52 2125.22 1307.78 2127.01 1308.99 cv
2128.5 1310 2142.05 1290.99 2142.05 1290.99 cv
2143.45 1272.6 2154.18 1254.01 2129.38 1209.43 cv
cp
.956863 .54902 .498039 rgb
f
2126.22 1694.6 mo
2122.44 1674.44 2126.35 1631.58 2126 1592 cv
2108.26 1591.91 2097.8 1623.98 2080.07 1623.62 cv
2089.74 1673.74 2087.1 1698.38 2087.1 1698.38 cv
2086.34 1708.41 li
2087.04 1738 li
2187.22 1734.17 li
2187.22 1734.17 2165.69 1725.78 2135.32 1708.63 cv
2133.07 1707.37 2127.84 1703.24 2126.22 1694.6 cv
cp
.968627 .643137 .568627 rgb
f
2084.63 1744.47 mo
2190.29 1740.9 li
2194.1 1740.38 2194.89 1737.25 2193.47 1735.4 cv
2190.56 1731.6 2178.37 1729.27 2164.53 1723.64 cv
2140.87 1727.2 2090.38 1713.23 2086.38 1707.94 cv
2084.71 1718.97 2082.48 1744.1 2084.63 1744.47 cv
cp
.956863 .454902 .345098 rgb
f
1819.83 1687.76 mo
1828.15 1669.01 1848.17 1637.31 1870.32 1604.51 cv
1855.76 1594.38 1836.47 1613.48 1822.07 1603.13 cv
1801.61 1649.9 1785.46 1668.69 1785.46 1668.69 cv
1779.15 1676.52 li
1762.95 1701.29 li
1835.36 1737.73 li
1835.36 1737.73 1835.75 1737.11 1829.78 1724.74 cv
1827.49 1719.98 1823.61 1713.18 1819.37 1704.48 cv
1818.24 1702.16 1816.27 1695.79 1819.83 1687.76 cv
cp
.968627 .643137 .568627 rgb
f
1757.3 1705.26 mo
1821.02 1746.02 li
1821.02 1746.02 1852.21 1748.34 1852.09 1746.02 cv
1851.85 1741.24 1837.99 1737.23 1829.78 1724.74 cv
1808.26 1714.26 1779.75 1682.78 1779.45 1676.16 cv
1771.82 1684.3 1755.74 1703.74 1757.3 1705.26 cv
cp
.956863 .454902 .345098 rgb
f
2105.17 1151.23 mo
2097.22 1123.38 2127.68 1015.18 2127.68 987.333 cv
2127.68 959.483 2090.91 864.69 2062.22 846.389 cv
2033.52 828.088 1973.19 843.555 1973.19 843.555 cv
1951.3 939.509 li
1956.17 1041.29 li
1899.3 1272.33 li
1878.53 1379.38 li
1783.63 1618.85 li
1783.63 1618.85 1894.58 1693.48 2001.61 1676.16 cv
2108.64 1658.83 2145.56 1663.26 2145.56 1663.26 cv
2169.14 1406.59 li
2105.17 1151.23 li
cp
.717647 .341176 .258824 rgb
f
1959.44 1272.52 mo
1946.72 1272.52 li
1946.72 1229.8 li
1946.72 1228.54 1945.7 1227.52 1944.44 1227.52 cv
1874.98 1227.52 li
1873.72 1227.52 1872.7 1228.54 1872.7 1229.8 cv
1872.7 1272.52 li
1859.98 1272.52 li
1859.98 1229.8 li
1859.98 1221.53 1866.71 1214.8 1874.98 1214.8 cv
1944.44 1214.8 li
1952.71 1214.8 1959.44 1221.53 1959.44 1229.8 cv
1959.44 1272.52 li
cp
.094118 .27451 .333333 rgb
f
1766.56 1375.54 mo
1779.29 1461.14 li
2044.42 1461.14 li
2058 1375.54 li
1766.56 1375.54 li
cp
.968627 .8 .498039 rgb
f
2062.57 1376.51 mo
1762.28 1376.51 li
1777.45 1274.51 li
1778.6 1266.79 1785.23 1261.07 1793.04 1261.07 cv
2030.79 1261.07 li
2038.54 1261.07 2045.15 1266.71 2046.36 1274.36 cv
2062.57 1376.51 li
cp
f
1915.09 1357.5 mo
1915.09 1357.5 li
1910.46 1357.5 1906.7 1353.74 1906.7 1349.11 cv
1906.7 1288.47 li
1906.7 1283.84 1910.46 1280.09 1915.09 1280.09 cv
1915.09 1280.09 li
1919.73 1280.09 1923.48 1283.84 1923.48 1288.47 cv
1923.48 1349.11 li
1923.48 1353.74 1919.73 1357.5 1915.09 1357.5 cv
cp
.094118 .27451 .333333 rgb
f
1874.67 1357.5 mo
1874.67 1357.5 li
1870.04 1357.5 1866.28 1353.74 1866.28 1349.11 cv
1866.28 1288.47 li
1866.28 1283.84 1870.04 1280.09 1874.67 1280.09 cv
1874.67 1280.09 li
1879.31 1280.09 1883.06 1283.84 1883.06 1288.47 cv
1883.06 1349.11 li
1883.06 1353.74 1879.31 1357.5 1874.67 1357.5 cv
cp
f
1835.4 1357.5 mo
1835.4 1357.5 li
1830.76 1357.5 1827.01 1353.74 1827.01 1349.11 cv
1827.01 1288.47 li
1827.01 1283.84 1830.76 1280.09 1835.4 1280.09 cv
1835.4 1280.09 li
1840.03 1280.09 1843.78 1283.84 1843.78 1288.47 cv
1843.78 1349.11 li
1843.78 1353.74 1840.03 1357.5 1835.4 1357.5 cv
cp
f
1989.45 1357.5 mo
1989.45 1357.5 li
1984.82 1357.5 1981.06 1353.74 1981.06 1349.11 cv
1981.06 1288.47 li
1981.06 1283.84 1984.82 1280.09 1989.45 1280.09 cv
1989.45 1280.09 li
1994.09 1280.09 1997.84 1283.84 1997.84 1288.47 cv
1997.84 1349.11 li
1997.84 1353.74 1994.09 1357.5 1989.45 1357.5 cv
cp
f
1950.18 1357.5 mo
1950.18 1357.5 li
1945.54 1357.5 1941.79 1353.74 1941.79 1349.11 cv
1941.79 1288.47 li
1941.79 1283.84 1945.54 1280.09 1950.18 1280.09 cv
1950.18 1280.09 li
1954.81 1280.09 1958.57 1283.84 1958.57 1288.47 cv
1958.57 1349.11 li
1958.57 1353.74 1954.81 1357.5 1950.18 1357.5 cv
cp
f
2068.36 1390.79 mo
1756.86 1390.79 li
1756.86 1369.05 li
2068.36 1369.05 li
2068.36 1390.79 li
cp
.956863 .454902 .345098 rgb
f
1929.87 1180.14 mo
1927.34 1178.48 1930.04 1137.17 1930.04 1137.17 cv
1930.04 1137.17 1926.58 1020.79 1927.03 1014.38 cv
1969.58 937.315 li
1910.69 929.333 li
1910.69 929.333 1872.07 999.782 1870.28 1006.64 cv
1868.5 1013.5 1896.06 1155.33 1896.73 1169.6 cv
1896.73 1169.6 1887.07 1191.17 1884.05 1202.12 cv
1881.04 1213.06 1886.33 1224.11 1885.95 1227.33 cv
1885.89 1227.8 1897.9 1234.76 1901.09 1233.85 cv
1910.59 1231.12 1915.91 1230.35 1918.15 1230.85 cv
1931.37 1233.85 1927 1214.52 1929.17 1214.61 cv
1931.35 1214.69 1940.67 1214.29 1940.67 1214.29 cv
1941.28 1214.29 1943.43 1189.02 1929.87 1180.14 cv
cp
.972549 .643137 .572549 rgb
f
1973.19 843.555 mo
1973.19 843.555 1952.44 848.306 1941.91 858.835 cv
1931.38 869.366 1892.51 945.93 1892.51 945.93 cv
1948.53 983.286 li
1965.64 952.687 li
1982.29 922.927 1986.23 887.715 1976.57 855.013 cv
1973.19 843.555 li
cp
.956863 .454902 .345098 rgb
f
2113.75 790.22 mo
2113.75 790.22 2151.91 715.085 2115.18 691.623 cv
2086.96 673.598 2074.48 686.738 2074.48 686.738 cv
2074.48 686.738 2031.06 655.033 2014.91 705.815 cv
2014.91 705.815 1981.48 706.56 1974.43 735.236 cv
1967.37 763.912 1983.4 776.813 1983.4 776.813 cv
1983.4 776.813 1965.85 791.617 1970.3 813.962 cv
1974.76 836.307 2008.47 847.015 2028.15 834.353 cv
2047.83 821.69 2045.51 831.838 2061.11 831.838 cv
2076.7 831.838 2113.75 790.22 2113.75 790.22 cv
cp
.607843 .756863 .976471 rgb
f
2079.21 817.439 mo
2079.21 817.439 2054.7 863.711 2062.69 886.637 cv
2067.14 899.429 2015.02 845.957 2015.02 845.957 cv
2042.19 794.049 li
2079.21 817.439 li
cp
.968627 .643137 .568627 rgb
f
2037.62 802.781 mo
2042.03 815.115 2049.49 826.47 2061.04 834.473 cv
2063.92 836.473 2066.74 838.062 2069.49 839.278 cv
2074.22 826.847 2079.21 817.439 2079.21 817.439 cv
2042.19 794.049 li
2037.62 802.781 li
cp
.956863 .454902 .345098 rgb
f
2067.43 704.508 mo
2067.43 704.508 2049.14 707.399 2037.07 723.134 cv
2024.99 738.87 2020.2 796.41 2055.66 820.983 cv
2091.13 845.557 2115.92 805.57 2118.14 774.566 cv
2120.36 743.563 2115.78 701.759 2067.43 704.508 cv
cp
.968627 .643137 .568627 rgb
f
2038.75 770.317 mo
2040.33 778.679 2036.86 786.24 2031 787.205 cv
2025.15 788.169 2019.12 782.173 2017.54 773.811 cv
2015.96 765.448 2019.43 757.887 2025.29 756.923 cv
2031.15 755.958 2037.18 761.954 2038.75 770.317 cv
cp
f
2078.52 697.252 mo
2084.41 702.678 2076.21 721.252 2060.19 738.738 cv
2044.18 756.225 2026.42 766.002 2020.53 760.576 cv
2014.64 755.149 2022.84 736.576 2038.86 719.089 cv
2054.87 701.603 2072.63 691.826 2078.52 697.252 cv
cp
.607843 .756863 .976471 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Group of tourists with suitcases and bags standing in airport.eps)
%%CreationDate: 8/1/2020 1:39 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fokXC[OC;$*O5TpVW^*5J4*=4oNaaK!S',n!!+Pf;*q@lk'FNL^4,R0_u9[,p_Srt*0.Nmk8W"O,A3kV8-4?W2B/U>S2$F^
%7cqe>jQNnc@S(S28XH"?;r!uWK?$cLUqqZgEPd6)rh(DG$N9Z/Ml"5?RFrKhcq>"f'm.7WVj8ni>\?64-:3^T3m;E+k!g=TM\sn"
%k_Z!"pV@NsnA'uPg`M:#M!b[;Rq+8+b-<0<a73YC0]7U#6f6lk.lCs0h5g@]c0u;I)'[H%rYFelAd5gK4i@$XH`C'cK<H2P+Fqi@
%Up(e24eImu"aoVF'#?gMr(i%L3$&->_LXC1)!po4mLL0*0q=sHW>H3i%"n_+iIYo5+Th-:o7hj!(q--V04:Ot"r\(5C4tQO7O1HW
%!e(Cp,XWi)';ihNKo<'b&67AD:kb6Q-ldhh2h!G?M?Ii'Lc^.@K`%K;#U1J7AIFG("E=^&6S,I<L^c6J"*f>E'as%Pp]]?(eBj9U
%5^3?n:LO5e'U6uW?49%07%Aj]6Yo"^&Bf#*2@?QF=gSHf6^U(hCCu)1E.V7N!A+RJ3=-"I]FG,P0NPFf"ks/'(-I+cBG9mqIeY6<
%I^<cV##LfIHCL"2=:h"<!ogHFj?jJL6O8P_8"-c#,mp80Xf*!5`'X*F8_J]EM?kDS#pLNZ\\f#_ciA1ij<>4E@lQG-:t16<&Bdlp
%J4nHaOs)"kW>bQ(+CQ2r[D<HE6ZQK+M]`"#Opt5I/;V@RTf-=![NUtg6\"K!Ff*L1"J-B2DXudhbXJ+mNbNr%gM%TLFH[S<8$p'f
%[KK.SMaMF`m1$'[0:Dmi+G/W]VLaR0!@bcB(_-Y3jUZq$"(h!&6$W@eE*-k_Z9uk)/FuBM:giK>_b9,=aU8RO046s45QJ^?=6WS1
%5%=;V#qH"-7!fR_m7i<#1*b.TeO=@D,;XuOii?,eU.Os)7K<XW)pKPL,)4GW$a=>VqATN2,;(.=:74\;]1%AFJGC$ISA_Zd#/qPd
%K*:Y[(hnMA(]4^HJ>pJRf^[LmKEHB']3?DPTJUH"6<8B?cV>YeR":h?:.WA\ca2GmmDP?@&HZ?n7'd]Jn1Y.`%aIjJdVT=TPfNhu
%&Hl^OTF2V,F@Bf)0lNlha,up7e(bd4BEg\uJ8.f/SK;d!l07I8H3UsJ:F3m)(Tf1t1gh]8j59iU,sD^EC83e6R-2$UZoI;i^\u'A
%luHs_!/AHK#4\\1?q2<Ts#p.lQY*.U*UPXV&%JN;#L@jXGkMApcbL/Wq^G3d+,'[S#4N6*s%)Vjr(m1*Hgm('(rX.oPM_c?2hh#C
%D[l?7CUg/8WLgBE7eDAr%HtV=%`JPhj5;`gNWfBGTHb(+%"NiC$%b+#p]3:)4U*#U!e+b`R*4jb?o0\OK!&Ma/Y"R:!B!1t9+lCL
%a<'S3FULGp*mF,VU"Xr#*tXnI)0La=>U0Z*LH)Xdc6,tW8It;j_Z2.VH,4!J!dtkTUH,W=*:IJ<A9N!F('YoZ@4'g`O38'3`.hrU
%nGhDJIOQHQPodq&^5^n&Ln0OQ\8Z.5En*EB#cr89&e[R:jd=#i^g"`@K8b#a3&K,3#TquZPo*?$KEqU8$qT7Z0ef!V^iX9/1dV&8
%3Y<7ScY!>IPN,+sc>:A4dL*o%BmqVCJ0k`TTcgdQ)hfO<*/6GGIh)mP^cuu6\25-R6IJ+c*$FP91jWm.BmMUFq`I"^YaqCZ!$QCg
%$^]e<=k/$Zp4Z5X(D_-DE>mlfA["4/VPpK4(E+p4>j*si;@FS;8FaRT";^]'@Ys.VW.f486nU`'["e-E%9,)GL2<1[mS(MsDhVp'
%5ms67U!0rjRV/$/NX%%VO.CgZgsDFp![G9k>fi;I,5.+#,'o<#9EQRm"?Fh\I+WF6f(!Jl_%m;1jT20tZSSu,1%A]42P4JL!_anf
%bP-_spiKjl?\'0t^!Eo')"Q/R[iLO(#5b%Qd0)T(!1ratHS-up-u]:(,gXqSR*L4&Fa7SN+:*V'3"]1%iJ[17`g,JU*QKjl_r,<\
%:+(H9d-pU?/j]HPG(kJOfRt<(:ga89SGSt9)),lV+R#J1!Ose'P/UIB1`appHoFo=<sM#&BOA^AOj#a)1jhB$')pBH_Op]MJO=^C
%XB)s&U)pUGW7IYp2?gHl+";tW'88I(SqCRP_sHNGfP2d<QC[J7EP5In2^rTi`oMC,@h'p=1D<dXq]]pp2$=[_'"\I?+ZNRQe>(+m
%k^=%5m&"MQ+'1N*rOX\VjM:Ye#u7\[AF[l[518Jf(P"Q+NRjKeD.DF>,amdIUELTJG0V26:tUVj67Th\#dl>QC2e7._rScn;%H+,
%#hg@`RKJcd_+beH<Ra=W$?XVc--_FIg^Ib73i:(R)?gIKFq;BT@=![l.?utS@ZE+,$_1,*;^uu`jo/7RlL?\:G=P^S48V(\S;qX:
%.@3-/>Y^(=5NQp`>jdj"ST;8>0)+h+b6>UX/uOVpA'3n2bjWcS0qc/6+(&Jsc9lu1S5(.<qQmbCb]cI9M+S4a^gHA_QtJ`E_u.fS
%h<)9]!BKqhk\?1@>+Y#8UZO[%T?UJaP1$5qYiB=9lIOKq5.Z*B$L+6MNud]Wd?*[`*X?Vs\6a*n#[:oY&^U,"U?s@Aq$9HNE&V,/
%Sb2ehTUiP?r62X4T%]h?[kF<$Z-?c:kBh<+Bln$:"=_,^-K0a$J>Z>GF00`ZKD&\;\Xa4a"%:I*1nWnW1P).]Tk_9_hWVlL':A`>
%b"\7!&\)RrU^78s]"jro4Sh\U;uYK\mYL0Rj3U`_TIq^CD@ZTF@Z25G:5#peU6,9(%AP(@eZolJ*+dLgah#:(Y70W<U^%tSr5pmJ
%_\UM%jZK/>jZ#()THd8PlC%@`4jJ?oY&1+;!)_)S3,BM?A>Pq"5Nnbikgr1Srs6iu&U;3s[SBThX=tJIJf\B]au>>_!F:@uEfNB&
%r'U(XT;hI3B(G=fTG<4M1Q[ej)=?X[BO=[Z^N:0f>s:J'Nl"T(I'fh4J6b?QNZ4g>LA=K_qU"2>n^/YSK<K4YT](!1j7pr;i*IEO
%T6\#kcLl-e!P%%bm&TKqlE]nsc7bKOkn)(dXNBa)Z;8!2]gf[T597Ni5'8i^"&)(rQ5Mb%Y6-Xg^ZYsSU!ds:?N6aYi@F7@r;nmX
%X^f'+Gin`r4tj7g$%Bh)@)(X9G[6b\k]7cn'/?(RpE/8VIN:MRO7%+>>>Os51lb'20ur9uNr4J1Xh>lu$_[6=_Of("kY\@tha$`Y
%>\@8r=ri[3dQu*nY;mnO/3'I2oOPgt)U&Kc)N13[VmRlKU9C_01$\B&XZ+q>\&kk\l%na]n9:6Lo^jP;cBnglku_[^MG+72/H-R=
%hVsF%]*UrFo`V&u^k9(O#OeF0eC9N!8,_Ml/GEl=`#nI&Ag@l@^?Lg"U!F33LImQt^(27'J`E0k3f*UbZi8<`>>OFbYT>kEl.`I!
%g7LWQaA_$h`'iD[BUE`P*TE_RSb[NEAH>n.NZ<:NAFU'8]QI'%mBZ4o0D3]""Pjko,BgrN3k!1TkYVTaSurQt<hK]a]6ZRuemf.#
%f\W]\<\>M%p!n-"P6eQL13CG@o'*JGIYGeVHO_L`pQc'LOB%e7l\bQb\:'K+O8bfeko^4!56B*qN0?ZN]k/&PKH9CL2st$1JhM't
%RjW=3M/j.6>3@F'7+"BGZ'6n:4&HKe5-%>_%XkLPIPak.,`cgnMOloQNc$LBk:>pgd6l-_\=Or&MkVH'4HdB+\s2LLpS*$AkLoZ'
%HVsDHF4uOmg5GO*n2@2X-jQ((m+?jZ2><j/ZA8bSUV>/_'KsAS9143pHVnn,im;>Y=5Ae_q+?!2oFQ'pZi4U?dN%;=)I9ZHK[n_Q
%/<B]!4C(%]:6ITN)`NdI&AN<$q]*G=]"]q%Ch:tA.]o=J+Z`*mV5N<s/3!NT[0rg\orUH*26<F^A`dOT5%E3cP?lYRJs0J%fsR#L
%3srTcjhWmRE:"@B*O8gXTTYnJg<$@CcDmFe[8X;QZ>(bfp/S2_Hpt!AL\:%%@u1[2r90=1;(Vd>VU=S)&TsO33`p?i7]0srd$Z"g
%#jU'X-PB_:[>.N^]<@#!(l'%,-Sqc^k\mSqHl?rW"J(!G8-b?'B$=uGP]:N+\$2&KdpjcZ5J3uJehq#P+f"Ao"rZdA83>YlE^Y,_
%bbjl1Qeb%Mf:=O?0%`.8b><AmjjQpPs#)g0lt7@Wn0ii*n/utp%,bJ,]EeI,_#qTY3>Sp8%-03'^)U<ioX0.Hn6_:@mUq$PXreQH
%RSE_VaSC&8`d\uO/dHm#>c3/o\iJ4Zi(mH;g<YTdDER#m+Eag3[HuBRg9Z2GK(OZ+UU1(`WaS7X'7[O4H*<uN3Rh52;U>t7C`9Zk
%V4[kHA,*6[#-I8p$6&j>UZ%E!n\P+@ce70-pPh#U$A1&Xk_WE%ejo_6b87pHP<?j=Lel1eFOKW"ddORBqodQ?J+AkPVtJq727odZ
%hp_Gj*g`n@k5+Pur(W7$qX8.spKpY;(L6u/d3Dls-EsGo8Fj.MH_?Y+""seJepL8/^8EjGc\ga%1E(7_lk[Zum10="i9A$-.Wl"e
%h-b/`S;oRhmIfTt-I#88\")ZM6u+@aQo]6(2g!neYCPJ6e=a^DchSX'V=]qI"@$k[GNbW!df(o\P]TjrePD!l.V,Fafr7;]WfZJ$
%4MJn_`TdeH:M$h1RI&O<@F79b0U!o@&t(0;?#6-krm#O/7YpV/2p1[_6uuZ2<'T,m#n6&HB@;:7j11iUF+XfmZ%1Vr(6U`"@7K1=
%cMEq;G0a`g%#a]K1:6_$h4'Q>'90<YFH08dJMI#DoqGCTiLl)>ZRO?(=UP2P:(HW)]ig-A8X+_!::]6BTVn&3g?bG1OPYGD^f?Rs
%iT4$`3>GjaYC<CdbGjuO._M8Y0E5@4(TGV&(1*dd%'%(4$82XSJY!3%T..G>canUsI6Im75\`grcV[c*^=n_':Xp^#^;BI&DO^F_
%-)5llVW5C,6I-q_VopCs@NXRF?T+TJ%YoMdK`6sEL[Ptmg95aKfpa<XXAGZpc$K9/3?GD%4up[$T]+7gj&`aIl'#i4_)k3dG5(&:
%pFW/h%8:-p#,Y2;olU)Zl1Us%WG/ZjC(0;YpW)MgCAqKk.Jd5Gno``iFZPe;0Hn9[+(s3q6]kY+X/";boB6*P9+MImIVff#*VT+b
%GjE?AH8A$@Z[lc#3_f1Mc1ri`n_Z&+p`A[Kc",bZ,kDD1%ZX%-V[Vr01,M+D=a"TE+)G$1<\t,#?iCQ0lQKlUkh?<L"PaeRX6fX4
%>k.-rK0"[\-SjIe@&T+l4X'YC,P4nTj57#"6([?Y8!MIBI2sR)"mQqNBK4Ns%Q;d![Q/i;A";g$LF/Ef*TL,>30H<,b`r?8f*7h!
%c]h6$R1:S:Ge,-HUFVATZeo#(\!&Pime9%Gk9o`\g!=P7YE#Y]g@U?Gn]]%DR<8)>cmng=d5Kr%!\8B".\V`1)T"AbOffAJ$KumM
%VrnP^aa@=sZgN$C<69^c2PkLp:64P',sB2:DKoJK`7%.BHe`k)H$0%XM88BGakT&hroq"idre7Z]IlcW37['"Yo[D1_"L4=(V093
%:[!-&f09/e]9;khr;"RE6,0Ghe"$$sq$<qF0c(#.cL!!jU?Y+l\prh<-i5IFIdW<LWDKTBc2UBT^2ss.9H1]HcCq(WT)"aGfm:SX
%i*3qfODrqCFo2US_QL-0fTm1)06Sha+(Zm-a4@#\X2Mp?p%<LqS8u0JBOd[FS3A5\ATObcmZbteZFPI!2Q%c64(WJg6,G(?48s'a
%$Z6Km]K32r32L\OQd4h,gF8[TV/rPVmZc"fd^akrF>!?RdQ(UO*)enBa)Tp!:[=Fp#G91bn1TmJkp,2PcQ.L!pXO_P5t=[h\r^A#
%7kSm)TKeU3JNN^T,u42ET'hk'_L!U&8DMfO?9dV)N;XHc7j)d_IjdA+*mpNee0'4Z:$E-<I#I2<mEUB',<]%A$#X*rVt9YeO(KHt
%UutjW;%>)4;9kp)]-lb!Mk#+dld23eQi#Uh0-)(Wd)DaDY@ZIKqtK[\)!F!d5*C@UgU#.Da9A>VYV29jEP%)"qk7_AJpsn.:DTaD
%EPU(\F2$%qFbOfBk^?=)A(T.FcM-N4UR*MXpaLdm+Yn0>hX8ed-2kS$r5C<M_>QFW*rQm:T'KPf>XIjOYb[<FKpWJIUpJi.KA@>8
%aKb0l:7bf-5%RjW6d,<AADP"@+NOhQV821,boL1KGDZe=3\pK[Nt!1*FJ'l"?4d*m*+HV'hWWGI,T!6#r]0'ebbk_O2)th/VkE5i
%#">GWkbere+jJu@%Z8!S#3AX+fn5>'^0CjAQNogS@e]VS7Yg"ClC%Xh4jJL>1ha#W.qf2.F@8:AJl0mF+1</r/lPZpi85UcqWj`.
%mhNUk?<s"4Ku'/(p#?ZTjW@!o:nq1<'_:<)&(i;&SE"&)E9PSEO"MHaF8TR;Fmol=^YM'K`l".j^TDE:`X;;$`s*&3kkR)*nTa-b
%91Nud)Y"""nG-8&.Xns:(.G.AG9bM%r2mH!QhMJ>b]`%`'9-_QSW8%+Nl$P2##+m*l.tp"h:/1.H=kb1n/,cg_)nb]BKb+U-1-Mj
%"?Oh,ff%FlgJ!!skif'RnaYp@`9hUU*W6urT!**)L.=aCEU^GJr44B,?HB,FMpB6.F7p^G,no/\Sg.>fq*_`9n2':OD6SXc#uKZN
%?h-,5j5*2n3S>DMgqi[]&Fr]<drIb=3)+X6ZfpTTlEB9"TW[,F(d?"2H`V]:RY1jUX[frm;4Ss@3bnPJi*3nV7g8OVX\!Col-tdB
%N-loto25e:nC?&?Io<V$Wu:p0NEL#"RmU#0"-3RDH$V73l1lWZ"4[-B+#l7TWlO;^["AlN^LZ:je@PTJd\kO6-L%0TDopDjPi7"n
%^7Mc8rgGF)^M!bBr"12IZA<"mm%h8k0dQBs&:W0@i[-P0$bBih,CQ1nqWpWLjL9VD:!p;/poHBBK@_UL,nhu*A=%'fL(lkE%1Ett
%6MDAS;!#;sN4U,L`2@<q1h-?V6^L'-*&mG>f6M#5iN^^;n4Eca6n!i^$V8_`+/D/;KFV_^&.pVS(l&%+^P'+(kiWI@/3Z_t63CO"
%4p0:(El.c06(d)*Zp+S6TRg*i!Le'5Zij+V#!8E:QmE;UW5=n?/gpGgSqc.P_2FWe@K`@G92]1Rj@=,BJcI'A_\c,QUh9?mfO1sQ
%lM_b#<!)OF_0:A/7MmV0V\dS(r=(lj_mobdFMUf#G&XC`X'b<n;t0P]p%NqRrqX>,rVuip?[r*:J,ZX$s2X$sq=jpdci<rg-piLe
%_Nfsl\%HMKL_0bZ,brrA5Ap?s*OMFF4=YUY/jU]Ls+6b?55=Le[E^*Og$d:qB$t2&gnN2*38GITqXk&F5o^8`2Z\L;pdkbT%0sud
%$+gKJ_AMVc&.W.JYeaY,&V5HU+2\2J+Vhm$8fIL:FM.ThKd8nq3"C]%oi#CO_F5^M#=622i]'@2d85X<!#Mn:YbrTMHOA[\/BVT5
%*Y>h'-c;SrMSt>om$J,g,RN@9TeIO<oM@Nc&'#948AQ5h(^^::!;aY8j79Gd"hH!O"\.U;'ife76jQZoY[E$DP')<Zn,._Z((SH2
%LVo706CV)dGU2;h&]R-]k6TG@MK8e_mY>_4i\rCU!1?4B"?1=<q/!l-THZ\#4ZH2E,T8E=j=Sa]"V8?U;'CH!,$jG"&-MkC"R;%G
%&Ys`]`'sJ"!Q]LJ*#:Cg#W`G!Q%Xij3X<]"?ia-.%)`@MjA-T%r8B=E'Nmne3/NK<#6jONl4u^,JSKeNJ:\OANC-8N!*k@orTO@q
%)$kmdj?UA/!9M9!kUi#.!D0+59`V2K"VF0HfFo=GiK-X-OAq:,1RnkO8;2m#M.*4$2_#++*=H<W$??SP!@A@U#E1uA",B;gdR_k>
%kQ*FfTV?8ii<!d3a2"K=Etl\"obb^HIQ.ge:m<1/VCW51#g<P%,!YoKapiGc6#-J]Wtq/`d1Tg=:Ek0ojp#hX]g"oJ,!HD[OLQtN
%%tOu5KE*5_;[uDJ%!i?e6*F^nbtpN)W^eanZlLNFA0i>W7@Z`B@PO"_U<,_/&4EgTHm/W#Q#\:F/W^,5+_]??E!_I1LEnE:!a#[a
%QR(^IOc$r'r5]FG8BCpd=p<NL0(=Mok:!:ZPTRrm)Zh5ca:&.K#\$=h(:<l`oKf.C6)5PfADrUOpsg$OrG8Hr<1*051Y>M"V>+c(
%#08WX2A]'ick1u]$qK_/UaBsGTnoS3=ukT=]DZ!Q<<iGECQ+tn_:CsSZ2Jl9IiuHq%iaEGD/KKgqOchg^Zo#T$kbuHXtq.U'-T^N
%^m/,-^;UmBSq8%!=Y0>7QJue,XIV$Hi+:(+YNk6t@F<6a/?Q%B\YWlH:1gWcBmpiRR?dq_pg@a&HT@O_o&J-(Wm+;sDe/9">6/+4
%9,ih/Km9>E?#joY5nH-:-G(cc!,f_tL<Rs/'[]GeTKc@(I[h!SM]\7N5$>42>t<Mjcm.A[$ifff+nE6oZN+DE6cgLBSbYt;`WooN
%I]82oAi-SV5T^=ANIFV#=3R/RmQJnrlLB8(WBBMFE<,i`"I=En@QRr;N!D'G1\g5D4k`6n+)H/qD:N;2'')>\DF+kJ"%LVMa_2@r
%d"<IdK*QC*-ZqMs+/'9o3u".]"<$ip6uXMZ3tI+'UGrgrJB^Z*gbsK4S,hQ,1=Ho:4PSc,[##!nhWS?6$"P:"e_CitT6(SgQ2iQ*
%+N?-J"M+tmXIh26n.-&Lgm'?8\o^[O/\7"^<6^K62Ee&re+m[c33-G$/a[Ik`%^".[%Ff_jN>M;DQ<XHWk%CD,!=+kdj38d8MI&l
%B/Z^ag2mjg@GF,a3\p!8`j$0Xn]G11Nu21XQPN[Ylte_W^K"rr\DZ-!s6&;>p%Nt8o=t>(++O;TJ,e]hs7+G8_Z7FG^]49Ti9gRB
%ci=!js31Q4/A.CT*PfSs@qEbD^*'VFX=q;^quO!n$6!Hp*=]3tN1+!W*18e9)Vk/jW'ZQ%2>\6sL%I=EeRkg@9CbE=U\V&lqn(RX
%OUE#ElNQ>!bk@5.18f6']AfiHBM?a,C?2]M-`H"f&\G8TeABd[VlWtr/g,SmiC<`;<Kfj=E\;<c3^",nT)FREpR3Ym\7))WL>dgO
%%(WoVkk!SW\fI*-E?eXp$m6'GeXgpIY[L.");[&Wa7I^DoZkTZ5S*taBUmL5]LE1"A\.s?01KMb+<W8@g9CEB-(r:HJ-]ij)$hq-
%j_WTVgZP!$:"]is0+0UI0^'$^KAuGVm"CXb@41PZ$omJ^q3Rb4\o4%/r(bQV$@^,c=lYnf_uJ"!R`qCU+kpQ3]$67;iL=TA,N*,b
%)'jY%WM*!]qK'6o(i%iJW@9@X\Z&.1k^^HBJ3kBsJjD;iQ?Ebd=^bopV8a^m1"7)6D0'-<;2#IZF(#E?G"7`]0LRL)8WD]fD5GTa
%k(1gci6Q93Go?'*%7"=EKI&G+Xf!(boda12<X>/K:`uF+Ps?u3dphg?-,jW_>F,'e0O=S_PRb$q<XTspOW<1cP*>lY2`1),C@InY
%?k@R*8p=<N,Zj#ci,tp/KBido-(E&GplQ\ap^*,![H%gC+W#JZ'Fs)+?tEj;',4#T;l>k#g2H4U_16BE8]T]\iEu9CfBbE?N(.jb
%TW&,,0Fac/"a34:"9f:Z6#KS^B8YEi.!/P597s1?/7I/%%7jL)IgW7G9Gp3o:r4?9U:,.J#H.!*@1nDt"*ePM/g%7.ag#<0hU:Hc
%V`J97N'RH@Fos-A"/R@HCB34_?FY>D:3nXur.r<G=j5,\UP494"iCQ<!^,!?5u]j?K,GD;!AlHN^d(1I4B"X%)UO"VL+d-QYk$sO
%=;6FeFY[GRnD%uNQN^p&:@]-]f]tO,I?L;Jr6C6ZpbBq<QqsWqUWa-[f9;p)42Xj>G-YltSImpeXqXo`rrfL3&,8"d(ULaXNuX,A
%GG$+ps+4'SAoDYu/CT<:jVGb&BaG*MEk-i2*r4a__"$V29QC@"rTo\MH"Kik;:jL\7mP9k_[jg.gsQjZ2?4_^]+q\e-fi=ih0m+b
%<<EpkckL;d'\Z9!fbl;p(=9H<*$Q-Ki=K'RJc&%nIbd21eV.Z;'YTSBk[d[N['>sWS>="fSXb@&jcbX.j^c>%Qhdu(FL]FfT;cRi
%A,4e16qC1`85-)?P,'07oWk7\QLhD;FYQf/Y#EPRU:ik8gRKnE%='Y4DM?VJf\rta/3nq<=FuiCpf2!GLO0.qZum$Ka^F2?!e^o8
%rF.tu-s?6E%#k5Ol7,B%)G/p@$3&JYW-Y\6PU29P#q&37ZeL4aq)r+fLZ?!?G6;C\h\@LeT.bee1,,)R'Y0T6%/$U:FP6Il(88K&
%'WD1C!.!mjF@#%M@?M"HAeOsa<@03)aJd-92#(e,i7A\JIgrh9\Yt8"7:BA-c';M2K!H3o_MDo_moK'!.CIc(^fJu\@Q1W46akS@
%"LfNG/p<)"lK"9;]UN>%3":n)5WW$posiPWDU?ZDqg>I(Yj\,uH`-@t"3></\CTR\3dNV\R70!cCrfB+@-kcOE'+DCp_guCdhUV'
%60^[<)-1TH(:Ab?:pXg[>Ha:V"E6GMM/*nT4jG1.mr3QSB>Uc;*!88gOd1#H9p\g;NG^fK[TV6l$Wd>PK^$skb,5FX*"WMl'h*f#
%J.hs#lIc@u_I7rddP7hhfi3L.!=cuiW'a38'I1D\E<=.XY)TG(<FF"l,7"*el;^<OBR$#^G[=Z&JbtfnK(de]2#m[WJ0G9)<+hD2
%=+F`uYQGTlU?u&kg-dGcRKb#rm;TZ[B%t7b+M)WB-<er=U9MgV?%X"Vo.gsroW&),26bqbdb1KK,*:k&Q3ssDA-eKUc@7d?\.ND4
%]K0QkGa/orBD$Yp:s>fq/of<,G]=2\J7_`Ol`nVg'=#)d?so@%8>\+l7GcQ4J(nRaAWWE9fP,fhX>$NLRjQ",\_8,9]kpkmi-IPi
%\59`7#AM&9Bmr$GKAU>](#@2K%*0GdKjtiYa:=5Ij>ZQS%'n!t-(-Vi1L]A3ML?Z>^1>^TINc3(-e%c@YgY4(QdJ5$.&Pgk]o$")
%K%t$aVu1FLL-QC.7E$YpoF`*3#XIL`5=,D+)qK[Am%s2ied2>rN^6Y(*J'GC-`Fg49P#mpefLaqbfe!;_Lc!H/&Eh/dLJ)B"ERj9
%qjSbH!tWUkW#BJ:fhh*<W2#f.g/&.%D<["C(JM;[VhSD7'+bR(<UDIO?"V+M-^tm`2F^thBk+s04qXUG/oCigB;1OB)'\M<7%FoC
%\)LR6$QhRoKPbfrct.IS7Y_Bup.u^Eq6$(E=_8l)45p\Tf`T(,JE-Z5BY=W&<*JeIWXfAThn*/!-(r6N>^UV^#JncHFN`Na!rfod
%dTL3Dl?q>qX@/`,A?F@V"qoRN,#H^\&r:?l:N`m/!o-6FnlWM6)[&'O7r,Q50EMoI[qoeqJH\(fYek,fGuo?oemO'BLKUY")K##\
%]7;q)[k3%t0JNB76&N&XNgH:;hME&O:UFhb[S;:p:dX;YF?g4S\on+tSW/XH82_)$d&W;m!1&[Vdlcni"E/Lk_u>KX;ng:H[Mh@9
%2k.:CF4.fp=s0Z+X`,\0n)OPqTWu'@>V3D9fKYd$NT#4X7r8?M0BD/oot!S'.aQRLBTEVpUarRoX.s'*%_QITL8CIe0=F4%%+\T2
%EJZ!4:EpOBl+eWU>(cgFWIUY%SW9)5Wq<Qs=KtH?lsr)E$"1cT<_4**/5Cp(G`5Eu4BX:\WFRc\-gOE2CRYGR9-:oa[.^EWBJ`4+
%KB!EuP8.o.(K+;WjB>9L*Q(T[gLe5&[K\RjW%`5W'6O>ffFOl!2C/l.[uI--o]6232#eAbBrPbK'L_[Tl8%+'D[o$UBqTak!7FMm
%PXcQUZjG&sc4#12R#,6@rsm"5:CL&p%P_[`U]l19JY']5ighCrc#OJ`f5NN5*J;t3fM9ia2f<N#N^-N\@UQbuI"I(rG1rkIM1M4R
%m0k`bE>no;AHrl6P!S#67ifUbU>d52(sug)DfE<*4e7VcNk"Oi#4GOm""m>(-l--3-=W;1!=j^Oe\LiY"(Gntq.'c7%e4;t-8[67
%c(O50cVA[D^kGU*oLuc)g2N[C%Z-**/_S6B#OI2Ajt3#)4E4!PM)W6`ifjKa?#B#`$lM=#OHP(Kb#r'H</l@S#T<cKTthf9!#9]b
%_7]j_TdJ?/T]N+l5UF.dXgKKk.bo^C%!Z[6A:X0g"'Fl<@[gM_8iSRHcALnYVPiFN2O<$"1&]<gs2G,>6Hn=Y`[3lSZBO^fb>Yk#
%])upiDKpSQH;u,TG$SnlW0WVI--nS*Cg\Ogi:s"_%MM-K(Ur>+/2e2h;g4(2_epA%g3.Brfr!Jd3Ys.aTN>esSkQ&kRja8!Z/>t_
%TnJnWW!EbaaYpV5i:rg%<\@@t'M<sNV+h>/qA[>QGNN_n=df!)P]f-b;!YP$]%o.E-N,3LQ$[=1@SLp-/h/.]]0O#FO'PdSFf=8b
%I7N$dMiq4YZ[:jtgFT!n/70qKl>h*7\C`>c*sXZ?Pb)a*3sE@G0F"tk%;P)B*Rh"jW5I@Ok'N@]LS4_L%IdEHY$^!C7b6j>=.t&i
%7_1kOS#jHhk).Fa6IIhq**fh?>;HD%i;dn'[c(/[`R\migZF.2gW=POX,hpiBRsk-k2Z/gAk./F*bho:A`k%T7"?D_8"=88bB2Ke
%.ATPs9(B#l=(C*AU?*^g*U8a3+CT>)Z6P&)r@<mDJA`9e'!4ZMR;f0)?C9a/%3S4_HF.+Yb49h3K*bLm`q3\?['iOp%0qVDfW[_s
%^p[9@f"9,poH1,Bq=278$S+unq@_W!5pdFUMHscYa[WjD$jAEq4<oQO)NDc'4BsD5>/l>Bgn4+:$fPcZ[d^P$UK91:rR!-jOh\em
%ej,q#Lf>$SR*AX&rsDaJk(B0]?_78if3_"Bj"4at3c-4=d9\SZDF;6\[eeV@%mXVM')Zka#B.n4pp$6_?MYo9`c;Mp9VHh`_;rQI
%=U,K\R(.S?E.Bl*)u>qMlP*"]@ha>bq*WO;pou:M2]k*npp#H8-:?Da.<o>]_9UAjU"Xi(]Q;$La!O'8[s=0TnA,F)9_H&0Gi]2!
%gfL_*2U0O9555^!243pb4YuTIK;5?T1rFgYO#QR'-i4\ZYerCVGR4UR`1YAMO!6Gi0K([G?30-8]pIAYj<HZ*AD9i&PWR48P?rb7
%_Wakl4LJ_k@qNho;bdD`g]!@QT1,>,4^5ac\X`P(&_@RYrLeK_!E[]c*"\O4^HuJVSg)hA/RJJC0C/7h:QT+Dm?:8j_]t:$H;_Jn
%3:9tk">ko6+[JI-hXi'*3erdUQa3N%4Q)7Q"F9BLTeBhqn9kV)C:eish[eBDYUKWB<,I16`VO>b'N1CLFlO\,J%kL5q:*;l4^%5[
%=Ar@p3IjS0p\$gX?((IAQF1c-c@"oFHqOnn?$G;gJPF6CC=R/9l5T(m`e(@9plQP;rH[fn=0.SGA`ktr`X3;Z[Sk*Y*u>s?PqD1%
%8H7AUo@I?`@Hl5(M@2NmEG8=.,TH0i,gH%pE8)]sIZAc+#J?_8O1edJ&\330qC[,t!&]5BDcGbr7#SB<2;?.+oAo"c\Hh3kmRhcA
%f2%fD[qGm"V+-<(5;`dOg(`Y<p&%Cq;oDtZn-ba7VX"l1?07<0\T-P"AVj_WM=Vci,&M*C6QWE[e+5^!1T<tmXqn)adD(bus(+#K
%E0&E5l\ph#DW0DbbhNAPo($LinY.;EOd[PH3Lh`LUZ:Y=_s!&4SOhF&klME1p=`m3-ZdSYKs8>543u!5QoY!dprEQ&gh8R6X=k0\
%fq#Z/Se8-6d6`CeClMGIE#.(M=Pd`+(d/`Wf`l)2?:MUtf<m&=FPjgh)ElF"GGDY7E>X+P2J0nI[;.!NUDTc`/=[UVo,H*p[%<VC
%Utbf^V!o.<$mdBP@lP8Q(aCuZ=(AUiDT+KQXETm`*\UNQ(UpZ`0epLM``0mE0rCSe/S!AST,D^XO+acGR6DRJeZ%5Hl'WoYA_PQf
%?<t&\`gW/D)R%mef%;BO!lc2Grl01EIlA863Hs'LfSU+\RcjPeb4p9GH8`JpK5P2r[b`]]n#'g<?8l1K%QIWG%]rjL30$+K(qHY*
%DuAhSI2E,H;(rlGo\<uKVCEp.b%rrg#PU/(=8DtSH"N@$'3:g%-9kfS"#Qn5H_b0Z?.nSABOp[MMVI?9;hBMo0Vo$IL+2kC)))e4
%MBc'q\PP.`]9RoG5.[>QDM6cAklCl,4XW`H;la>CRG)/$\ecq2-M@Xc0K)^69[d1D#gipd)q&P;n7Q?Ki*p);YjFNYVa2*B\Gm^_
%%U/f`F(e7nbi`olSiKYtIl(f@8l]r+J`Y,;]4&ogHbKuWS*r(mq8)F%R:!g0PF8T$]UA"C`o_L)nf=AX:[71qH"KeEcV2lIhO2WZ
%m[q$ro7JhMHMN"*1u=2;_U#?FZhWY3Ga?Y5[^1QMkrGfSmXf(opFLK2kDeQKSpe)U1HJuo3pTcu#A:r`g&,Y9jLl==F<1Nt/Cs^!
%ZGe]14^7D+H=A%OUs!e-AW9nl=Kc/T&$?/'b%8e*Bi*Z>jhW4t>@'h;%nlYf,q\Sf\!gm^l\qsc/fh1ML>?XGf/fL,"-b6LNR[GF
%CP#:7!?,aF]Y1[QmY;Hke*;rr+0Y9Q.uge7CS(ns=XTV!YBB8QgtAd84-.Y(q!N!MgD@%FH6%FBV(T</X]TF^D7/R%L$ao.:Mm<,
%6,hD"+'c6o\_+1o_o)_cL:2?NB_V5;pNA;c7dRDSOC6DsUA+?gY`\YAUg^Yq5LUX"[ko\k7k'D($`Qd__j4am%U[piF&:t=gi;jF
%o/cFaR@0i4*HiItV=^>=NAFm%fQ\((EI<^36)Q%#iGs7H:M)!MP50'''EUX7_10HaYH8f3I,LAnB7!$24,<1GP>gCC:G.Ets5G4h
%>g!j6R+e^e)qK(9\MGJ^?0.Z%dAE>Noj.rM?%T%N!An\@bFESd\`/nOgqu:cZa1Y;Y'+DhpVTYKn*[jaZgMg[GipeURR<.V&pJW"
%LaVFY?@CUS/k8(MEuTN#Het@_.\<?C54HenO-nOaHE)3]CO>,:%&OSqp[ZmakIiI>T6]\ERt>i`RZ)WkP5j>#WRon=:tH]ZV<<P6
%?Ss&&I?-=`=!(8ZT^SZLg;`LQj>lA;0b:OI+J$DB6HtJFp+pnpqq<.1-3,c<.GDrF%?=dUI!DaO(uRh$X5GoV7Gr#Fc/FjQm?Xu(
%YXsG&fj$q8bDqD%o]lU!n+>b!0%6JLO0[I$G@VU*58eFQq:!0h)h3i>Q2E;oZ\8@lg^aQ^G?#'E$2B1\.hFe?XF\fPb7qI1Sd>G[
%iG99sq9NY=f?brL_fq=oQqsV3_&Hb3&aXc==Ra5qUe%C>F[:cO[fVsjq&3eMhIr&=OaTWHKHI:[o/T'6@7N6]4^A!Znt*FP'18eC
%F&$K$L!HPn]aLAI$Id@53Y_o``hQTYp+l.Z2HLP[Qs_O^iKX"Y)SXK,cGOSE)4:5nF*GRE5$UT%3Kk&BYD[ehJJh-+Cbq@XBVK.+
%,;'m*kB#$E`\r`51G@j'pTA%b$8cpMNnM[no0iGG4g,;U`H+*4lo>%/4helt(D#b4gt?hgY38/!f"+#VN(lr2J)$U0jQ!L=q^$]6
%kq'hYNtnSpnL6Q-??eTsiC3[%J%;LQbI%^=kK[?%;`^H<<V*pmP4I??%D0THk`1GIV"++hR.Sj'CbjankU5iqGJ3(LN?4m3kJR$n
%pj,,!>u!+<opX$m;cCEj!bg$=/#PV&,g,Y!6P)lS?9<Y+3P1o-1K=$^Q75hIhTX1!+ISY3<>o#429of4+f?Q3o5%*4=m,Q'B=iM_
%jeBIT3-W=MDfY6F0ZtC[N`\L/$,,JZN[oo4s'k4lnfKIh?bjOFksD8e%h&,aCqMHFNqu1go.jWG3ZRV-S#9#mp`@`P--)Oc.`E:3
%X41em?:oiS-@T[450Y]iO0?$Z+9N,Vj2hX>H\d/"a'&VYg9fY>-(X/6mF-F$JK&MXEAj)b1iHKjnt(^WY?Y%VE0V]T:KMa+o@;Cd
%r&I^K<cZT&jqT,@:St\7qN2fPC;bW\f8:Bjo3+e3's<NL^%le!a-j*2@Cl]9\aI"!8)<U6@J($.4&s$)q(CsmX.*#)a&m6uH!e8@
%Gca$(9r$t+eI4;gcC;4t^"Vf\^%RGlF)/K]4^CNp*ZKt%)nm11h?I=sphaRRYMAiQg%RQuWY#5EmZRP*c.umN@_1THna&DAG^7'-
%]'RiArijgrE4qf>&"/cRp;>&e&UH:^D!s)6-so(ph%B'pS9:'gnD;CbFQr8/5':5enRk@n@sh$UfZ31<p,)bXI.:A@R[<5<V#>=T
%h'g$Wbn9UeTLn`jebIdDALZe:bBn;oD&)Fte`tp#>]5WfEW28qi5<%U-_Wo"(#.(,7H4$$ISA60oXn;<DFa$#>5PaT>ANiUG.eR#
%&oI`=:1K#CFh#U=h'LnUp[3//j1F@+-O1;5@6pb+HV?/hFL9or(HsmnlJ;EO2s_jgI6Z[Dp8\X<X$<+o`e"/9&foJLj4hC`aRa6+
%fb%f!D^&!DjJiUjds&+K.D@a4?/tZn^DIoEXeY=R2NsqkZhGn33mV,f7LsR1)4U'7nT!R$0cn(B\^JE.&)/F6)u_tapokUuVRut3
%.erJB5s'NZ-*XCp>&1M%VOYh3!babaDt2c+?'.&87_b;K'Af'[^?)0]1P_eCrbq>WEqY732M3W&;.dog$gc!_W568sT38c4@r6pH
%_#7,<]=N%F^dZfMj>t&6fqS,P]B$G%4fJRV*tKRoM6W:$]'Zp_97(;aj@pdjRNmZYI(U*%Lm4NKPls>?:q8,S$!BM#DoT"ajuq1;
%@qUY^X4Nb!G>Dk.fd5SZBG/^uO^CA=KN,^*>u$mpQj1WBigl%[C[81_.X)s767S2*7&\/=OEl=I"WfgEO:%7cJ4[Vn'dq8t>UFE5
%Q[0b,mJr\L%kG%Hp3&oZHdqHUdrVg_p>0OoQ,?$s''I0f9-Q._Na3O3AY-6k]01ZKnLO@bWm3E6QTGPO5kgCIC*9;We0D-SaI>'9
%_93pWEtB:I*J$N&d]`UN%_T,s^bj3$nq>lGOq!It+qEV(m`kj%n@RN,a``9fp@KKSMOl1II]FuAjaMjXdg\k'kK`j>aZKP@"$M>+
%=BDq4*f-b7bXYSoHhJ4`?VB5)aDt_\n?1r"ZJ;[55QVp^BP@J<DDHP8P"8>/[]q>`M>BJd(h4;k>QeDWfu]Ij[t&OaNM5e<=?"*o
%I5DKj?A[>uDC.68C1EB\LU&4g/tSR$ZL2ZCVI5hO'5<J*C$sMoIbT:.&8h"Hl8Lo3!0Z?;dgX4d7,F'X'?I1uC?Qd'P(MP6b8C4f
%Y%2qP\M\#A4n9-n#p6gS?4[B-K=+Fm!;bW2kK]oJkBGTP&O,U-^59N8%n%"Cn3,oka0TY-F4$%?*Sn][UYY[F=!Z&PLd?O@<,dBm
%5c%)r+hXn2JD4RV#fQqnG<o^gdmEDU.<g;i,i:]*B'.p7l1lqrZ8?D[99JV2lgmH?'i-^m*?eQIlVs$A_@KWHAE",3d&?i/]mmY]
%0=`>XY<lH#LTB8u,;3D+#jm2doGZC8@O^N-G.?Pokaa+JfJ>dVD;hYP<8bKT9CVl;-4m03>p(SMJh0\!#s-nF'Gl3uF&PZASFm7j
%M8FsP_2-2JS(i"P&Y?j3_$G;-A$"<[S8<8'BN$T2RjDLWc:sQ\AZT60s.20dmpJ.,nDRrBC0&UF@4#Wr:*&R"=b"Z(Z#aQ4iH[?d
%*):T9&s4D3G*MU?<XD8WGOBb"_'s`qbnT%a>-\4(<'uY+nR]$&R]>Gs]i#-R0AG;f\iY@+Q?7a!nu33=]3BDQ$>&/g$;GS82$d;l
%$/@>e9R^Y`!3YX/<,]U!OZRH/]P=qdGiok5;c>atG!uL7.\9%d1Tm'VB.Sm5Vrt$K36]@YMQS?@Z&ZYjXui;><EufW@qgM%rsW_4
%+$?rqSU$pZ*@DeEV2UIpflLU-4^3J22Ci#sESE%m\SUL+*hYN;@G0fi8#BEJG=CSoAE4d;INHdXL*+tM"uK1HZtQ>=:UW$_PqcLK
%5+4OoE7]14QpP#-WXkWVjQ/`2?;i/VkR2oAU.JLgl1.=X=1Ag>2:G4P?55)dT$+M]`W77d(uP]&VH0q'HFcoR#V]5&*a*P3E3"7:
%lY^lTJ<AH-@#Ej6\`,?lO.Jt/3VL#lM).J[B'/Zii5qO&K+@Mf;:B_a7/1@?@7cGNQl!p2Bf/becir_D,];@#W`H(Jnb29CdVh"7
%AI6E1CDtNsb6dqr%Q#2e@8&b'J\1=6Mrf.::/Nn^6.'oG@gZD\1hqk2P)V5:%A1X:o-K,Jr%9:=Ps"g%W1YM:-X)S[/-Itg()k'-
%D_asj.0t((l:=;F&M!ZK/;G<S[YQ+=31Lm*',h"L#'?(D#6QCiBnjNW$u3ZJU8YO9)UsP295r7IYbI0dVSOl(8qs'0;>:h;Ej=W$
%#Rj3N131g(?8%_n5V-383L<[NP$i[<I!#fa,mf)k,n.$jjO^DQ6jR7eOs;\LfBOUGC5G!d)?e:2'`sA5;S9,@&I4<P/a3nQY!,IH
%[S]20kQV/B0Bl[)Mct0JC,G`$'59lkBYfh`MJ<E%h8ECFPQb`dClG>A?*YcNm,LDmSFig5HE+inONhMAb4J.HgA"9c&MR`bEl4,u
%/r*P5RLrCs-#.IVQ`+9)m$8)iX3r,n6PY-a>]q1GA.9,jb;oDZAOJ;9R!-3^J4<Zh6b&nKhMEFYdRoY2hB"B6ms`@jL6Ig3^":"%
%!U&QDjZepQgWN/@J`B+"4gF'PJ1X&K.>q<jf9Z#595$@";64AOAT.#F$fC),PJnBE83re9al/mZ_n88DC4KB/ac\SF$kf#P'PRY(
%U#S^#h4gX)j]p4u4=d*V5tR4IV%7O=M^r48f&Q0%17&e!!BHTJMb2JINLOHG.#tX:ZHo\$3m&bcQK]UVW&n&ER>@R3eGMj<e#=7C
%Co""FXPaOY;djdFUfA1]:smQ_4\7f'lBr:RI,!.:10AcM-84hj@14`ImD^p*c`.C,`IqeX"^Ll0GF;WZ\#1"ro*Q1P/5cl.)b&Sq
%0UJ3aorR+^CJQ(Kc@2S.@,+PFT!i9)R]-ob,L;ZVM@,1R'Cks124&U'CSf^.dMM;1/U\3,3cVs$p_uZP],Vf]B,*<r&T2+NZK_cH
%[+*j^8j#Z-Z>^B$oKA3B&];"@rWWG6W\$AQ4f!LB4;O(?V.>i8<>bl*pZ>N01:1b93ReC,"9>L[%''eJ;>2@WQ&S0^kHMrpF^NCG
%>%%OIO&^M!bRJ)M%1elM1a&d`b.Y4BiCs6%l@H$"941.O:f6t6D0.n@EYqBsZ4"Thf9tKT.hA_)/jhV0=`GpcF;DH@Y\:s]c`KR:
%q*jCO?_$7`Fu"Ol/E(S^T`XEF1Z),elBFr@lWO?do.[nA$3B`'9ChqZELY-2\r-eDS`d'k24V-k=S]6c?"MILiWSd2KX+/[SrF=`
%4Psm*o]sI(`9=m.%4a%Bpt'hmaW#e2RFfrML`'8)Q3@@AdN+B&kYnW,_]Ms&&XX8M_#CZ;9**P-HkK5gf<1$9qI>)M8L:*t%jmBI
%%ZJQUX3!iFq[R-Mj,(^60oY1DKFkK9#mMkc%m>G$m:%c=,>!ZoJVaPD?>7bVF-^Z;nTH+&A+Rj#C.*#OMY?2?pLNlMIK13/,:rSZ
%n:T[64A/n\/p4sUg*k#7[.FQ0Ji4Fo=PfOmC$\n8+h,d.N$+>89KU$HG"uQ#8Dl>m6\WfGC85Gp'7;'1nV7qDHC$[m!O@0tZ>#gY
%[g%Yb:c<=!1s^F4>n>X<ZLh9odZg5sV.q2N6-o1U@l(jrBO\eU)rhkkYA]N!1MLt,9M@4>GHi:_r'Y:)NC11P#Y2$!WTr:=#hWFT
%AR/':-Z`]Hm=Pa7Ss_f0M9+KX)snBorC#^1-gs[7hdVHbDSnLlo]#'%#I8k@Qhb\/'XNF6?K_A,5"7?PZs#pR#&,[pbj[\<F4mX^
%<qrZK;7Quqho/a,KhYl/]k.HaLpM!%1/A)faersQ2KGaj.&iZg[g[h1%@a;an*2ga/19A'%"$Q\Ir8'OT("jFX8?3Ilt`O)UjhK[
%ZB7R=U48'rJDQN]+Dc>;agIiFT,K3lrtki0pPj.P&@6Z_jY]hgg=*bP0AO.8mspd6SCTh"nDrq@fV*VG\'%3Le]6,"_EhOS;PPtt
%"%k@s,ib$P6R"Q#j6OWTE(DkePR:];:/*,>''XSo+6t&1SdZB`[,o^E3D;=e1nGV>bTVpaJ$=c#om2:E-9!hu\qF*C@\*BD0R5F=
%AA+E+=B?(*/Bu0aZU?'OTud]55+fP]hd.kO7WRI+W,oE=PUUe@[8c(E&D!ZWC,Q-+JmIR+V2KB(n=1/f!*Kr1(T?(7)8/.*p+h'f
%97Vmn]kJ$'Z-H?N@Q4X?lS0C/]r,qlRAC(Pr&ia-4\h8N\N%#odsBTd[ER2+T[<A%I=2nmW,0#id_(ZYVjq^e8>P895:)dnX&5QG
%(WBt#AZ;USksef4abu5+)Hp#mkL.Hg&3D4rYWA/p\=:<GR8FrBGaQ]5P>o'K%gUrh@mFW5dfb5NJVL_"__Z9kQXLiSe!d`^_o-hJ
%HAD3q9ebmf5+'jH-BqDZ#LcBjp)L=$U/d*N'YW/4cNqe"GQlNZ/17'?A:fI5Z%TPOJsksaK+-`o]]p_nLQ#:pa$WQl?9[:Q):mI%
%<B&AILY[h&%kon'0`'=.Iq=U.PK^]LK!Hi;>l,)WYNq'mch,)N;5W_k/`H7>J"B;n-72\Z<@JAV!Os6h\Ouaj1RFHk4u%d:XrEs;
%(@TptO_!:TOQrAW3.e#gN9-5m'PWs>1IZV#=YiLARKINlV%*s82fi+Y_*XK'-Cqd3[>.ug'3[ZjPBP78FQ4Li]n)0["IMLS2_Z=,
%6F)(=::ike5cH+'\ler(=B%q<&g*i.HZ>Pa&"]uK\P0-RaB>A@?t\npI_q_'%'1eP'HMaKX1/Nh"=C+&3Lp<Q$Aihbf<H2&KX0`K
%Onfk[Ac:qYbreZ(m&?JUIF`ju2?d1R$_+[KOV#;:p,m#`Bp;PLUY";R#Au&7@:FYQj9AV^4LNm$AWc[>PJXF8?s0sg67W=<?:9Nc
%jIc%0r(@;Dc#>9;(<X0(TE9s+'VD%p:)$'ZM+Ycl*Lt<;2bprpSC?FD6$*gFJ4q1B6>Mla-JZ.sf($i0NLX$pXl=rR7GXh@T"hFB
%E`YHlp2]lMHrr"8UpAUuB)#buCp^*'0qfj`;a3,tL#-AA<2))F=AI2-^HlQ$r9#mO]roqLNVO$gmU1WoVDr1#^lP>3@#-$_pK"PP
%[A/=gj;\rHdZn_']NOBT5U.!*I%>)C.sQ6Q26D'U=o,768r[+WREo2SROfer\@Mq)AnCi><5$C#i#8`E_=UnrO9OeP#fhj)9.,^X
%krWgqcWTF0-5DoG5UlmLE`q[f5fWL/0W3do./!RG94Wq9CEZW^gN.<s[4&1?,tISE78-k#=u7j.Qf.H"L:F\).CbWe>i+7ig?24;
%4'TL5G/h&I31&b/<d`&^X/<jf)A'?!RZXZ&p,r*C8rTI@q3PmgO)fr30e&MLJ2:NmKEW;Y!FKhbch+;;1FZQ9Z!;)*odS:mYO4T9
%aNR4E?<n#MU?#4q`p];i6')YNP6%/4$fcGt^18WV'Au%W&Ejknqo$]uDou=N?9U-gq5\3U1bg5"$NRZlRfZ7Rlm!bBW`<tYfJX/D
%Y<jDa&md]2KT0[q=7f$??R0-fa;\m0>:2Oc&4#I)k9!(9kA7bu]Z]r"<`WeRQ:>\!^Qsma1g,uDZ:GsSpB+[C9Fm`?5B=kL@N)5i
%k+&`G8<P'>\=Vr\l!_TRqE!-:5KdRZHc>?WUkq>T@.#socr\VQ^$SU@AAL[2eK1^P>JZZLb`c^co,<9*2GYYY8QL@3D)tS4kda1j
%>?"o%J['"7S))V,&CE7*SR.d`5t;FQZcRA8RD-me8cVSl`+b'V2p"*^IO!kpNhJS?L29W<cHBAb9?IOo'&ut`(\%lXj(B,_/cO][
%A_QlP*DF(i+ofoX^*/->S44FP?OB?(/B33#pZ0ODIpKPa!RV')fU![/1o=hUQ+471:ohm`Rp+DKVX0:(B>NsX]=tG[1F6NAPLCWU
%:N>t!UR+@i,%i?'&QS!e@&Rd"lXPF-l#A@/<+sufpm*I\.Klfpc2??YI8+$33^P>3J6N@sg!8CF)QFSNc*6)2MWS+1gPD;eAOjur
%VfLnANo&4_6-]\dcpN[V00>Paq'>\ho>*"'e]\Eu?reh,Y=q6X7,M$G/5RVHf,uuSjD9*7XtX2E9d#)"47d&V/osjLH6f"l4)K0X
%D+hA`/u5\k-7b=0$O1Y7MAl9uQ&*/#k/h5(C4XU9$PIHOLJDk]-FXnafSeXYN$b8P2^rK>CuUkLrX/bm!f^'o\*+9gN`m5m7.qVI
%XGBc\kjZr6X-;.K%H"</(n,R2ZZ,r)#D4VD?aWG`C"E%^2[a5'cH\oa47c.-b7>N?:)p&<@hVB;DVBA<DRJDOj_hdFf/?UU>oGNp
%7R$_7\e4J&*kXar'B.HmFj%CY*A"%cYl"_^'O\5aE7#+rejP!$J(QqHl)K3`*ZcgGJ+"H8n?[B7gHX&16hsfQ2[[.U_)D^3b\\Ha
%F&b?<8dg+CNX2.^8,UO8f?8C%6.CD3'N-'sa:A[@HAi%Hndo.l-![]93A<MlKp^9JZb\="R%<3Hd;egr2S',EGkT_[)I;r*_s"8Y
%B8dn56=@O[K,rnU@WG]YB#LbP7[FtodCmNtWK9=Ibj5$9mFX_j:TLBqTuFeuKBM:"G1&Oe.O?^bZZrEfIcnsqO+H%:s87[a*chk:
%>V$cYi6ET*OjNmL5"?T'RReOH#N4R6U<sYFKT*'o[fP_#_=+[!GH2Z>3nWE4kR^WC,gIP\0&WmB^-JI-6nOQS;=eB;!Ak@0.S1oZ
%&.i!6iau9O4/le:#0)c+)"*0D)?c(aJ#8h>?@OslGK'/Cl\_lPh^emH3JmRL>8qsR+(8I@6UopNFEZ!F3&24.<5eh<]0TrYA&(K#
%S=ga[\65)*ICULW/$*\)7>X!Km2tn&=Prn?&)ft[CV!6kBb.HT.o_(&kRQ2g[h&gLP/GOHcV;uYm>RNP_TL3^]P$s3=oB4HQ"2+,
%N9.:%Et,4Hq(*6IKf<KN4?R,aB'O[U<e+dob"X+H.U/lj+rAFl\[!P_>H&U@BQ<g%J*mjoLt*Xq1Fa`@meiBD?iqt_gmVn$B5n5n
%c"9nr2://i,D6e*Z?CDF'i!$<m"Kr"D'Rk\XCI6sJiDN"D^3h7:\.0l/*6(SC^;Or[9"OVU'5U\(3.SWA$&V3Jbqad]a=#K(4X+Y
%@0L<Einsg.A'/^6(Q.nebD!4%NEAoc5'9mJ'@ffZZ/!Mq%UhdA>"pV`[L=OKZkc[\bIcYL2e1*B8K20;*`Q5X2N8NsmL+m,#EN.J
%GqQ6$Z"FYap3E$(@!t/Xb*3-d=Ij50$Ohff/6mMd>,eKih"&o=Xau`o;o<M@<=<RHX#OJ'.]a2@Lq*3l8\FXroo3&m;4Co+lQt$L
%@iAIA4BSB?J7lq^PC$G?Y+?[Tp5N0mD3M[\f#HWO1;tcF#`XKsO54,;cSo>cq^jb;`-H/TenN7%M=n<B2[NqEY`[]jG'@qofo3<O
%caI/`?X>X"IAm^7.]ag4$1[m[Yaa+WqAd@YAg>W6XB4l>EA\a,DoC?ZHD#uC,aYts>Xf1(%l[UV*LAZn%:+6Q`l*c_$a<)a&6A#G
%<YfH,U082\[bmdI4H@H;m6k%_>MNO]dTXZIS<5)8l<a'EXnN?V`ep*d9n54CX6no*Zc48l_M(WOWt@=@LPRh\J/=J?dEU!Ti^SaS
%Mm328cAenV<7/#p2_Cu4_UFaFM"LhaoI-pJ#OZ<al4%1pT1.1p8uu[H&^]nO7#\+ejc^+^:ud^9D2j2:Od(MVEpZkHfYfL_:!qiQ
%FGj+R*5TLOop(H:!)u`9Y4;%af$aYYal](a/fXmG`#5UFF!(^g.rCE?^,)#=.2g!,Mil>?+na=+^i[>YSso_Y=u#TLq(tK!lYkKQ
%#P>'6oi00md[VSaNucL-A_6!pd!j]Op7e%JMG,8><E#f$ctFIM=:=:N1\#2*p(:>JIcFn4n'Y.i'N%)3QdCb49n:uWCCu&6G^=":
%qi'6)T/2V^lKL@YhCPk[R:c&7Tf+K94rrJmWU!8S(JGbYF7E>6k()CUBMe;7M$V&g24o%=m7)@/e#Z#Sn_'o;1n1SR)9o'*ikg@e
%@9V)MS2hc3c%?0N)fmX1NnC,,Vlo1Tlp?#ep7AH^cU.4Tmn@U#5a0fFG-M=<2a+j!9N:+L61Q?q*n)0C)FZQmVt;HgP:(:Z<cC_&
%7L3W\4\cqZV=4RXO5HGr`='H();U^,)SXu-ZPPemTt6IBMT/+P8CpcJ,KcJ]>HHtLS-*Yk4,g]&%ju^</1*_,H'?K&?R7P6JP>Za
%N\!$.LB,WVq%BCSa2ZgC@-:3dQk+HVVH])2F\_S426`6Uo?DCLUkf1TLnP'&eAM]!dQ=Ug(!H9Q)Omr`jpcF+SPA03XBdj;5iYOm
%20>*uaKTii<q?[abWK:unlW]2@WMD,D#CZURNEu_3Z^,_!Y38,9ir4*3_CuijSDkML8i.m#1ePGD-BZE=[3i4.*4oWKdKif=q!<!
%4Z@[G@26++KXbjIA29$@1pOn?V5]P,'40TemhRAQK!=lWGJ"qqKR98N-Tg9Xo>bY?^8`kF)PFotUj\Ej8-,`_P:fu=CGgb%lsjU@
%#^D!WS4@`,0W't7=QiaX+)?nH="j*C^"\cD!iWa8p_obccDRs_'C6h_/tBVM6,^\:V[Te;F;CVE09\`U&E6iNo]!#m&dB%T0/0J^
%",Mk071_n!%2lsGDnom7bEodinW6@ReKoSIU<1RbIOe\T#(9DP+0@6QRl_Dp&i0ShAa`gHUocC1Wjn+TJee`?JXUknCJ;WbERU9T
%)JN<U\IE4k`D+u;Yi;[qUFL.*`Y1#seE)SXS%0#9Up1.aW</nC'%RDK3[dBL4([&p.IM(.R[4^L2(=25nVsCS;8TJ3N)58!8l9g'
%9Blk<*:(;scI@2Y=)WD,53c:i!^Ebnq<*h+XG=eb0D@cNo_=t587_r)^PLBL\Fc?i;Hb6aapK_0!AL8"XAZe3n!-H;\]Ds>#l7aP
%lj=31,"&0B^=V_7_]$F4BAMR*`4ff6G[5S:4Ncn;2r^=)-S#+4,jmr]4dQfW$uu9)gLb"YYE<YlQW?*:]#J,5/j4;226U"XJMj"E
%MJ-n<+!q;+MtaMC/1748fXs5G@"@th%8j[63.5Bhm*\61`ZR)ND_OoBp]d6=[a:\D6DNhnAiA\LY#[D!ID%'WTQ<7)TQ?T7T3-dE
%lia+Yp[bN81un!Cg^RV^(=Ylj'l3(8bbRCKW@?AO8Dspfl)OTnXroP`%]M@Co%pCub@/N4#,i.))[@/)[qD2OKF/.g&f;kKpsu1G
%/Ri_%MkuopFF%WWBGdJgW]^d81kPqU:ibY\'g`*ZcBGK_;lPJP-/guI8O4*HW]ZR7TW4J_>&C[:6>1lRYC,l+@0m_rNA4H!dVq%_
%Uo8<i_pXS<QK$@>_sj'T,?Tj^[V#^M),@UFHD1gV[\cQRq:bU61d^W+@;h.IcdFJ#GEH^q&+oS"4j!LFdrkkAT4D,`s(P/j>IX'0
%g/P>bJ`>:e>9U/X7gca!RE2r.R;B.2A^aQO"/F_kBCka0/keKJHD^*pc?,l2;FXK,aVKUi0^&SQ/F-loVW#<B,H1p3o`l?KT.N46
%[Y8#k)OlB!_J\tL@jD<h(l\GF:jXHlm"$E$4`!tbSY$jX'QOn2)ZWn/kgJsqr;s'G5H49DQE>#H+2udX<I)6klB6C[[Crk,3-\MX
%MP&^29Mo:22_V8;%toabar`Ap!b]Va",p-N721c0,&>aNPBgeH5dr1e&M-"913-+DD@28n0a2;!Q$!*mV![c4hop43oW[$+W0C@6
%dXNpeA]6_O'LHPXM(p75fp>iJJ)t0'F^HDJ?ks1K5E0#c1OX>06PmKq9Qj-i&/ABb0BHa=T7r%aj^^$D-i:n?:/Qqt.]*4-2>q49
%TsQ<1b#UWh,LW-(N(_=O?FuT!W9%b+BDW;#,Y([_)^QsqZfZ+YO:/]X=*eVrb'WQXKqL^6Ab[C^P9d\*Qe!/DG8,nR-+LtmTOQ+l
%\$hJZ];gK5UB&_kNMmLGLt'6`R8HeF,a;_\@P7%DP=O=l)>)E#GDFk<X"[b!hWS?SjP$nf3%MbRXEA9g7fUF:A_X=&48bg0D_BSC
%n[jTuBG(P]UX)84Y,0U>:j8<o:G:84n@M4H.Xdt5F`=B1\@AdH5ApmngTDjZ[+$E$mg=+:GF"h=]0bfkF5_G39thhTdKR@+W0>*e
%SUbE.*3Yr3q(aDS9_a$']p/>@mS=8A6#Sug8di77T7W]DcuAR>=Q30AX(k<*6?nr::p8lR?<3KVEm)OJG-k[-DX'XtDRX`["7$r-
%?=7'se%SYb2ruNaG0$@mSHGHnE8-Y?BH$98eXSp`j].joZ8C8]qg%qB3VS3?&`-<d'P_[[ST1BmN<Va-(<s<l\(T-5B&.&dQRn-m
%U$s68Ga%pT-(E_!hYk][=>tBm*q]0TXP;"B])=ko"Uj%1XkS"L!/1([XIH-ib#6sfG-p):XfT>+Ndehp0'[,nMNU&4?S2KW2U3GA
%cr>;!\0`e3<g'RMDN8"uI:S8LNZ]QMX/a)+PY8RE^S;/hWU$i[0OdDCqW;HL%;(!1]:%/cEM97@T5T]R*:kffp0cU[MQ8P<]YFEj
%N*@SI-p6%OWUDPPYSTaXY:)_dY+r,2.TF)pDLb"nX_6MJ1Rs:"EVj58ep(KVgU=]F`r0W+r$.l]V=ou.44!U<Zq(Pspda%;hmhk-
%F%P?hh9UrW`NGHN;-VNApr>J0$+OZB2&56Kj7C[uRdC3?>G1fNNj_#>SSemZUbhl)lIJd%590X>?8aga<F+O(rpfeogO*7IN`)Qd
%X++rfY<'Si5-rWJa[X`D7dN0[H*+MuCo1Rp#1qkDLdfT`NVGb&QgQe,E`FHgJ"GPI.L;>NUH-ZhFj9NK7XW$/?'B\\!Xbafh)*qF
%\%ucH4+O0:5(.1>UHjcmV,Js(:GSc96JLGH?I,(<8pdrNrM_W68DU&5][H@MHFCgB#H#1dJ<IcFbVQW2jX4s5KtZk[rmA(G"1nVJ
%r+FF#nk[Wo[$T3BLXoX2:^XS+-P$d#da"X1[dNcfW.hB/&aC,):N!HQBCO'[`IjGt`l)@u"jkZ1=l8G2>dqX%?T^p[.m1b:eU*g)
%.FO2gq2gg>)9;Q]TB-/gIa2rI26;\AI$3aln`,#OcgjA:I`cXoER&9hj]`uO5CAu>qcUYjUn`i4I%5+"f&^&Kh_lK\r1;qrgX#Hh
%[^]o08!!7Y5KifUl4i*9*Tu1+Q4MZUT5gAsD69$AYVjup5C]2Ah7(LM5E!JpXi![e>AdN6/^N^h:Egr=gGdM.L:(SdgGW]$V@s)l
%]$>0SAm9IYBc!Sr(*k^$fQ\dEZi]9cbf]l;G<^I&X&K8%of_slT2qDhjbTC)Tsl!7Z,PGjm3g?#PsT^@n=@,g3Eih)Qe,DiUJi&)
%Ski33?b]`.G,Hm5Beb)2R!e1QQ1&.o1o?gtY&2))4MSAhA,"qF;:B^SD-"?6qpT[S0k#86HFK8Xhd<*\CL/M&lR4])5JOto[gf6:
%+$A[-5'FDL_r^V5]DKhO'$W6?*kV<#b1?-VS8VV$n-Rrbmk9f7.8#<F85um`#K:fI4B'e=KK":,dAK]dlr&%u(7NNs4uqINd^FYc
%50[XNnl+^XBi@HK#','a9iM.q)?A^IQA'<!KsjFDETs:Z_pD@_;$"p[IaW5+ho#m'[DK1SkL!7ad55>fg#3=pB+!h64Oe#h'XkKC
%^G.6R>hWiO9\XaIlaSf>0rBM)CJ5'18M=AIWcmaAs3.p)DI-K=g^kjuQ6F#CH>5s@TBL,n$Bc.m+P,0!Xs6!^#,YR1KtZlr6hHSQ
%Wlb5KVJSQ-qH9]_\ufBWdo=A3;YL\CjZ]\rk4'J*@IE\c"KWC)SG!p#rq:D[^F_+_f[7adZssYc`%)=)hDS)Kq-Na2:Wj"?"_B]=
%j6\tPHr./1?%ugj"1>Du(Ud]4+rBu$NpNm==P5:&(8a#8d^0)FYasWcKGI3>-$briV`%%g*S9,SVR%]r!$ps%nVX?_Q6QMEFCB2q
%aY\5Pl8,E<p/rUTlaJA9N[%BT&*bSPcu7)HPrG8:RgGNIr_mf?&Q/.`k5K^)2>9&LC&1r.ZPK>D_UnNL_\6k#T;)Xl]Q(Iq;Wk8B
%N/>n9-M^-mD+EPK<P@(7fIu`X=LJ#Wm^?OQX#Jo.lHQi7=hW521l^cpkrYq).V"*<T)G2ENW1Qh[Hac4kc!@&I`gdud"hQIS6sLl
%``lKroq.#o?+giZ_<j8opVYN#[.GC<#lG+fCcNO.gY.M^D4>4sJO/DQe%&=el(h<L@kX8PV@97RG9)\!(.eK*m(I%9*(c=tqL+rj
%rrB@7DCRHc,(iBV6Jd&4`(1diO8ut@kKEhk2pR8]lK[g&mV9Z-cJI7-eO!0!Pr=#[Qmr2M\<U\7(WSWM5OVX@Il[X=C2,WCFD<,.
%(?V6<9NidP4?N8t-jc6>^^(/[Bl(J";6;;+1P8U'`eHYRH'dJP6cA3^g8^S?!J0o1'X9RV,dXqY;0Vn@:']qWFiFJH/3.6F#9(j>
%>o+_tk&ooI2'U.4aNWu;NLFNm*^;GuIdH":]Xg*E@qOl2E]i'=o1%#2l&hB8'g"CbUS21=]1$j:VjhX;?4G=CM9NVu3&l5U8<(j+
%WS3^g@qFe&mEJuCo97JDRq`2'cdS6#p'^\L\d9Y]KAY5P/sT]!^!*#1D;<L]&gMXM>V#Ge:u[nD>4;ls=$P)?UH@UIZrD<oZoG3Z
%^!RE7d?/o7A4MhT-pr5I:[NHVHr\='aRe_75T;W")?ST>a(=m`g47GHGor[Qe?c(,_6X=m</p,/XYN5;[n29?^\Z'q32WX7"g=[t
%%MI;N-3A>V;\q@tjFc!n7aaruCXa-U4h.7J62uSaGrGNZ*=im$hLTm@)nLdgXkfX5\(GQg64-teg>1mB*\(%q(;njAfU&HE%@l34
%8TsR>LW[il&X$]!/psZU/9JiroiH!:9INL+mB9),aeG,Y,fq6KD'DQWk\0l>=nL.-,hi^jH>jeUM_6To/Hg[$F'o8PqgE9[grGc[
%c!Wnlp5Y?$=39#?T9RrSD^Lp;2q>dXYG:$:RZuE6d3bEK=',,91F[8-O4qJi-Rl5\aC<)`]`&ORa\@HTX5;-iiR%$P3as_Q*%Sq)
%pf6TR*?H:,>RklPTXS)aA%gk3gT9](D(Ll_H-t@8PP]U"#(%\a932?AmUGVYm(k;<SbDXUe`R[IG]6c'HXcd"$$RtjMnWpH]u;%T
%.=N@@61j;lYI>"6msWj$q"a[8G'7TmrV"^0&%>T+cE;&$5@$ieYn$]ol`HB$[@R*WSW3=)rl2tSdTr)CGk*Y':6uL'/@XJ(eXdK+
%-NWZ3ba[J.m*\DI%m,`3m:gdrp)i'?gT=+UNP<\F^-6Vn/+)b9^LY+.$eq;?aqpm!mI'4bmpnX^,2__ZeW9ZmrGFKudT8L<]Ibe,
%(16H&]0g`/U>TNA%rFr)'[HDF]/.^'?X:0jm74?j^\Hg-?h*To]p&D$^$1j`pS2*$hso0n<F;<>lP/b.I/VhNg$bS@@cO5M]t_.$
%s37[O[ar"1Q]Bk/&&#^RW9Z^j^%L:G:]@jW<ulkW8$CJ.146^gs#GPJVdDX;7m/ZaN@UgSr!%*>53ugarQsJ'bFuU,lPqGqFTpqm
%]Q2dl%`INBe4J`#Ki_V:Yk5'^orJ+sC6,>7\UJKcf?iXPWWZhX4XXB=YDP\nTC`,2q795L1D4cM31J/2eQ1Blci1?A7]`[meJ/U.
%]4<__@2N*[Kp#1),V+X-TXmJ)0pQ=$c!c5_qi%Mli&o;u\TKU!(fMrf[Oq;a15UEZ6gSh^N1\a(Q.=J=W_XnFYKB%pb5r>Nm&S:o
%.lk9iQ.X^/mlAM.^7M-AZAF"iRCd5^p/U?(<<mio`4e.G_.WF`:k;1`p/P\s<>(ek')S]9lQS`:Ef#3E=a_kTm_fb8]YrHgeQ7Ft
%:+ifT.]]a`Z^Fd%?e#Xe\U1'-I6HAdP>:JF)H1MlRUBT3eK1#DXX9:b=-_;p5_'b!Z*11.WBZ.(D/`rk?"`\pM1(q#iS[LJdJ=6/
%__,,P`4dB1D4JPYWiSDQ_OG(F?WC.a<-85XE>&/K3iL,%))nh(ZnR3?V.[fjk_X^fEqRp(SVV#j-h^POolYrZ9HpaFC6r*FO,51V
%Pp`)7p!qPTH`foar1?05r)".)WhqW'M;UTt@UK#"qWN`6I?J-qFi4XEm9d?g@SRA1UM^Slj&n#[%#aiIo[faO?f$B#<W%0!*0[Pb
%=2.eS^aaeUPNU4,Y'.b=Nk/2ZBDnZd$4rjojmCc#,DI4;Tb5d'i)_kp[(B@W=+GefV&C`sFMbEX)-64qN8_dpHdgkc>"([1<MgLP
%kHr.JmOi'84(X!2fVU]AZXJakoqB`V-AI$Lj%e4#N?%WD\+j<Y/&tc2s'#/o?i@anWD^Eers]hV4_jN%W=BbtlM?"Jg$'uDs&Bq8
%l:&/j<W'&YSpfr)Fh41L(]UOqD>3YifVUd?o#tA,i&;m93Spm#gsh44)Bb1B]K8m`It"&%IQ-E/cKXX4hDe2N2fngbbA3R381VA9
%G#n%eWj%R;mTF=B&DT8/#.Fc8oa84I!nBo[WL)&/-gfpDcE&?X_=irTXlV7Jp$bJ<IPYH-g401q@7%)l[p$&_og5dV[lQh9rF=PQ
%"XfLi3G]#Iek,2oB^A,op>U@*+4=;uUYZSd_psj=6ljRP]S>K8Z[JHf`aOsU9(Sk:%FJ10gt-R8%%$H-j/k]$3XT]qN"15=F#D.`
%Aqa>a13CdcGAI3!$QL2"TIU1]!f8Y&Yg-8$&%/_lUpo1Z#oUVpGEfj*XPn+><8"Jem\e&t`2oFp1"F%e&ipr?^bC)&RKSS#f%B:9
%iKlmj#C"[H+,?iFf;X#aU@cR%(cm@[+[6%qp[S&imUJcC^CCA9E/A?&li-"<l$XX$;YSLa4F3@n)s0?XY5:/:W'3],^CK)+]CauO
%f;Pb<hp`JH"Gb@6H\q#Vl+]CdcQVTQ9kap0hMC@tHL"8[kY_(m?oUs,Cu6'-6`4\J[(!fi&Ulc:Re/M;Cu;_:]#l(Q=HK\/IJH(X
%60(,aRm>E7o[96p6l.p'TO\eg_1<VdV-at5ZR]d'jQq5q,1ngeEqo"ujk7VUqm\cCR5%t^4':f4^)SVbWnM:@Ssf;dVjLUKOfC+7
%b"R/K9,l#^Ks!Hg5M_5u(W.9,e[_9"Cn9sOG#SSCY+G(WZ>M9p^I5(4-TsJnIV-+&gR#f*;GAn3]=6-h!WC)eXW]"1[Ktmd7(MhT
%q=<'H/\K3eh7i1=nS-*Zp%*'.%?IO>gT$:j-;b2X-m1LC]\AG.;GRNo.pZS&hJH>-8'b\m25]e\*Y)re`A#!9#Wo;\E&L_^ONW<u
%^"^*fFS!,t=C8Z2@e8TqSL9mW$W!AN3<$E!b>5SgC7aD-\(dPBeXI@5PnDC`gpUnl05W.hpK&E&^Y5!AGC&fTX+t90<dSPljc)4&
%3\p<(9"@g4;Z]aDIp=lp^D^nno=_F@j,97ea)g_'<8@2[Z+%Eq+"qI1FM5G8lf.5C*FDf9OI)iVrMfUh=)#7V4umWoUY_DaVcT'4
%-fsQ0f9(/82nSYCYXa`/>i.;aH_";q)@Th$o%iUBH[I]bGWEFOq6="5hM4:%]lbcA^Gh_VruPHnh;bR#:0X`2k>raLI+?8X'Z^":
%oA3j1g3U3`^9s<sf>Z_sT+_!Irl.jVF+2NJ+*AMgN@ojEo?1o,T#79S+.mDX(oL(*<S//o;>>JfR-@'^rMg9B<\m!>ehrn3G:.7Y
%NR"&o;:b,(s88lL@nK2hOk0jsLCDu'4f44]^q$EWcqN9nWmfqef6^%H?$>.PJQnD=>%%#G""jg0eWU"7DH$5Wj(\^7eP;/E&.Db*
%<97DN]k2m@L^,4+er0V['TYGql3[V4ISBYJEWCk$"7%nCC?+k5pZAt]%%&,3<Ip,>d^AcAk'T8Tg)A^(SZB9Kq<])L`rZ!Q4_]%3
%\?5')I+9&F@T0*JpEDL/0MB1<C+01YgXClY^$B0(gR<fqqu%9^dd<iOU_M7L2:-Kr=Zg)/7b)6'&+jI.e[\F'8uJS1b#e;+#gi8<
%,W4i"mGVp'4adISrTb\X%:q6GgTL#X%#^J%DLMnAFWj,":JX"\`$=Huah1sRKkVKbAC6^03(TXAgu6BUR*W5GB&D4bVTNLCWJbnl
%(jbAuon.Un,HA3^X*9^lNMOKNPH(_LpIc1B/T#]+Wgd\_]YqVi^pL/A;OO))^%F#\4`Fe-XX%'Aem/T.e7j+'4ici):c?]tM`/?Q
%3om"En:2!+c/%l+mmZQb@d^5c%TR2Hb\osA8Z\DBfR>u=:.adn7!1\&];Ro88n&kqG"k&?Xd$c8q1s`&3-660'cO.`[Aod\=>q<V
%^Ge;Y9f68p[a8D.pT1!M=>q>,N[ER0-*_>OiZK%Ds-1H%*DZ@A3f=aL8BA6(LN=kE3;>`L804g5XDhnc@)c`7'ma>1qj`QZFp,^S
%=0]U`Re3D6'b4f`)nfA4<$rU>q%P>qB5?[2XKYlYWk25M+1[iXWI\eA>f"<$;6<;>GZ^hDh:3"9,#^r\Gh>5KZCoS)(-LqF\_.;-
%5i%h>W`?0QLP&I+-;s?;J$m1n+n@e:8AjX"<$&U.@?i\,WchM<&WB`ZYdAcmeIJKH8LPNA-F/sAC?U8)rMpr6NEtGj(H`\delfK?
%@K-HqrQGBO*qiACW#6"*\DUf_I*_<i*k#@4Y)Jq:"$Jue_c@CY($Fm5V[ZSoYlATAl8PIP4R<eSV:?(Ap]tUL4RCDnC56(*.X3p@
%S\hWfnp=D!S>sY7)l_b(s'@0!\je2p=Og'&P4s0H%8lW!#3hXG_8H9*1#@.>I_ir$;$plDKAK'MGhBEmD:K-nmnLpS1T95?s([<0
%g=hW3hTtK0oi$Lkj!Kt.RWHf3V-Hu$3ujh!oI+t:?SptEUIHh[=OG=O^`tO\_8H8coM$VLVVkn_C5;aMKu9`l*;$:TW&/>m"V:K3
%43[AeYmVT_RiXMnr9n[6_qHqa:r1%(7J44q%r9]E*5CE?s([>^<SRTY%u75b3,6:Ip0Kf=$@=&<$t&M.b4mk7#Z.XTL],b@IV'2r
%&,TEi*2MTF:Y"o<m;T()k]s7]LVpr&NEktW,<<'I,rRVi/oFb,_bkJpLFd]&V\aF5e^tI>H,7B>G&SP%P6\m^?1>'69)SGf&,Vj4
%g54&k"V7Z^fNQF"'jDWVi*h-&h?PNk?gt;7G2IF*7kJsf[:j[b/r(j"=BG5:Zf#9*&B1m^*d1,6D:K,#T,Fun@BmA.eIG4Q0]Nm1
%m%:*.o&>[4n?B[JVn?\Q'g-:S=Jn<'FNLDTi*h,]`7+cXUY5k^qc>kL;QQS^$QeG?W_V"8*qnQT?'Zsb`Ts,.6=ZZ04KF+YHLo_>
%/p'Xmp%F+%nbuJC2'a^C-p(1h/kaCKFn<W!&cq^#SH%/V#@%)X4Dq8qYk6ir/p@)?S&2a`H?*Ij^Wm+S\MLS]k5M2bl/hY-+$irZ
%bb]YFD`<=%UR@tW2a9ZRo(<JZHZ't>b8rg9T5FLn]=RuW4kTRNJ*l7!hs9gVgV(p.IepR#.D>G%lcQmG^E,n[^;"uX7*T[8]smsG
%H+/&S'CFW`5H[6MrbU]fPC)hXY>5\s8&(YA*rL<J`S+S,q:C=uO(!hC^3k2(jmg10m*W!Iafil8X%2^YR2>U!Y$Q.T\)PS\^:AZ=
%me>=kDo1PD#Ktn0VOH@hp@QJuRHDB`eJ\8GfCO^^mcnPk]mb/gf`#sl:2h_to(_;,@lA[SR_HSN3PG2OrcB',HLnA^974<iA#]!m
%l#sB@Glli09.-WUO&:H]]3+GcDTd7;p3QI#[^Q5"-V3B`T<5dm\]s"Rc/nc/e_N;elbsU$$(kK`3H:BtqTed"m,$9FLDQStIX:V6
%dE*$pk)'V_r4[FNH0-p2>OUY;W\_C+Itm\0&9mT!)3QdkgJ=GJ%PAcLQF;RhmF(pYNb]o(HaqHYa6%PYjdr:MTL.Y<(?9#>1\WSH
%GL!Y7Va$bh"^?=,2IgrTqai]\)F%NK?CjUVCNA='VVqp^l=R3Tgk!t#Fa\bgSL,HHR4DoGEP%kCb.jUg7VBu_pB4WbYMQHhgRU@`
%%+fqJn"-]<IIZ=7_Ue=F48;CErp[.KUuFhN!o/`@S`CQb@-MJCOU`JYPX7#lc)^Y9AsV"\=eOhHISJsmQn25#p.tMW`ZfmI#5@7J
%Ibe]"YAGq0DqTK:FLi,:CbB%K[^J?2F8NCK]__:g51I2cr1!^RG.(KM@A3USh1bge%up-%hBrQI+-nrOo5iqbnMaBml.5\aj>bqe
%0=O*6rKKNoJ$Jp,0B)*R%o!gj1cq%)"0WDF1-:J4LVF^&+`BNM=:n]4]sDP8gYS)"QK7BT)fsE1iPXE0r%e2ApGD0oDNg,8&79m7
%*8#J5T?J"ckWbj(V=s4UT#q)RVsW99jrAS!=F,+Zq]MNa0\?5(?Ti)n1N#?ul*Z0<F+8(TNOL"2+/Tk'P$3Gd;(32n8pfl7q5n,;
%Y9#@ImBWb,gh,$djg1W1Ac1o7o#BCi/(Zt&Hqj&.>^O&*oE*5[Zg2Plhf""3HZRfamD&Rbn&SGZ3o;,Ks'4a:H([Ch/f(p(:JPm#
%LU94q$NQ[<SGom>iH^&?ahg91f:UW$],e,J=8(J=laQ\R]9N7RP7G;pGbi11a3T-_-?AL->=LM(]un)]kA.F#e)$p\)h'TWn(D/0
%TB$C+<q8J&$1j)G3\"b5afR\[7`aK-PYu/l]!8fQGQ#\TQ_UV-[]aV'Is%S#hg5+>/%bZ(Pr@6Gh7[,YO_8Tu0LVGA29re4B"L,4
%g0>Qlfb_[e&]YZq324uCin$D<%QFF#I/7sXqT@!#mI&._Qp^KuP0<?.QD`5<q0)SVf)GDN=\FbF'#6uijspgCk1P*rdXF=Um)k%J
%T9#-C2qLjW0&6@;V\`CskFQ$_ffsk2@:a!TJ]\d0h9q2h/+NRB(Y7.IY2dpn_Fe>$g4e(<pE!SLq=GAHnCaXI+g7i,8En`c=$$7g
%2s7mF,fJP(ZM1Dn)?K)9385XO"m*@RR+G\a@0(CeB+>fB5@FKKYO^#?j/18NX/e&FGeP=g0/CG8Vf1hSbHkdmSFgYqGTR&5GNmi4
%SLW;tDSc:`HL6T>n:tZIR7&Iqc"*t:L[R>g\p7e:,M(Q'(&i14pcE$=VNTK!an)'_O5JPQQd>'Dh&qM;h-I"QY)p*+4AZZ[cOagi
%DqB"i9uuD8U,Kp]-GSEgV\$`FfD=H[UMUQCUP-&*q9I,m&DK_H22"Di1bW:?kLU"QER*',!m/R,QXopJ_gC(j:)p%Gp\"4PO7t<a
%kHE'1N]3:`0-2\$hKlGUn9FWPVrim7eNV[3/k/[4[^/Vf5B"3HF)gBsmk:EY2T(aA,4Nn8lJU/PgqaVC".D=\3Sk!ZeYPp>b?Ma<
%0"[+f%r4s"hS7n#H2,Xcr`WN0PL"(%rpfAtHh5UcqcaVLIZo4&T0\4Fn'MkBi`P$??9I%Iq"FRMg=,4<OAL,f+?TD5p>ktlfAtQ/
%j5$iN]rTD[f:O^DV'II]8UmdWI/3Qn#3r6B[5=&XT@T4GYJ7<2c0"[8gE4_tRFQ(s^-?M[H/O?E3kb@db"RS*V8+N(j"*lLp^[m'
%Z2L@qX^1bI`T>prZK;DLf"]PV4rWk</(\ZFkr'!Y^>An=fBuu!I(O[ierB-6:H.+5)QSnOZn8p*P&,#s[-+3V['QgXE+f,a]5m70
%kJ>%T$Qtu]fOO77p9-fV\qYIDeW"M%=&)eg?[W5cp!r)nP?6K\(3_C64ns&G=4SP-[/&m[e&T+cV_deED?c^d+)T0n>^fX^];l]0
%=$/rWF'\;20;k-c=52!u#:ieQVd3\dfoIh0*4P>QW,jt:nsQN2]=!ijbng$h>5eH-@lSUFlLjJ&Zg0Sb^\;X5$<_e_]=N*mEd)@J
%RQ1sP](olbbO2HD>Nu.Hf#dgNpS(D(h7Rn*r8h..j@ukiFSbSZB@s)V<Nh'RJVd\0?:WAS<sS(ZI.?C>`qoG17rL>Uajnk6M!aEE
%B(u\UB<"MY.%fod@JNU;SE79Z]Mpe$I$ie0q:#/@jYMN9/qg?He4:+NY$KlPGFu6>.8F4_mqnW5EVAAEqG\=DE.SLqA*J9ec9[[4
%Ggbk0pJ;Nhcd\>'O5j8jehj@d[*r%LC]'ASSeO\A>3hc:cjoHCg$'2a;ZPjG\biS:R>(V%.fNSC=gZrXp"-bMFZ\&s]Cf^3Z#k+)
%`ne8tLB`FdRDjM+T?Jk3Xn&I1R7>nT5;W'$nE*F)kg<VI*oQi/eI9V.`A)2Sp8T<cH.]HM8$LZ'FC;r?V)/HQ2\Fu_rnuc#]C!ik
%qRH7kg0_1U\)5,JA4L5bLml!4/.@0G>5PPrp%$Lea:*!nc<9o<oG#K[FaX/`_<UX(2f?f&4It1%(dIe!9?+L3qI7dS:?A-i4m-YU
%5Kp<;Hi*KRB(PQ5PDqeF*.=jceO$>cliL[QPVn+D)S/Bcn9'#GI&;op=`^Kf/iX!4iRWBCCotE60a(^Ob"EjO=GlC:GjsUL+]QtQ
%k_6H'%)"e/KmdS4rSc'hH(,iEbdXQK6`tn$p\SniV.gV%1A:',q7?O9Gg]dgQN(Rjo;cnN9RFPbhd"raCr&Vp\%J:I<c]*qcRaP?
%Hj@Cj1Q0"s^&ZcH^HT5J%IE/lbhU6'e!\2<n$gAV5(%N0NB>gooAMVN"jj'c+MU'^g()i;#3(L'[/E1Z7s*:Sr*+Li\%]$erEB%G
%hgbQ=#Zc;bptsA8g:5spTC+^Jq+SbtL"JN&ZoLFi%8PX8M1`r8*+1uJiM8Wjr:A(WM\*$UaZAd<(gF<*8K3uW%Y)Um5hEb`,G$o9
%cS;VJNAH?R2U"<'nZ25KE<sa4-Z(9K;Wj2P6.>,E]'>I?-Z'8);s0>*@;pkf).Fh^s6;KdP[bpresh6HHEmJ7rn?AX@!->ddJ`IW
%Q%b#ND=MlHlK7F"ZZg1Hn]1O-Im3gVD<p9=V[(gSbk#rJiof3'Rk+)7DYrZjnnLR&iBSL$A5"tna>#u=`d.FeqFFh5Hj"4LL/MY3
%VF_:O@8A>BmPqLa*@3)J2j62S[XFeAZq4r?r==?aHWn%k4jLkk^DY%=3SLAmm:hd41sY!!>G^4WgXFBFp9`LGDjiAM4i"63>D`j]
%RgJ@8k3Be9`n0;-6,u]TeCilfs'"p^I*pQ"ZgbqP`47GrfRRCk]6kr3Gs)+MmHLslhUaMinu(jc1\0#c<aG<6-*b!A]CBb#c!9'l
%h?qJC"=l.GnOAL%iGD>7<44^GK[h71kIbd4>Pqr0Md>3Ho6O/@PP\-X[C$<WErQHhB-st,r?pq@`8bcVruE0#3]P,:err"C9s,kA
%NP3I4-]HuZ@5cdX`6MC!q?H1!.055+01e&cLt_/7F)>]+I[8mhT$=a"s$rX"\'FJ4Oke-;a3MP]-X33a[;Z(;q--gZY2=ZTOpUNq
%dnaCf?.jDk=8_r%hSI5F)9Xo%PM_uRr[Mp]/$J?2dN$mtF5tf3_O:(uX`>!ir)Hli]+Q-&\!nJllu'RPp$kHInEE]R/<%Qs35+\i
%=7+e(o`Q-AZf]j90*.<H3T%:>CYlOK^T`7H@>uT;Z+9bk`TJk.N/=m";c0Q.IeC\XSd=]kg[^+HdLI??GLnNXo#9Ui^Sob54D*/p
%H?!*7.)3^P%\MRt:bU`;YM-$<c*m?.jim8CQA4XrXM9)1iom_@/j4Y6b%#Z(#m8H?*05KpIa?rQ1V0%6l'j4!d:NQ_lsa`ijWjQB
%*p8Hcl:QtRq>/<*[0ppo_PPgE?prmFGf-TbV!G71qP;3(G["L-hesPMMpP<tCGE:+oNqj4qIk''YJ]5>K=5!lI%"DUrT[(%>Ok5P
%gp;;I<m7+5IgaijmM>,mo<*AtY@f^&K>P!@-9^CP#N,J@f\`R=%f6e)of<L_Q-SX8m?^=[jfuBXn0b?=O4'^AfLJpH=tcl=@&d03
%XaV?C>ge'WqHo-r^FB$3]5VOoS;EJkA_o`'p$CE<TsTTC84spRq@FRp*+pJ`;YGO\e&\t=eLh@*n"Vk6_k0X<#Ofp'O67qcI("D\
%]0"(O62s-ka)e%B-qu4PB=X)74#1#(RlrgJCtcnVfgk@Qp>1psjmP]b#P49D42BN#(2]kB2-]fknd+mOUNJ]rXCa[<fL@oSS]rOS
%MILj$m>oQ#NaT*iFM/O[X*:,\eN@Poen2(;&.ZC`F+$eeh:"F:3b^`Q#u=a>EE!OeTdJ3-dRKZrl_O2$5^cD]>d'>lHP#k;oZYk1
%[uYnYp@Nc[+7his6-jIUG4ncQcOgE05m>G*]'a%OQd99WA'r8kkA)'`^-ldd$mn]Fm,5&L#c9\ASZ0hm45"COk?c%K[kkAc?uD)E
%0ZYcm9ZGk";^tV3S*1VEkGa\6\G`,BeU2V3k;>EuBbnI2\Ol7M:I+i,6'Dp=;(e5QJpXd,pbT8UVnW_'H&4X3I'Ah?`F"sE+_L.!
%r3*`kP.pYQZfNuTO9J;)m@]`Y`.U$p$8j'-4gh7HLRU4<8q/7c[b]_P[/SF<giRnBo`o^*g6]4qB-*H"DstAZi7<n`<a5CK[l,!p
%Ijf^`#u>RZk(Uad?-q*!GGfrhk(18>fO2utV0&V9$Ikt,$a>:Jnl]/nQ]bppLPtnootG>;)`OG?4^+S6_X+J]`hkmSrf'FoS15S@
%:qu]"74+%hR-nOX<n[ha%o5iT[WZP"oig<"I(Xp\r%c%\E<"8?c+CGtT!UV+8g=>m^jJ"h"Blp<lZR/Yqtfe&FnP<=pI<O<b]_Ce
%_b16DhRu\!X?HB-l.aeTcOU-%_6ic#mCV9E=7aqopF\\R:W(U;2cl.ddJ/Ee6bE/-"#oVddSu7!-GN+7TAIiO-^3]s^0n,'0n+/^
%:SIKeFmV[M^V9DIIb8;YnEZqKh:Fs_'85,gLd'Pe7CMMt=8p,"pIkK`I/b]H;Fohgd)+b*b?KnXh##W;_=L;-V>Q:5ZTk>Xaqm+8
%eit3oc6L9`N8?Er?ZfH4*ai:2aZlt85`'u'MP"_\\U.[M["X3'co.UggE3'&g=TY$kI.k/mQF?/4Z`HP"UCZcA*08l9@p@s6qZNU
%Knnl]VPtb0T1mL`M54k6f%D]TF#%Hugm`b\RL9d#e!qW5:nLG+$)VG9^Gi(i8@'^^`\s8\iZt""HMm[0i8h_r[kHX!VAH00\2O$#
%db8PJSfN5ChEEqZG^AlZS8B>9s8I"WF>gfp]sRKDj7_jsg-""Prd6EeD'pE0kG$pjln+$),a((7U=,"F5I4SOG:l(nZ+'OAnEOUu
%eDHeN\Ug\DK[ml;F^;[jMdO5I7=8H`B&WLT'DTL(B,\TLbC`n#o2;mA^5d]U^>AXpI@Rrh_<:B+r,Al+epm;2VmXL9p[>3?bt`2S
%44dgr[uXmOcaQ[+^(*&.DngV0I:MZa5*&#lPY/\Yl2o;-%7u&:>jBU&CAIPZKpC8>Y$Y9k4Lp5s2SI]u:YIEk<_ZJfk`@02:!Q,%
%k`@1)"a/fK7>F"a5;R;AU-kOAXFK4R7>F"!7eB9.'KPgY7QUlcWsHi:_F<?7X2GFVdQf\8=j57+H*MJ:@YT?o[5hkS6ToV!5L*EU
%d+Q&>-Qm$NL(hY50RCSB,RXuUcPD[OC[_7kH%5@%)Emq4j*CFlB]H5,DM#F_8$Mm-c!7l(/),s+Fa7jgZEMUR`(<ViIX:o7L\iNn
%KtJ)iW[F\cD.G9Vg5!^Tep7's.5%rJQ&'n$nF0%96r1@_PVAi/g3JN+/AHpSq@Q#.'u)@S(n',QeM?afrDqd"NkO+[&to_VBUXSo
%0t6!u!Md33e5]MH5Y^&@g1C+2q&f%M;?Se6_9p:)ZtJ5g3#e36qBL6+Q/W'cLl[%JVGaqO,B1+p7L&_"&T$=7IN3G[CdJ<<E-#MQ
%TAf_P*Zl\O1(d?`q[M&,4#+3n/n69slh0m:eq&V<&_bt(goW].&UO=nFhS?U<;H0QYt&joB1l9D_d-20J$l1];;3^>XBd6EMU/mS
%PP0*9W\)?ib2Tn4N]n4:0!/rTI&OC)/(``I]l;rmb,sHSH9C*DKK[#Q]m[H9`t]S!LmC*uGkpph>1(C"ff!4iOn5j6H4IC??>I&$
%fA7>V7Q2-g98XP-2FutN17R"qmdpT0hqQVM@!t$#N;Xa@/Eg@@=,SMQVl<0(]4"o]48?qSFgs*r/R:@$n%1-=c[*,T?S*=Yj0k]`
%CHU).6>7%gS@DAj,1*0V0>b`pc\N7Xf:gl2>6c;!%.N6$?RdYEb/UXFZL:\oB?QF.8+I/ObO4V)Wc&;NWo:jtnmrW1NO,I8K_LlT
%i!?\3W4m](<V94aK9ATMDLTMfM@LDJ?Agp&IGiB>ki3lt6:DBFQorAVRf2\6NkiGe/<)`ITO)k.h`a_n%cfGEqH08gHd@%DnjP]C
%q4`l"`rq4CiaRs4lL)`&l!2>CHM5`EOj6.Z20Pc1nNeYO)>(0nma52H3]`X;hW8^)Ql<$YEBuX\72Kgt7sqRacV?.K]"?A`gsUT9
%\P#H\g-bnqp(,pWgd8]<eo+kf[0][oUilCY)"Ym$Ptm0`Au*&R1u'NWIact?0^_=i#uGWiL7!c;ILr%tD937$G!"ZBHQ*@Ha2uTI
%[<5k-$'6cCh8QUV,7^HdV!YZ^b;O\gM`)p<Db"UaOf)jERPJU38V?:@+=cQKZEBc3I^Z>$hgG?=qru8ol`Cgt7:B!HM=9nLm!ZG9
%(LnmujuCo_B]h"gftNhRFebd&DS9DkmYs4;%Z\1;qXT!NIb=J/QpX-=^A[Kl/!35he5esP]V%H@^m>eGGa7rPW+Y_RQC]*F"=/-D
%BXOPK^,nJSCgC3m&BUtJL\Ii$=PNCC4&kCk+#Y_ffX?"IfX?^a9S%'HQ05+J4nm-Z5E!8[V3`*eDLX5<ERj>hDXCaYJ:$aOJU9g'
%.h#_X9?'1m!E#m"Wn"Wdj*mZ@`LV8*5qFrHFh39>ltmIJ\%+EdjWCRF%hY>&@[g:V0+UISGkbZ<M+t?*Rc1GCddkWO,nK/7n;UY`
%pZ+Ca_pa=&-WI?[?gY91\KCFhPd+"g:onM2D[U,5etSa((E.'9UHI8ofk"05;h&'?hdp"CqV7Y6;3p(m?G1[SFS#4h)`'M2mRpL2
%,]23SHhcQ/b;Aj+0.`g[QAjgq*[k9rG=[..[cFR`T3_`ae*cT`q<<n/[]!!jmEP"+Q2UQdkOP6/L[9O<<UT>Ma6^+JOq7-Lb9d2b
%pGYD;e,,GrjcdBhZ?nAtci*3&Is=3<4t&tka*YQR[q>717m$ihEU05lbi5sqc/Pf$4>6WVg&&S?199mum[=!NcRmr0I=K5^rX-8l
%':h;DStEW?/U?3_E,YX6]uui'Q<sB+RKRhP/OZg__IMa\E=0("n*"-Ei'5jTGRCW&9YU"CIb6^X>kWG8o4;W^EcCaL-Qe1/X<2ic
%G-nmUpVFu$+(e^V$fjPMRq1!fVUIG\jHg.S]:Yu"R,ufGAo;o2>3gs?[?IrADu42)NfWm/rgmG.gWOrUcYdYr02Lo_+6;[%e$Cg,
%i.F-EJ"!.Eo`I\[@Hrn]H4Bner%AIfm3d@3J:@Vb(B!oI%kYf1^&/hah3"?/P.(CZ2So%!kr8'_l-E<!a2cV(ikhQcU?RDhN1H:#
%e8R=+kUb;^h/ZG]VJ%C7lMS>?jj0N>mVJ9HqmO08pgF,<n*%sR_;+\2PI$Hk7pi.H^AI:^#>`)%rB+1ghUt!eI!BUNJ+(F/?^7ds
%K'B,P#CD6Tm9M=tD]GAh*Lo7Kqu#jUl1/lQ?]UC-ih1Y2,U_R/jJ@@Y)O'l>E9H06Q`k'$\R%X*e&h92VL=i_5<XAjkWaELh`c7c
%9\4Ves2HPMDl"d:I4+`gG5%&YIij*)5Ni@-M!kKl9d^cmakT]gRh9:r06%[qBs[!mH1C:nfiS3LRpN[SFOp-+mA"T4ht@O%rSIF!
%Z?LCKdK8N/QH``#5-C:DiUQpAs8$nb0]HX/02d'pq-2I^DXkWXPJ&'94oX53m=+YV"!r'6^cE:Odm;GnRC-(ELlsSg6$%Zj(8nE3
%jG-_60?hk[AL)rK#,W8LEci<R&.02?(aRCo0Pna+C8EpIdUSLKAW/F=#&,E$ehpChUrg0EHpf$^ESO5DU%J4\Iq2^91he;Tc3B\a
%g'[ch9[o#q5e^`]'#po/V(Jss0TFn1,KlNARY?">(n3BM/+5<(-UX.JaWSK5&m-sG87`!&&kZ(>1i4"@kV$WsR?1afCm.DE&]E+f
%aZI@^N0QaIfi5[p'3V.S7U,Vg2u8Ws=]ror9l*qch"C?JIGopAO3dOhD#;Kpfn3mK0Obi#q8o%6=i1Lq."dQ.J;YQ9l`qA.)DpJ"
%^gaja)()Xr%BpQtb_))eACRo+M6:V,bIYm.aqZ]Uf2Z,a,OA#82GK,WGp,cWgK<'0W3iXAdPO7E7E!gu2C]0*JaB[!ahVBM!<(#'
%,Vj=E=5/tI%<Yr4b=.AC42`j45Af*c4&n$(M(WU'/!l==3+F^E)6]QS/@5kMAnj[%gIr*S_dqlaaa(jEUKA9R;MdtD=n2\G.P$U7
%2UeK0?.2q,8&cDo`se"5WG=sX(<4K:,886#JdAu@UM;#)\a1^<ai8X!AY2lRYmC4Pk;DB[RnsTAA?\kH?F)2I`A6*B/G:%E9[h)g
%jBC35$g#[TZH=<s31V10b#G7MVnG=%9X/_bq!I8/GS5]Z;/Y8u0=ot/JW"/&l*$\71=%?ic&Y7q<3UCmN=3&7(Wn;+mt8;"Pi@g\
%h[Z6Jm@Bc45Fr/N&h9BhQ#F$f&SW0)*m<^>H1p?m&W"e>rr-Td@g$Nn#;pKDe5cjZOGMCb1Fng97(DST1IrM2GoFlj:1INBf?AL2
%JgbCA8&?jA_^`DM9aR=0mkdc2RL!-5PmATpc*9Lb/gWB>9,\!=[)[pG#kYI5-5PYi'*_k:1'_NDlXYZC"9EFt>\h7FKN$Q#0;oVW
%Q?_*pLSTT(#XJmYB][&a!9:#FogENIn'S[h5S=QQ!']TjA_M\Dh-fV$85,PQjq1#P5%\TlLIh401n0Ge4aA?:SO/eX_OlBm#uqZ'
%f^g).+:,M1WTP1NOAFi0Tsgd`!\Pfa\ObHfOV5`2al&FUgCW[$I"<LTrZk!ec&!ufJ0>6Z[V5m0/3M@4fh7fj)3Nr1%G6OcY7MY+
%r(43s9B2e/9en>W98,V#/9NPmKR%qH2Bo1q/hKaQdp"!%F$[TR\J:e5dcONO:`1O=_0]_4Sfc(-*;IJWn!Y6G0YrXi<O/%^gg,C5
%9u>'ta#ls=cb4/1-FmN`#R8-oE):#X/K>=,KQfjEM7i1:%HX\M;*!iSLb4fd3oT>PHqnjT?%V*m<0`Nd\]djk`1c^2P$JAl$36ci
%Yn3+^'7jB2-<VKN?+!H+Gh):&@7@Uu&im25>8+Q[WDsf9i_g%*cU;00rq&KEM'?dP+Y;&QP@6u2k[XF9MG%E4?L*G)Z-^&"0-tp=
%9SD#/2?metjjT<M>hW_,@.4.fF<P!-U!Lku_bs[soGL(Z,M,U72r.dP2OZOICmO+R$70(a(1Sp^$UqotYL_ueQ)VndO$f2#AT#a8
%_hC"BOL-8YknA*)"FO20N!'2T`C`ku:-_Da\J,1u`$/DhQ$\-?(MVsWLsY@Y:'a^VUC^ptdC[W\)Q.WT;J_!04\gu:1*VK7ajO."
%rE-#,OqB^U,T[Y"1HDSc5pg+fihI'p!_R@I+/2S=ch'noN6""M?(,O?fKS7511Q)d!\G^Li6CF-l(JQ>-VfRc\LaA9FRQ2GRc^(d
%$R"WTH9'=9US7nqUj(W&2:5(e9[p<2ft$@60?@f8=CQ(Z3K?FVKYD[g&+V1D78?r!7EP1qDbWJuKT-8dM6JV<<\`G@6%!.sF<bg=
%#d,^QnjC]eKrEpMKHN(fFkE>0.@mgQYsX:C<cBE)3/<kaS"`=3,CGelRW^+B`Be&J*<SFPpP:-9edL;0TU-L3U1dBo3YX'D;>>#A
%7YXX_jDom/oHL<V^_9VR:jY%-.J1E]Q"6"M-FZIa#l8A2D0<&AJ5$F4KVZ^$Rmrn.kG^]*dcRM@F&Z#Q6.Mgk+f$K:[_`t4-P:*I
%$;640>V8Bo`JG6j%FmTI_!biKjNM64W2#S)RkG`fG=$b9jTqjB0:P6f:BYP1W:7Si[0C.BPUT.>e?SM9F1bB@\U_*g8B2ECE:Y:4
%m!;5ti`0-D$E/(2.&#'Vn-!HH%dZ$V+P/S`GVfdpO;M3#9qp$(:qC\`1Q'j:![S"8p*t]7U:2TE&\/'dQUeC')'r1C"1+q.dCuLY
%RUP3M@BT%Z:P%<#1_d7M80aDQGmJAY_7!5e5K+a<E^Nb-3=`n2%6)]JaQ\53+;<^+M4`S<3)&uTai-l:p;n'1%`ie1iS\3<U#iik
%oq]PT__PEP>\C^r'0qVq5U+9EW>?3k<,g%maYTO#=D1)R)hTKkGpqdbeD_o;dEnRG]SNPm]=a9tMZb@T*)DqPi\4E4;hP7nd:=]J
%4bZY3@nm-l=]!`HoeYQf^c*Do8%;A,jW^m9"ZXUXl+doSqd]9f;;H/HHtP%#j:KMNPktdI=!/13pD7)U1X%udp+KYU,PMl4;"Q[2
%6IK'd#7>&`3Vt7YepW$!B_2kP=TfhfFXg$_'US>UC6=45K42#$+Xgs^hbBYJfI0^US\.0ESlT&3Kt>8Y*_M+6-]qcq7!Lff6C(_#
%m5HWA<$IE*6mfnGb@CbX4=?a,j"+'45m/)SU)DIj>YgI9Do(@#BTfXL$6pqJW_b#Qo)(IPV1dtsOdr_)on5^YZiJ3>#MTgtQ0A$Y
%`1VlbCkW@%j!PIDDnqSXJDgq1)]9be*GDj\_$20De4tZEKqKV6ZG[UX7ccWIE6a+^VI<O*SB73*P;H7-ach5LgELi(j&f:U`9sKG
%(pp4J0c6ZBJ\8m(Qs%*[H?DY=;O/_T.95OH/Rtd*_nhT%>NIUi1WMPt=n"21*%mBifRZI"85u4>6E#^W4fE0t%"6P*;a79tE;O1V
%L#g8s]$:Y*9pOpobb@i"5j7]:XH[r&nI<mVVf1Cq,&OF=&D_#[VTY=`Et>)>*_<]J;aHYS-ju>0hSPHN!sZ/#'PQ]DOQK+KTOQ!b
%6dgNO,;(ObBkk<M6n:(C4upsGWZ`?VeH-+*mL7fWEfWI'A9QCHB"c/#B7QFe+;?&T"sFe_#n]c7C*OJ,T]V#t)MdA"RmAL`W@\?i
%V2bC<1Re68IaU,N2>7,5/+:WCW3<-]5H4oW0,MY)`J#$Po[BSsB\,1)RZ?L:M.@Ym5GV."ihO@Y6C4[e.C[61>F`9Pbp1Ts=I\D)
%ER!STaZjG@8VeR-o/;'nHBa.]8Ur^"RmkfL+#Uc&RN&<)1dI0BEm8P7,1'U'Z5DbB+k]a.Z8cJ:qd$tPOYM\N#FGl(*K`Km)(E,f
%3OK[EBb#jDpaOBk*9Af`s$CK6Y7.@_Qbc(.6JVd6=aeNJfG"ZZUhVNX8tub0Gp1(eI)OOT4"&O%_&BNhb4B?G;hj=C\]7%k6soVB
%%.5nblC9Z/M0r3uPj*1l@:9$?Ms3iq,nq4F/oInQ>c'I/OV^re$N(s$]UJ(oB?nKMUC#CS)mc9I`VqR5WV)=`<):193)0?t"W7S"
%f$H[uc7^m5$!g$s/>,<7;<ZcEn.dbZs/.Lo!ILns]^1L5A*J[F&9-^L;-cD>L!TH7kD(J?1ck"Ch?fc>nc1=tPt7\TBL*gm3,n4T
%oqii>&ZUGH)Nq![rXZP^.*O^YKNH@!Yas!!%i9gsB+.d,fY<W#2D,TsCuW<PlY]oW/6^nN>3_fm[FE)Y+AN1H"1<[0#o!G0K>.%T
%MA6c/+2%C+GbK2<(D><YTWe;506BDJ6<4eC<Kl/c(F4pS"A&jW.6!Tl<4S26c2TK_PsQsS?h@^joe6"7Q[8UKV-YA$6,]Un-&CNe
%'%'F\)\qdK^4K/tGbIlSa#N0*q#?TH7,b_"6WEOI)jtE^G"J'J-`f,.Y(r[,+VZ-sLl9j?[am^.+.*adgNof9/bSU/TSINO2&"VI
%CP@2KAnn&HOjsD(l!XiNDu+DIpGimTe!.K=00q_@nF&L53u,mdZ<,CH*.1q_It8%RGQNLgr_(lFo/'1n#UNoP"&a/m1.G"eA*RHs
%G"Gj,2*i9.PZSd`U/:dlX]D?>!MX`r_\dQs`#?.-)87EWMPF&_quqn'Lk;k\$4A&P#1IT;KDF`+D1/2/j9NR4o@>`.e?)7"e]8;s
%YZGVf6[NSi*n-"+8f5R#nA<blo-X-6jcdnmTuge8[bR5RGt\-n<_I-^7:UVmXlZ^'/^NP)C.C`R)6,+g52ef3@2oETHB===e&)6Z
%%t-6QB??cT*#mO-i*#2VM;cl:+chNjbJscY!$,oaHLSIV<%qe7du`-_`$qO&b#j9E%lJ.1L7q)\^tC?@/K7W+_Lt8chQaAf!@#\7
%<5\j9E@)Ih#3[QdJe:qJ:)BOah,Uq-0pJC9]a;Ra/3K.c/%\/Z4X,0/<h&1<B*A2<L^#Li_*](YX5hB->JiYSAfpYt33XfSd54%i
%62_K3.)&Z_URG-aGoo+6a&<g%/o^a9ai1[?as7\#"84BNMMNm`PhRKIaEGO"BsX?(GP[B9@g0tE7$oNACR($of"glX=meC-_HMWE
%K]OOKMEj#QkItVF.^qO_1ruWGR"X19nVK(<d0\2#`DDGXrUR1N<cf-ibo"0r<\"s:=a6s(:R%==U%n$,<^1E$RoO4c"GOk&5#YX?
%MKKoqr]M,jcQ_Nr[DU+58XM>u817%]rAR/]=;4P'i#?:HL"LVLpuKKPiK-s0:q3Y2JDO2]g8EE[_r#*tgG)gs)tq6YPXu$qX4L:3
%XVCd0:==2$W^X^3B9f[37J%/(<g+:#LKUaQA\__eCIT2lKTtJ;jQ7d)TeYlk%gg)X(cPR(mZq&Z7bVE.88+t;E<T#[KO:!))_e'2
%U&Y4cN41:*i-RlU.K&8/ejC/cWOT?>>D(F$AEB,)./T9nq1kp/M6OhG#5+K:(@eV;eEagX9qDs+LJ6%c-dNuEFeqU!"*slae]N%-
%HL].7kiSWQAg=U$m!=]ZIjnh*k:#N(Apu?j9;[fNrY$KH`$A=*j2C,B'WiQ^2%p5pF/gZtNd@db6`4ZsP%L`76=n[go2b(BLrZ5j
%T-@g1j>r-<%EeNHhpQ3/-I#-P)8iQ]&cB`&O]HZ,;R4cY@l+DCkE5'INQG,;>*Eq,7+\M&jmKNRBj>dgP9`d!7;\>F+9:eaFr`=M
%\nF6;;F!#l#j!O>U$maBndn52JZqFe;lEi")LYer>0Y;PChjKQ2'=lcooT7%;%2V:7[#du[uELg,tg'YOeVMp)G-!mm3Aa1Ho1&l
%eETPQf\W&mZ1X5g+hH:qInJrk.Yt4IU0:5*M5X8HlS)=AL=E_>3m,f3FboRJa&58b&^D^\mG.^MNJEEN'LNmM\]<j4LdR5MHBS;p
%1=^l7[aPi\j`rELROBolF'bq%Vc^jBQ&3X*]h'bk7:h5tQ(ELu:XW^RN>VJ:M!d]<FD;\IbleC?.M=`VCI:L1(EuU;(83V1ZK_Ah
%!t$qN`'Yd8R7u36'.T:(Ug(n#EiUqp8Fg:$K@%gHP*qDt_B<_*Y)P8X!I73Ji^BILH0m'*(qD,$<=N%1KWkr0@%aYjRW+1hD5[.N
%['G6YL9W'T2.3Jo8:\S_*UKqb]?e9Y0Pq8U:/ch.atlnR4@k3K2W3%P&06pEis[AY?0h0`Ih]35XRn_2i:#b:'%=sXh932;AQYf"
%L<6r'L69(B9C/TCarfQeJ95UXCnR8,1+NG6/bW?hG0#nWL4dSfN5=.lLQ$.KYmE!)HQ?a$q^BdP&1K,A(]1q)9G%mK)[n5Op&qlS
%b\BH!1lU?,#dSgl(ATHD@Y7rOH:XJ&,`a(V0oLIo.JoAb8%r>@`qiQ.&GCuY^ldQq$q%"S)54f[r&-BS)[;j#p=$E?PO_+l7H-UC
%dO`H_'e7cP#k]9a5$e<Ls24KqF!2@?-VsG3^3r&pI'W_;@G;+`GI.8bDq=d"HhEHQX6k\5lKNrCEm>g>(&:HlRT2_n-K0cr/W_En
%+J_J"XJCqLaDs[H@`9Gj+U'ZUJsdmQr\$Wm$>!aHR-d0tLGZZ*aA9mp;%FW@-^(DZZ<J&W+ODr:j?U7T'r(s;&Vio5AaBo68Mn7S
%23"C=dA]6G6&8cqjA_pUZb`&.9S4[t.e<&*RW?\A+S?I@a)\g$]??/m2`8C52)CL(e23`EM(.bA:-u0A=Y%O_8EOPRr_7o?7)3>c
%2`Ts*`%bPN!)"!12"F?^k6j%;Q5&dWNfXpa!h:15f/3/-e7hG.[]UY)YM?V)rXqI/b5C93@18g@_V<8HnPEY4R(A5*!O2[I-VS<>
%UVc\ZDdLq-=qd:.'rZGM!>-QRof7g@GRJ*A'5`i]%]<mG1ZZ`45'T_,Eb`35lk-$QS..a;!HTK<H7UErb)l+HZooRTlE=1N&OS2j
%dXR@+N:DXY"A!L)RTYG&*WkFumGEH06hVo!etLS<Rhe#)pim&WKO`1^+eBRe`*b[fkin=!A;V%07m7"&Jo_\0A#X5QpFFhf4?&B(
%..Iua#]rA4<unS]/F/K<O/\F6$=9(]f-iG4(R50hYJc*V*\<MtJ7+"O3-g5Y%78Z@$62+BeR<UJ)_aZZ!Y4<D@7\I4<!mID[0Oe)
%UP*jBaEi^44>"uDiF8$(KF0+Mm)Wg/M>0fg$1:V`A<kHnm8m$X>Se6E)Ndj6njhfY:g"E>-.B-jM=Eo9%1jRLKaG$P`::o:gdW8N
%:)ZGaC<<"ZY%3V$eGp![<\+]ZM)9`."gX=]RR)n!U.?.R+H)UC%euT^SQL=Zpj8Z#!-5q.j@aNK11RSp8?]u#EY)ef@7Fc05X^R#
%NaP0]<HX27a5rW(R&u7/`XreM#;@d$/$WHd3p1k@@nj3%."j_I6G8LbNkB9tQ51k_#82QKUY>e2"[\40<#]4SkfpP0;jRTX,m=2\
%9ar?l"\o;C-?4Ip@GVWV]YIS.'j3ksNmkdg7!>tcLP`XQ1[qZk5Z39YO:^%]/-U8hKMJiP/',q.#QQ+G(-nd*\P6O-;euI._%>0%
%UPO.&e8>X;8=0\qFd`V&3PZ[lc_D^bW,Xs7LOl*e9\#K3FYQ</0DE8)Lm2nnLf@1/Z+tBh3e&?O7o"tIHNj+V?hXHdSN(6hk;5sM
%^gBZL'fVRH5t")b!-(?p;SXH,O>(aER&L3'6%13.l(IcsWPWrJ*b\%$#S"\%-^_PX"'s&L[h'giI'VpUJoXEg(D3XAWR%cuVAT4_
%"#:+fC'-+`_l,jOKbCOVF2/q[`.f3D&1TJH;j)if296@jJC4P^]C/=;6>;0\8Q&Q!>/T2-,7,ZYMRD0A>etL;0VL6+fVn;"A>t;D
%dd@2iJIk24im'jBYrJpPk%*+O9UR$`B#Ps^F790c!!]0o_ZRc>4I-9k78AghK$2R[#abl8GF99,@NR1X7W<2gPq[Fk/W+fiB56Nu
%np_jZ=7;bY;4'UZYu,V.1r??q-4dU7=pTDs@hn6N-R8p$L'bt8'0[0mLr]R_6iZMqnFVC&bfDFA?B@j_U@f+j$.Rh-JVUJF*"c>(
%((k\3W%k#,SMhZ^PAhFK!:^J:EfbsdG@SC&MpCu\3)7fi?J7g90176e/$*+_(E.6$+d)7l)P.M[@:X0T\\lL.kn)AO-_%N$E?sB#
%@Ur*^+m'/,NccQJceY8L;/)81/#S10ecbn<*/&-],+H)q4s.`%a1>/>bG+eDk%G!S65PVd-1jR''B?9BP%r4:Vl<9s&6f_YF@jbf
%8nS[Q!32`Sa^>GZ(5OdG/3q^B/SRcn_g2UB:#uR(-_]j2cN+:^UMjJ"`8I=tPGmgpYTa:F._FfpQkThB!H&R4rrSc&3&N/9==@;f
%nrMBCS>XM#dj@lq9uRE?%q24F;O)f?(5[3tk$X)_4?/LAjPHjC+bqUGgAoq_S<Ff-&A86j")>sfV`U?ehM;T^+`dQ>^a9Y](rDM6
%,*CnP8kedkJWRJjp4"?Qhl/!0DCRkO_7=<^hQe)uhfGP>o8BsYm)*#"_@_lI6X,NsnDB\YcNP(a@2SW@hT[m.lpbD(;9s"Q_/Ug)
%?NW>N$m@Hd&Xj:qJ*<gbWWe8@,,a+oY`f]u4<Ss._DWS\3$Pkd"i@C3FbU1&Gn?YA$5\Enih>%p:*,Us&s"aQF@f;[<*3Btp`eW5
%7d:[ZJRb!lV\$,00SC^*s!8$%[@[NcQ)L6^VAruNkH.Ycg_T*LRcI$4@AI@!pY+t8/Qc@T3:+Y,&C:iu9'o1o>GkFI1\dIS7b"F;
%.glD9E&M+g!bQ@#KO04]6L*2ma]=E)9oL*#T7bp5,WL<I%1E69b`DO%#`XYjN07eQ5%#("A6AXOi1EqjW`a"26)lh)ltRN=8<oUY
%_f8k%.WdCt$D.r*-\dA,Q:R9t"tb%m^)%U,8W[pJI>Z+SY_W<0ZYO.G.ott@[g#AE7SQK3hr*Jo/r.sl&rk@0K7eIe.7-Q4PT59X
%6M/V\N3spc&?I":E0C]M.Lmdp-Ce2+X&1u9BaDD"Je^jUU33H"Ro)9kRZ3&[A2_qY@K7+F\1j<YRbhocCcU-U&gC$0=faf5a^B>$
%<`KhD&@)U28RZ?rDkTY/!"Tm/<7b=G'emX4GTK=b.3UaoHL@E*^kY!I",R:jF<H5CCsjI;3\(2`TMQuuikRoJV1fbP/g<L&,[@@^
%)u#'5S'iFL?`u[_ouQ?$67jl0!eS6@$(4#364Xr<aGBLO4G>nT+j4gKC\8Z8kShNsU8dZLdH)<=s.QH$Z4/R$fh(t>6^RlUX0?QY
%WC,5Det!WX^j$A(!t.Uoki?gof\T0>@j*hPJKionXl"THR\&]e8WuF<eju`;6rX_AU3a\<-]/>34UD9D;I6(iN9FYGLf1ng/-(4V
%V)g-=RNe((cr3N/BSMIRK7?(^MVuIX<-\\4+_]SSb=$BaTF7UK;c+BWi*dCBH3k]WP."aS0P^/537B'Df?1>u.42gQNCe0a`7lOj
%i?kFr.am2d-&T@h\J4qsX)kF*!GFkB?<H;GO>-q,'SKE/",n@Va%OurR`P-,a@qi(r11??(pl_''Hq_"aUuP`'!1W]kgG@sKi+XV
%!CG9[Nsj(=;GG3L/VUk@>n\,@"EBWFV#\.0bS<FH]Z^j^0-FoD=b)]2.2pSNBF&S<!RcaJF.uLs;8LKZhk1/1igGJ>X"a+r[W<nk
%/!f@'pO^U%d2X"&6:@^PbY:pG,=NGCL!?V`?'KIK.8q)+U%lNEJ65k])q`cp0R8t=M:<fNQG?fSqI<.932#NQEbe[<&lHu.^rCGi
%[Q7]?11p>?@@bbQ=T(X2d](PD"`PC8Ho=eG=IR,;>24uPVo>X9%D9Q'5m.:cN\$e6asI3![=A8r,*:[,`AgqRJfHPRP!Uj#lo:M0
%X[9o[iIin#%QKI+m\4/`Mc7AjK94&Y<WZ7*$88nB_IHM82RlV7D^GA%AK\$>9+En9_bXUh+K/\"(&,e*Pb2KK\@bY3.4k_&^IE1b
%+s76P;@;h]AXM\;W)Ed@"<;!i!5]B7*NcgQ7e6uG56u68@MM<Sr.T(qUi_O2+!aN+M#;VN9?K4"YWZ@sl7#Nj(a^,<Ep&nZ="X'T
%?)Z%V[IX\.Q[M0JYbNjD(.&,)J+WTT@FlT1on5me!/1NMXXSH"NNPi4r4Hb$QVWGN:$D8pLMVu->,0WLFdQhjD1/Ftd18qJm;>/T
%BErm\/ZnrY./$Y/as5(KBb>.*,B).u.*XdP6i6`@hlC)/rB0,O4Y1T)!Jr!eG];h*M`&0ILMp47:CPi&jQK'dMB@N<NGPQ9;Nr=e
%Nq!%XTHS)I1diE`7CWpR1&t,<U)Bh>1kN;jkHH]5E<QfFgDY;[D6S\&;'Pc?Ol>sT5&._O-'K/-J4D=@;WgL^12%guW/<F0>.CDk
%!;dR_Z]-BTBh6X+?6^%a!gX!<4W4Nr:*l%+2o8mP:'uJ<lXRQW9=S3K#f,#I(i>ZW(WQiDj4h!mbkK;7&J>ITq^%SRrC0rt09ijp
%l?FHB#^:fjKZJok[$hM>mn`L^TY+FI)#7nq=Vc9G^XSQ7f(X@><c^kpYVFjIX#\7pCg17=;QC)1V*Pi5qe]7[RaJ1Z!5G%i4)cU@
%@&`c7+"F\[@m[)qk$eOMmENU\M\!5HUgd@(VihKU)B4FTYU7A7P4a4'4b\qF6ZK;coqBhDL)KN+q$%GJLlo1;Ijj2^R+67&]JF`R
%!U=a[F""?jDp#m<*?[H,K.SV/fIC8t!tkfRI/R_s:/Z5GmC"qi0hA#WBP:(t*=@RE3ET&5[aEAEo4G:!KYOcg>H%i0_!/)j6Uap;
%,kbBJk2U*@n9m+g]2s'!>,>h%>Vt&&`g>q+Z1BF\cQTZ->NYicX9=V9V&j*`R`)&k'J8E<'oh=k=)?E)4j4p^S;EAl&+;W#R1dmK
%@KJB_R:-/H@Zi]E-tf2b)GZF98TJ\kr253]9'#ccEEV-h!p-<HnqP4Y9kL'*M&V;0(`ldkX\%S1*3mG595S6[UXe-HDNpRt.A6@1
%QF'JIWEn4+-I=)VKQ*faEENQ]K[<Ik(TR,$;Hm;ZBJm8U)l;\+ZE5dFjGiS-r?o]+,3EL+jS?!lnZTUqYIsC$OuLZjfPghY:K>Mt
%I/P/7g]I]tCUc(-+iL`_ZhQ,BdE(%&iS.g=*_UY(B*H;[O'QL&f\fUAO-!QUhE5M1eUH4CTm\`&gS'G2n[TES7"kXIYVSjW@#0+!
%L^/'Y*G2Sbr*G,D_9fE`L9ge(c@#PqK7>/Rb,N#8\a/e7c4;S+!T+5O'cWmrU8X;G?3?s_+Z2#An9!m6?okA$)cHi.#V2Gc=iU#C
%Yu[@Qo"^W^V8NV#!Ek0J+l56,7o@JEIuUS6cR\mDn:oGJgBC@7T@%Bek`WkL>,1W,U9$?!Y<BAGBo"4]\MAa;fF*WRDC?>?c:Z'o
%Q!^,Xh%Lu%UbX)E`G)E3SV02X<LTJ5<UWgVnHIJ_+a,)/#r&Ot)FfhS&hbeK.3g^#>2^tTM.h]D'X/^-UlJ5boC_7A/atWEcmEcD
%(.+d1e_l0o-C&PhRB.QPNC_;FW@8&[%RqE=aHqq;QC1ikIB"qm$>K1i.+/[5>rDreP+[\R``d;[#kBUs3m8d,AWYVE\E0-_K_!kk
%HfC\p744jE'7dikmkqpNZY64I<A:LM!m`5<<&gu_JVS&N/0gT]VhP&kc#?4,`3hiB$s(Sp$+qiL3sbssi0osS`esY0NWcF7A^C_B
%GSii$ND<#:&F@=ZdT)dOd8LTp<Ui,BP8GOPJfl<NZ90g*&lh?>lEgY#VHRkal;]9D,;S@ag>F\\);&Ib_n?,7A3R45jdB6_ZOph6
%TSR`X[9-bP\jj?CE3C47=lk39k7NjP6*Rl2E3G@n=pNN[o?A+HaN@11h84rK(1A':H(*_pUGHR0ehSNgY,3D]N.J:6:5ei:%<#):
%br3s)O[=FN?g3]`l)[\Eo!8l2YgViL<\8**ALlZroAQ,DRq.3Q;73NP*D"g-ppdPL&L-`/Tg5*VQa:WG<>/M6P\Ce?Cp^&hDflVk
%j%YtP"\$>#a$.j4o(B3%LJ7ubI"^9%<8us'J7Ji]:?jZtB%J-9Pit:cMF17':Docl00kh)eZ,"!?6J6bg+;1A!E1h7gI#MJF80Ug
%)qfi6U;?JO9f3J#i[g3Z&_p0O3E?Fe=.'gg6j.cBT[3mPLJ4_eP;<Ylr=>N[4MP<MEX&d*&<"LMFei't)t<;=+N_Re'10QTW/e[u
%6IQ"s1;\6FnsHcmk'Wq`+\J]<&K,$2D1o3W-#nU*7nd-I&BNTkN07L+qL17u,7A"`+,i\(2&l\+4*-O&f3%fA(e`(TCh"%q`_mZl
%,@pFN#,KpddKKt9YjbmbMjP`#<A`CM_b.0&]&*5kV27&ZNV2@\*[t!QZRjJ:J1i8#O2ZpQ6H/1c\04TR`i@#CNPPlpjQ@)K\oX\7
%f#R,gc>(4:K6>;W-i`=tGOPG0\#M-_.!'OeW^?/ADn[r0MGSp=B\(RYCeJ@WOgT]mCGq+Z2+I("?8Bm-VJM;rr"sfPZ(DIBV@.7p
%d26Z%MfP^r]C8:*R4j-a%CD(>QpY1G/CRL>qC-nL5eke#j8(fDo+LI0T1`kVnb6@_fN5E1P4([hO<LgT'G/C1%H5nOX]2Kh$n\rb
%C=+B>/\cXrgn5/!"mHT/2/*7q.1oJW]RLS`UX`"k\1Hg^\-OtP9b8ea(I;1p(0+8R68.ZQDi!_=(nh/<!TLo#!3Od:$GD*^::RH+
%8EZRVL^0CHV#IpWf?2;KSKC>XD-,5t7X.=U'PfS0U!=fV@gnnu;6DG3f67`D#Tq"beD5fJ^u)[+0SMQSP!K6iWQ329d]EeOPQN8E
%ROH<:`Q:B%&(4(?\#j3IJO5c5,fsZ#`QBTkZFVCr93=ir!>l(HBn2KmbVN(.Dh:<OZ!m4,@njd,YKRlLT27d2o/8q_4ZoA>m'<F"
%LXi`!m#%.crT=/XA&(bmF<tB_KJg!!1*qPe6*<R'h9J*0TmdTu+@L17;+WQ^'+%?34-@khe+P1D1;ZSY2ot?ae*7K2SWG8=``kk\
%hT%g>3JITdPZ#nSOH0[M:@X=<+nTsfaH&WHnH8I#eG'_bf]uWQ`M&SN=_,K>s6d@#(58MXrBdCA'.=+s5(aTeKC^F5`4*ciU/D:a
%"@Jbr`%WTO\.Bm7fFe'%WB;:CJp#Pa@hF*NGqOXtdoaj'MQ-llK-=.qGX[XQ8Gg2Km[Z)W$6k%a/`^1mE0O67'"A2RAMhYpbZf7T
%nFT?5a=l1#^1+Jj&b2!@"bD^WUV&sta=C"H<Y0m]4&o.RRn!$$'^^l:`=ZZ[i+msFXJHgBkXA<J6R=9c,mo(W(BAEJ<fcApQa*Q$
%V*Z>e3>r26TN0YCd,tn#X8iJ[mf\J_RHL#I/j+fc3,ZeG@`CWJY`MD#>#mXQ)Lu2..*)@D)+/&Z6f.PO^SCV/`sa??$7;;)VIgL>
%A0@&)P_G\bjFs:9qI'#B,D!dbWc'-b9HO3E[2]m@#=WYu6Xu9CGdit>Vo]FrV<#Llf,c_q.*Z>6"9Hr:g6C%l7d_YH/$NC`XBsb'
%M(H1;5Cm#^\P79(KPY2/hl17$'J9HS?4,YCZk80&.l'WA8U-t%D'ZeMduHq,0P/U0Cdk'#IY*[4]So?<*J=GGKutW5L%K;DXr+&m
%Y]DS,$V"(u2pu*V+qZ:,qYGNf^dIRrle8;OA9@UQ26pNoi@:Na$'rK]jEA+.%:"@tq'?VY:[<Wp&i%XU#*9@50A-Q>(\]%0^(R\<
%U2d'HE%kr0lkQeqYoYHHb\EtlOMd.b7ljY0SMi>cdFr:MWWf,*>uB4fCBApN(+U>lA>kb6.fKi,X$T/I*.HD/_^fU+c4B<%;5eZ3
%>qZ[<]s^di9EK=OaEF=Z-4CM]EXQ$*)C45#hNBR.9!_N`73L9X6_o<<Ap_?5i*0l5hXKfiQ8Q.WeU$h,gke\@n&RQ/Q+PX,4F?;P
%rd29kT.1OQ"-C`H&;RA4+".Orif@fjlk$$<1.j^l?5[Zi"04/5cN[/^D[i^TOe6'a2[IiVdU:$37RY/6W8&K\'dS68i"]W&BS//[
%!)l;-0/AXej=:DJJG$Cr?thuhV?JMY0<rECOB@6ZG0P(>d/duo2MCQX@>;d;6Y!hs:B6_*$2sS=`/+d(LcMEu$pH@OZaL:=LCffj
%*q*2H'%q8e5PHj#d%#m',khhXfeCp?.NW4Q_KU"e<39,..J+gD>VQDrdo^.4/&TY!b7uY4BGO@HU7uQmnd.IB6\;pF%KKp8$eHZr
%lS2E^Vi*Y>+'4j7-5-bVZgS@@c=<*U>Y*n2oC/F_MkipNhun<*f(ajh1e$J\P9lAo6!bg`]In%U@0BJ1g5H)*.i8GK<DaCmX[cn-
%Et`hZOuW2("G'VY%5<9nIO7H)"go)=/C6Lb<GR\G_]TH=3i0(r)kpq&_k]_a_="EI6oSX+,&I9<YXtYf#L)6or,ioiH7G&66)u$%
%Eroaj^/todNER)I2;k,]pQBABC)H@8US`X#V5ZebD3Srh&7c?kbjG/C"o)V"e2e>%=94u/3(EPud':k393W_APf=Sl,m&T(V4M;W
%PEb+[D!4KC]*H16dKX!6Nm7!kruXNIJ=/<p:?8TF*H6g^NiJ<=bE3O()T0[k%\uA^J3.^(l@;E3OWmErO/!33rfTaYmq99"k58Zh
%PgP<T6iT+gqW,kINRmn&^BTY\C>/uJ^0X#(5;HT0e2L-#&(Zt76-a+0/T00:BLZ=$-u8Vd]Vh1OPZ,297b`^4%_$LI64M?SC,d4h
%XI+\FU5E+%'s0>!9]?4:P3Omr*XbUX1U+ks)m[44d/UI;.Wa$9LTREbW0`((+@,.I3n=:=P&c-k.P_eHRZ39n3CWqsCBoS"Dq<N"
%BOBj#9Y+,nC0YMi&V=[]h3BlGqFcIf71l*HYtn55=JG8"*ec""_#9Eb'7+L_n"N6.,8s:\QC2kj+&s:-Mi9V6\<GG&=>m7;b<Z:s
%S(*ri/#%,Nfu/0>Z6eEO<C=]nW8/VT>(N$_7!Oa?*$?I\^lbAi"SSY4qV2`a`dqM8k2ET7,gtb-<\9mKTpu)m>brj._s+1dgW1U,
%IeWLXN:4-mq)0-l;)6lp%OSN\e[jMdRa@8]^#eA<5Rl$j#3f%.kqFqA/5d,Bfnd@VK>(%5C.k\@Ck_hEnk&gA!"XHZ6h-F^Ri`4=
%/=ObWLL6(LXXY:EB%1Qa<]%oh#.UBYo0Ru:s0]k<\'\dCRV:R%AO7.LV5dQ,Xjq?<WROt?<;/lTp@FX8G?]Uj`%>??#H$AmJ/OcL
%CB46l^)pQo5@hCQX"91OcN?8TM:N,'=,)AeVbtI97RRX[,+7P9)4uMH*4E=$kaW3Fjj,5EVVnfBYn`8qD,VmPWGVjc6;gbMK)2:b
%A,5e%XgV\D\M$mNMeO0>2]#D1IAsV4($k`]'k.UtDqH@k$F'eb$F6UB8f).m(sA_4Ae$QTEC6f0c/8F`'Oj5LlF@M`)*>bt6ju_)
%r[jRac8!l`GMU]oR;!Q2S>PFD/:&RFc+?/I5\#CL'Gs:QJm=5dQf`\+eWtJSRLO1VdH3"QEP/pNc%q=_9U70B<2.1ITSg1;[ODp8
%]0>@Cj"4FtP\>L8V)&#DKA(!K$cNg'gRF,S[_>^EQ0reNkXrOdT^PRi0MX!)IB(/6QM?i&QL.+F$JPr=F#:rX&hmb2-nE/('MtqU
%>(d[j:4*<oe)^TJ6cZ.0K@FW'Hf/o/d&)t8"B1QK"OH<D97>T*#dAH=#BmdoV4lNoUObT"iaUiJH4a_0ek*gtXet<YMY*mQEr]%2
%rs[D7ECrK/@OO2FB1?;dQopXgb*V?)UM(NU?FNN,S.^(e2)+NFHt\5`n&4)+%okI215>CW5%WCoo?bu97d(H`S!B=M/IUbEpB!!4
%X+5_f3t7WPin3Q@#g^\-5"&(aSGUS3OX8.rW-28W7?T!]S#1]J9;`DqoWj"R@D&0:d0>8flI88#%A4_UQ$>j'&acmVA]@]X,hi0=
%@T9Tmn\Tc*RV6HiKO7-,V-27B3ZuX\DD+5s;C#@eTf#\r`&^ZRA=X\&'sp;_59Q?SBNs:=?6bs:UI)mUa55O@_:/_'0na%!VZ.^+
%B]L!F*[t@-\pJGoEANcTVR`Q-cn)70)-7nFs,Im$5/^"X-o;Y$L=%H91#q57eMnrC/3UK7SN&:OC#SIa@b?aMAqug2/rg<)&+<%u
%XM68hl$1BlG>nu4/aX2]3'Kg\A7<jJp<_e@4.d;S'S&uF/lnK!p)*k@&r/E)4kPq)-/O6,D:_m$[NSt;D%$SK5a'K$7Sko`Sq6ZJ
%3h.D4I5#CQT*ZCl'ZDJKP3/qmKp-a/#X?l7-R93-N#m`nP0PuJo^_k,R;\6N?6f0a!OQ&@#NIs&"i6D+><b"s'*IK1P`\;cnEZNX
%`%#V_Dt5>8MF&4*Jq65)Cnp"oD&EsM2LI3/p5c:R6m53%$>^of'$;dcN=Q";1H8c5)jsL]LkUQrR+WY*5E1Uk%AZ\'E.E1,)86.P
%B;6VVW)qpu05+sT%%F(H++kUIh[,>=!(\KkApeQKd#>?Q;"1SPk,/M6DmG2+9T/o&Pb6U:G:gK&!DCN\Yn-W<5c"t`AL%DgXOP61
%K**rR;;7kBX&3ulI9eaY\5=5l->86WmR\/[B1\uPLlm\/D2gMr50t@2'a9jg]dc[p/F6A[(paQHH:ILu&Q;,F?j-L(5(@NN=q2d-
%YU"sn-IDnIbi^?IZqrq0C)Q+_\N,UWaA%/Q>(EBOq)6<XQL!NeSNnDP5u5CS;9G8ffA'eE1`?l4`LPNq@MR_GLpLND'5^?\Y1X#7
%A"MXhR!Zh7aK&&h2U<n3\)8Tb\J$o%a?(I7cpP$V.7jjKK^FLfU^DK+O"9RO9Vff:-j/WQ4BQkQPqYYAD+)_+p!'Ju;Ph+g,"%,f
%r^kfd-lDt1N>Ag)XiN.$(iEm^UI$JEG*Ab4EXTJNfE0laVNitm3Q.g00ZDg25SD*E:WZ>XP#[>2@E+NolAOBFV$BRe&X+t=-`$d/
%pr9+GhK]qbC9:A&-C<djn0#o5dOa1+.$CX\8&QVo,$Nnlr*;J8_b*=uoAYN6Dko\IAVe1pkZBBg^^r[7F"?`(+EF-D=r,KZ#eUH*
%<e2-g2]Skj)a&qHnf)1D`ArS`D^A,]+=bP/E/KM"NsZD;82>(bO)g4J-f>jPR57P=aht3h\@WK.$n2phbj?)kP;1W)B`SeLjX09n
%Ls4k2%9QIGU,dOAZ5dSQ%%mNafQS2^=9XoZLaO^6VESl,TEmlu^`.sRWC27i7]F_u'4k&Rl=E:_6!i[GaQ)IbT8WM#/:ksb2q9Jm
%:EM.h3GFa8Yu^fmiOYmf+N$<?'mV.U.[,s&7>s+MI!m=eK+[`VoFrmt,_H+q]uHR'Y:;f%$r`3g_9-L$p^9q;9N,T8&'TQ]V*[b-
%`XS11$8]fA[AQ).DEmr9GO=A,[1=5&*^AQI&e<54%2&5)4[4`T!O#"1Zn08/"q%.'5\WV:0d`n,+[\h&O[p?n\ciA=M+1h0-37r8
%H#RW<\7Sc?o6'+sJ1UAYJ.V7F0hr:<&nZATqhm<?7$KK2WaX=N(`36S[SJqN`BGBALH#9'Cr$"I5TOg"Bau:aRSn0U5eJG$*m/_Z
%:q^Zrs2`7pe6!&W:dF"K57TE+5rh]M1o%5(rgkQD/4EJ>Iq]!X$M#[h-!1/I_>2cX*bB(Da?g)n122N/.oF1+-kZh2JZ,PlDbaZ!
%Ne8+$E6)_#8[0Ck+[Gdr!1=s<r<J@"kVRM'=V$eO5Y)bE5p/96L=(Y3[h,g5^k3p>0glUa?8N!)5VN?6"<$]d#LZ@WmitJfC`Q['
%_,`i-$#d0\6";^]aTE]\"LZ,N\+$FR(m%V%cpJqh#iSU@W'fo7Ot1*/#[B0?=ir1$8dX:R;N9]['YUAj'fH7#[il?]^63_ITKl0U
%K,3hSSVidh/N]83OF%*'jiD0?*E4!^:qY13c0SDaG%md2i'FRO'p]g'C$OW!f(caOUn2?'+df)3TfuFMEu7<IdbH`e:]QgY5Yd&=
%(qo.53.ak<0e"BKjnB#P.ka[3Aj.LLnW2rHn"+6#738^*6F''4$8fjdL6G>4ka2\&TP.bD+oS&>$\naMp'5TLW4=0HDDasPDMgp;
%;-Ar;+s#f9-5O0@;3]MYGf8L$asoZ,6QbY4Je(3sg'?1fJiRh):n0)eZDs@pmZ8a[7$0%CQRWnDW"B/g"1="(&h-+($o\A`&@i7C
%'o)B3296/)KCV!.%>gRVBF88jL);*up`5k01nI."B]=#$7<N.&V4)iIWo:s*k)>uW0F^]rIfhGanfI$L?qi3efsP.]#`/^#;HROR
%XMER=N!kGeY)/Jg!gKB&7%kD`6:R=51dY9mXJODK8Ten6h`_H[_ObIEF^_DO$C/7N/3W'4%$34^JTJmg6,e\i<R+(cnbQ$]Dhk*a
%JJWrnQ!=M6QJuORfT\NQ%>(i\5L:>1Fp_ci_?(*W05?"Z1@<pR7`Z])<.Gh=/qbFBlDtfk;(VjWX\`3#TM9eKk68k4k#J,*Aq]ac
%]Nkhe6:/?F^r2oWjXGq/LbB!:o9X*[>QJ7a+cDOD_A7eMNMt""3[.=JLa$FGPQ#pgas(@SQ*$0j'?5K4C$eLjSOcSl"$p1,c7@%Q
%A(ZUS-!OCKMjf)GGKNk%=u@^+L(%]!XN=%2=EcB7k$:S54Y]\OdCT_p%ORW!q4_>OHGW@GA*H!AO!\Um+W^'J`bPK*H<!XOLYR<Q
%R2UekB07ZNTNEKX^-WCl/u67W.?=#q+kVcB`-Np6k!N,XiD)*@':jp'pq(R"LLo9!F&Hbhk?(#:'JB_tZ!J4+@;Qtcr?:e#@O>Mi
%,mc:(JZ3P*8PXYa#mDPn^+,b0#(r9U3!9I6<MPl%8DNs?`j7`l%MC38$Bt<0dl@d,`!?i'>)0IE)oecn/JZO/D\YQsTiT?=2^n;L
%hIj4$?_gh:-tfGuW'U>:CHKqNT\`7mW".C.VD8m?$7u8LMMKZYqVe/.7i)Fn*e'3;2hHL?Eg/++Df`htk0^F9U^b[I@2.OO#oKUe
%O_F9*?nZ8o5%n)uiaFgmb4`O09lD60NQ2&$\V`L)!32"sWd4rgdWg20S*@>9_#'=T@7H<,3V.D)Ta-Z+*Q_OI_X"%4TRN)6.Y?;.
%,p$8W)OP1V-8NF$*DkfDc-t"Gn.9agA7bARVlKU^gS,[&R--$\<_&%G5S0?r/hq;r@U8cM"$d]`;+mf6R[#;m5UB`?.AbQBgDs0o
%L]^'V!)+);Bq,td9`$Feb6#@@XVCOaU"5]hR*DesK4T7'Mih07dM/^,-H]mSU-k"r6Pi6aajBeba$;Z7($#T2fo*3VWn@0,oeg>)
%UnF<`c4.K@(sGi'_<PdWW<.s?d/s!X$U^u;5;NfAbe^Oc9:.PM66kGWB[lmjH:tsHE*g*bQo>[SM4%lH=p+AN71EZd8g"SYC`Xt'
%At6)7.qI]dO*AKLEBYMOH&r_nY$/5J,$g].F<h89`W<L-R,MF@(A&)Dlg$GfAA>Mn*6C[M-&FEW7,i3Eq)*n,AgkKck[sshO.EL+
%Vb6hHH;Be$T^1F63O`P+M#l5G<ln<]huSO.m5/"tP9iKn.sV.H%l*9EV@nVkcC'rHXcHi:^gI:e+H7qK0o6e8JR9b`5F<ED`rNu7
%VY1Fi5.V_!Tjk#7)-83Zn]*9384SdgCgMK-L-pCrm+BqCUQHqPUBtnH0W.^np\!6;@Z5Fe;,^;Tmsm[AloFE%jR]X<<gn;f$n68%
%HH*&uc0i!_Do(KZN"E(k^65,l0aK8LZNU4u8LWR;i^fnAqJ#PLU:;"0Su3g&J-gl@OCLPq)_>l[m=<67pOq\te1WBU>VsjT6O)OT
%17_9C3&EhO(LC*F<4\-oN!,QnbT);Q,&9B5pu5ej[1S?mDet_:nfY=SW`(le*W9a$/T:^2#cJ_rWmq0F,bj)7bH(t]SI>2dj>@s\
%M1.GV*(KHU4jY;S8V:i6#4cWQQ5r,>)-uE32K8k5<3mjCs(F>YFot;S.X>,2LN2^<XC?6N,=Y"d<afJQB't^"1Q=DM2]3]0SSC\`
%gn<ICW<fbpa@UEfW=W`an>!iQb7a0DSu?/>^+]e^!A%lAjHVRKPjCql0HdBJbp^.ObQe=f"[jj+J]/o;Pd>pHK=<71THS[AmP;g"
%l9Gd<.P(q>Mt.=P^70/,*.NCCe.sP+,HMBt-&^09qI^OXc"8g%?)m].Hp1sBF.;@JKA%HGno*&(*.s@nr()ZC4k-GW#0AJ_$).cr
%S$_+eB,jrf1bct(Z0J$5ggOTKhQhZSp!f$@&QUG+_1ar\-RFB;:"'a9qpbWh%Y`@H#B>5eHoL'na3dgT">m5pY=KEM309;WG?[AE
%-,LcR:Zrfp!"r!_;:5/K_+590QfPO=CM0>;AIqCQAC`/nrKJ`g&QQ\Em9M8&ATMB1LG_r$*Fp<[F/aI)Z`8"QeZ-RA@OuT%R'`f(
%WTDVAi5WQ'Nl'0^L"]IA#o&E<-t8^*h.J8feO_l4UTY@;e.<N\TfHQOLmUTOcD6_`"6#3r"'hA/)c+AJ^^OP:;A56MYHAo0M][OK
%h*PZ<)l+i1:NW4\*iGiM:9W0BdQ[Wcb#R_19K?flEZVSEd-s\C3:mS%2upq[Y^$S-#s^DAI;OL.Bcs"4X!B9R)ZSl"icfA_e>.oq
%&f-j5SKcN>#os,eAm[]`+Ke%;R5=:D/oBqc_M54U+"CY6'F(e`ijlFNVh$%TFY733f?pf>DBmO2P7*":bk=eU'VG](=p*j7K-a!t
%!g7fD^&P#:_l-HKLF9/.P]FgoA_]SgmcXDaZ-crX>g#5rfHPhLl\]Wnl?QJsVSkuU#9SP50[)</0=;!ee^GNA0eB/5j$;@RD6[kK
%!uuD:iF]Od.O.0A@CUu]K)kLqMB0n&b#j'0:lM"&.loRUTi5pF"N82C9WqOEKXE70"("A5jlt.fn7uVA+t=?/VD3KIn7u4Xj_8$I
%6ikH?U<4X>=\RL/;_N!PGtS?l-\W7uR3JP8ZbW!c/N3pEd$>^oS9C9u];IX9'l<W5dsO?4f:7USnbJF%F2mW'i_'b@.k2b9<#@S*
%PP5%g2%c\lg)^e59gTSJ(dcFrh*+R:f\;9g#!#ibeN!.-VuVno#]<>]1ql&1_eF?ipW32WYn1(cHK@tFIHW0k0pB%AjJGghqk:U'
%7ZJY@=+rk>CZ^8"@WHSUkI!0TT:gj,/rlkmUY3FL@k!.X?r;gf@<J.ai'rD&Tb<4PYPN8T4Nu:oq6"0<#U@Gjp$o:99HoL^Q%R_6
%N&<1&Om.[95(gO?6c?P_g\:'O!t`V"lCZmR:,I`),"E#01f*&'G@Bo=/8mo(8dQ3r^1!lc+Cq4qVuak;&NGkG*6'%P=[X8^9ok(#
%pH'"Nf&NVNL78=XVZkR-F6am27p-`NLrG>)V6s63h+^e3#=TkSAF'>.,FNMeG-)<hkiMF?*Bi;7N6U"I#&?TGhG))t&m<r0>6m$[
%p'!IuO[k',U^1%q@N!_Z&,TPk9l<L\NfEeb.dB%qj>&`s"I/WlZNt;VOIgE.<bS>WP$%_mAYf8[oYs(S;_k6&"jhL+A)Lm4*^4D.
%</2?t#hr7AgG6IN,31'CMir=EZbjE_M:8o!0@:[fBhm&ignZY0eq,$cXe<=<@)IQeTS"eU$'ToHnmHIn:bWq/H^m$/q_I[32R1HT
%&=P<T(:Hntf1]s,QsTN%=(M2%4QRB($Zp'9:k9j&dM=gmOcLZD@YO(Z`C44C&2FiqMQ<!Y#QP@7nX0b^TZ1b^/u$o1)`@rPK`7Js
%$o_1N@X=XpWA&AoN^W^mV+8M."]Q8>r;]>\6J<2`.-@12GP(CNYTtpb"i5jC'j`W*F"i*BSnNPs;;-n1ideBATne:R-2o/)#WDNu
%0fEVbc\E*\H;P:J"fqY[_o%G27F9*IcUF>0l>+Kdaa>nKBXtWncnrD(fY<;e:\_[Qa2ACEN+k[7-L-bETn8\ZW<^['F9,rVRnA-+
%r(W\sW%<>P-h\5.>Vic!NPXTn"Wk-V,J08AY=:I.E'Ge2:(cYe%t)Uo+p$+[3FDf<]1(@ke0+G9)UTm.F4:0r7DS.?Ud"7i+:-&,
%QSCLW`t<:iBJ?qDohh8Le*_SoT'<&]H(N4^2t</:%T3rV*ZN6.'bh5qR_Xgulp-1:OW9T2OlqrmjK3b4#).c%1XP-s$OI8C.6DgV
%cP_>'S)`9K:P?rFNJ`:A7VYClfs2`U1o9#]!F*Fp6[sq)SO[A(;Hp4^-ksO%bn9:2q$9dbnV#'1#W/ha%JqF1=R,GGd94`t77'r"
%6)+@ji^0qI$"XW15.H`6q.0e=pGTdLFLgC.2%+A+R"Ooff;3Prrc_^@#^0ClOD@>O(AAVO$+d4KB3)?PiYGWZOFj-.F+9B9V1?1?
%#-)9>DaNPgf4#@P+l5Y?X[la3_f:\TLn1Al^f#E!q41u7m8mU@bec&(#$/&[7+IeAj'';$9nEtR3FWqE,.)`]g+o[e16okL<@u.B
%YNAq`l`uWbI@?D[h>bOP]C]-iA655k!q[QoCfH%IA&lfRR2)A\b=`:d_n.3cV*kM+4im3D+<,F%ONNAGr;3p@X_jDkj<^Ah+=#;Z
%49l1Rc#_4K*o$C0Xh2#sMd4aiLF-d5WnC@i.N;Yon;RM&!"i/#gI1\-Io7(VMJ0_K2WTgt^lqq]B>YD],';GmKO*pX%0-q![%5==
%1;tsQ-YZ_2c!k`1Ns82-ZFON.dW`@lp6jdU?k$LG9qtc1hIkq-dZ)O($g).5HB[f^<')rRkabQm:g440I&Fel>O<ZWg]/P,Ej,):
%N3;As_#4df/fdojWKgcd_GqZlRAds<R\_ZZ-.RMsY"O'u(,6'9*VCGZGoW3=<]K_1@2TY-G?sA3`E:&ke's;7oQ5HCI3%!G^E9rp
%4TPH9_aZnjX3Ojc3/)p$p`]XH0:FC+FU3"pZ#BO/`QF=W6]k8?;*$GOd<=ss,FZk';sn9+-)%nu;:V;qrPB7rVM+]1e$k547f9"o
%nL76%$,tRGX@Jp_X0=\iP&9,kW^2Bn*4=eQ\`a1`1e\"r&_tdYW?l[124:SYMmF[KG,19ECOu2>\/sYMC<bGHQp.?tPuWci;W_AG
%DReT[W$h77Ybu/FPqm?n-EX-eE`_Ps5Ei3sq7TGCQ`*K@!_q:*#pufJ_q.GRBFVEdVYX9iVCWjkleM1#H]ft$>)-LUl>'W>^'1$W
%>QM5Y?s:d(lrTONl)t7!>6f!TW&lLK)PNE<k@NgWG$4gIFJu3L2ZPiQ=!K,e%/0,_@jqO![8ifpjV&PGSBCGm!V`F@p9>h*3+G:_
%4bAbi[9%Wf[JB!A@s"9Kl0@,ps0;p_T='LsIb(E0IF`V9V+f[[O6(,(#SY=M_s1B&(SRiu*TBdjIE]7ch'd`D5cqhDM<O_@!i&EU
%&2g>mVAp_rWmFg]+\2q.p"IGAYBTo4'%m`E&/).(Yi`iaIU1T^T7i&\\sjA6K#'cr6Wg=P=NO)K_Q_#m+2hQQPSiX-eXY:7".+$9
%csjGr*(.]?96!:-"R?YPF>Sc4%r,F_LJ)K&+63-?a#S:7RodTd:9.4QP=iR-M+?sCR-:DJE>e1b.U4&X%:s`a>klIn7`>;*Bb5%l
%%2qZ#rT#TlGD:GQ0SB='/dDEdGSrcm:F]3-c#B$<j&!ZHG'Bt'+oA389hupDp>OQHEL3W8%lb=jE[YZl[=#3gJhW<W7"i$g1o'JZ
%"Ac.ST,q<[NW:M-FG)KY'?67u1^u4O$SA_1\)jlNW`.Xu_%`.N4[<i?HHIh;eKK>7k7>L/gIGV3A^)OWT13-?.CeK(SNM4sC=tfr
%kV(JGXO:r"PZad.4/Nm,3tr:knaM&YLGA:/?6-l=,A5/Gi5FZNCA+1W9PDR<dofO<Pi7H:cd@uOAiO("m#"M56nUST6q#;3#'Dbc
%PM&@*K9/O\RV^b-c5]b^&Gk(k/>?*F^g$.J\V;]L0@pidUKpMf+KAPC(n=/9qn`.-S=9<m+M;iA8&=.H!L+Ap']KC@ZJMU*(>l)_
%h?,cic*j[8%@Msu1V*gr"lb\&r4qiklqKXq2DL8Hd<YrIl<4bLED/^qb/gtR+Ac$U<Eng3QP^kZ*5*0KMGtgDY$ta'&)>Oe>8KL$
%WVQ=H^q2&QCsU,h:'?*.bF%(/&GlThEZ&KdMm9l[96qM;HXS`h<CGiMIF[!+V\Yf3BVfoJPp-mQ?*9+>W?O5cVoGmrA;Vcq<np)I
%('$sk1WJQXCE`Z#6c"8Zoo<C3Cmoa0g#JXs5,\i5e2BF)[-f0HbBU+/2TXd9g+9N5"7FT,Xc;gi7MHUQWoGKUMEBPR!tW7S-#HXY
%#rl@s!\7jg>JP:PJ1_L.T8L-%AsS`hhsJ#>U5uNq^$$5i<1XTfLP,DudS=QUlG%!C&[f2M(!ek:,#S4O2N-l<]%UJG9pT4:G<@i"
%)&#G]+9:5&U'$*Ym,3@/kdKbEkBZ4*&QQ?8SWXp9UogTH/L@'U-'^&-EHc,eWc5le,m59_6YXbU>-hD0q3AT>7H.62.qoB:(o()V
%@kAMIZN:8Jp.SA?9g*Uj*<jXk-grr;+[^[m:'Ud#k2%N[oaUK4l7Ila@?_UCK'TABn\\FsLD:Lt8Rth\V4r]$UVtWrmSZ,`4W3r=
%K,i/d']f!&=XI%Ia\Z39\iX_,(`EhP'_hVR>jEOF;3E>,O\t-#?@!THflcW?.lT#BUNfXPG+'W*9]4#@:a*>1"Y[B^IC%@&_.aOp
%ee\.Y!9WXGDpc:s:\(L!d7>N:--V!iR8`8>iTVR-\*raE2OC<BcpT=U,V]/MLESLIV%mfq'iEQIZ-RhaTi'8lQ61B?lKG2='5#jW
%/JpH65"DaSFHoM"(^LZr'?1;,6Zun7KITJs?N;jq6eP-Z4SM6GddFJCh:n?VKLW/G)rW&;Vb29g^TpGXY3!1)["i#%HLfU\MeZ+,
%Y'Oo=bE0T7=l(ms[YWij?pB=m7I7K;H9\K.dJ0c=)K_J79W1tANs3EA+om<5pGLF:'$>2`n2iSKn[l?;7^U4s_"XYOI2^R83u?cK
%a_:_#'51#dE.PpjAc]$\g^pbOH(P0J6ilX;)G\FqAJ(puQj/,Z1%Ml2)[2F\ir-5DWs%61HCc;EGFH^SjA\FBgT;"FO9eg:P)s+n
%)DFQBW%;eG"ah`/Y8"7&D5oDgY3>@r5BJea&kt:$#?4tjE?Hm_[WdZ'<""dsat`t66U5E/eR)q0\uN2PFl;TW1AZ;F!t)&]kT[O:
%5q>7MMD3TUR,#<j^3P:FA._)N0-o5bmnj/8+QoD)d;TP:@r/S"`,hdjQIVIk_-SRGHXShM:];aR)J)[nq(h\E^263tLXZ3%X:gOB
%Tk.dB0=S$;TQQ[FYqcqBYRDcM*[OY-M<IWW!QEYO8r`lY'qF6D])=hJ\J(OM$GdU/@lHifMp>V2_ACG6YO]p*iRt[D#Ou21IVuKR
%;'#TO7idl:j%AD_BL2O([+H(f*HK.IGLG;>n)tL2k07bOR*]_'ht]$Xgm?&%<R9LVh$nAlC2Ma)=m/:hs3/V596qjbl<m5\'b][?
%g#uF<<^kBC]=p01*boZ'@q<nSR4K@r'UD6``GaC,2#Rd)J4eE7gJG;Ad1VO9D<$$bm^q\.%,[m2'bsd;i1)fLWYG7_k[>Yd<U4BU
%+'[Z.m2/!eWiqp0A@@37lq/\VGOCsD6s$a<K;niH%9+7bI7F+b,AY4OQ729ldMC&98L`U]5i1WFi;3$>*\4\:K5Bm$<Hd[+_0R+3
%V:Nn&+b"pHD&t;u%:-YA`E+iM*;5E6P^`7l5Fhc*4f!nb=2T_I0\,9kT,_UJ[RsgiCJNQR/8B:!';LjCs1t$<_p\Al/sP'MZK=,l
%IFMZ`4;WV:Gfhk5s+-=$MQ(54[`P*;/6$74Z]I+95!:P+fQJ7&iTr@7KuhTf8[khR9.jdERbtY2LCGq4'g$b!6RAEtWInIeFDI.B
%OR1aE*ui&JSYbf4YUeO$-_SRB=E`:pb<(rg73G#i"j9aF;+N=/]E92S;oo7Fc7\$D.?qY/H-5t"L0f;OOF-08N.+9TK2ZoMM?nPc
%l$?EQ:<4/ZBiK0m"&TMAK*E!tWl9anhe:RFiA"N[R2%ZT$MIU&n2HC"55<L>g);Eo%7&NE[q'E[_K7Q;*=fu='!.h4)s7JMd7F@g
%Y8M<Z58aLfDC)s]kn!RmZU!-Qo0>^pSO\fCA3#!lK.g/'0*5kuB9n=;orl<]U#)U#QX!Om_jo5iltaT^IakDn_<^S?lo8XdibCYm
%,6@N]bZ]>:KA\Qo<*/Rd1j-TBX[#DXCocP#(]<s.`Vr/mX'`G9mY,Xu3M6PM%E5_<2&GC_Xod0I#X@3,lNIo/Q4M==.n3i"JK<eR
%+M1'A@=F[_%IBK]?ZbBKCn'/@.2N[Dl4,7fh$"ZcM0qK^=^^U!6\.6g3n-AmX,nbFC;G@UYH@j7*6'L-3`fUNK_L$A]Ok"&3\'Z3
%Qk5;3WH_a+.tO34L1$ld5hRFN0X^B^+hu"YZifGQ[9`L,om!mD`,-Usigb3=f'8Am*]](Q\iu.YMG3:Z^5!i:h2F76Xm&^mVs[rV
%Tr>J7YNl[FfMt@O[]2k%j*2Cq>&=C*_IMLI\"m")V0-gh#8W2[/4C!h7i\TFZr=C,'q?lu7L)Y,43(J)^5MI0SI[3=eD(Fj\)>OD
%!dgpX+f7M=Z[3RTb>PFACf-J\G9/82VU,^!+\p2GUBRgdO!\YB:+Ct?g]ts%*Pr-0iR),BK(ckca-I:>WqcP(Jd>b3eB[YI^K=W9
%/5XPq(iYSc<]skgO+<NMV1f.nJ/V!:X[N/d`*lqN!%:2H>l@BRg-TN^^FTS+$fl+JdE1!X<8Rt8O2['=kV306l-P;8^t-Pp3h*:f
%j0qb%%01,[e=8,"YI-F"BGr@PIofoj*Q`0t&lr#@8Z9EOF<D/VZ;;HG7rT@9oL%buUMd[)+nh-6MZ6r:0ee:.r*;RE<EFWd.pl&,
%`R[FiHZ1MPFHKUG?hW#9S,RB^rWqV_Tf)=7&R^83N2al(ASDQsdq$DXco@k_+R#-)'IX@2?8ej^89=2SG3'O_E^mRF^69CJE=!&W
%cutI$nUosQB-eQ1]Ne9lHsCZ`6g4t66G(Yo%Ks+BMQ(%EVFZE"de]C<Z3P,:TbZ4N]PKDPN/OtfA&JGd<KrIu56f`Q`;AuJ]AVA/
%dfMT4Co`Mf5j)k%>3;J9H&2l@-QChq-lY?&m:)-\LifFRq$EZ[C(@%/f;%OU>3uffih;)ZbB'9m=JZ6le3"P-8:ahJNTMLg;lI5d
%!b)I)fQVLn0NdQ"EfRX@ZBK#.G?rGF9"Yh:'0>Z+/J27]5r_Zf\d>YGEX:>ES=g?+&U$%jcjh,\*,IsKq/CT3)1=&^7G"6k&21MR
%FK\T&FMkq$3p0kZp?3m4:b"#0Ma[("7_D.&V<EZT0NcEt.HE:n88u[!fi1s"r-+4<R8@nL\u`MJ3Io&BK%Rn5&[!s5/:f5MaGlAh
%4*OtfV3oG,f)j>L*E)S_\2`I#L`-P\OVaB4]^ne$n9K(&G%7Xb3SKh6q(q\j;r:<OqGRJlgN*ElY+>WAgR-adp(btuP_K6K&cB-d
%e,@.*C9A>(>g4l8;4@%#*Ei#n(c>iJ@=j+Njj^bU!)'d>@8,3Bs6'tl&Y.i81,:CDgsK*To%/us!27Hm=Km.a!2t59/aN\=jmj1[
%?OG_YHXis.gdP^#iQ!f(V]ssOOJ/F,_LT9/Hp!\5:'2L_]'p&&V7^kpJa(ig#c)-^-ubBhbaW-QUfGh!UN=JlR&G;C1dS<LW;VHF
%deHI83O7im!A`ieMRXW]^)`*);pbE5HD`"aF)-jQm9'J^5^t>&4Rp_#HgkgL&[?K;#8$=EfcYbabp`K3f1*6UTa7>r@!:P.><c-n
%F's"JD:a0jH2!BC%DVpuRn#[9Q('I67]d\BLTDVbA&A(4'1_iVYYU6,)pBp+U6'gBG/_GG.KXa$10G0@Z>U+f@)#Ft']<;E1igu^
%E@;'kCo#4qFub=eY5sdkrp)g-7lN6/)"`SCjFFn!`jB5AUO2]JD(4Q)i%3%=Mo&;7QLtsSETDj.ZgnH2`YEX*SI5JibgA%j/gmZ,
%9EL=_.?c!D"=(!4VZ6Bhb!k0HQJq6.m\9)l&@0olZZ_AC;p?/aTM_4JX\fOHC$o<@9B-E?qo$&S]hBN]5bUEE3+t&c'*n#UXN1]5
%C>0>R!)_2.O04W..D]W%BB9<**^q!tQhF@D):##l[Ip>+X+2:9JP!F\s2[h=lkKopLD:hP-*;@Si>J>%_XVU9Cr0&uQ)87c;4KVh
%oJj0-mc'^m8F_>;ptR^fA)@1/!cthof7i\goTJ\<c>uUU]M@pp.TKdO@Dt=9n&;J=>hGV.[(p\6<WPauB-HF$E<H?_$9]61^'0a_
%Yt4R>*eP0"AYq9TPTG#DU@[CCm?G1q[^r2B9kfT1eX5.8;u1g0l)3XdaF)U8o)$!Y-@a`F$Ki)?3ZP@++2[gW3k.o*`Z2N]%1@"O
%q)#reRI5W9A^Kt<@KJo?cj1PtX;S/Oe`&As>H9.FLgnFZ8r=k8KhR"l63K<5Y>SJMIP^G]]<MHc!s1<1ZSCGY07E8$[L@W19.JCs
%^#,0b"!u<%OsTn^q:Pq4V:8*ICm1D'FUgZWV3HflGPZX[+[D:'43m+d.[gTB_:ODTru?T<=fL.j%H"-FfocAb$H`",Grd?>m'/XS
%^5/5]9ejo'j)uXTX4,f7CFKl+B):;&:>I8[8igg_SBlo3(Qt>X$S&l@T:=[PAWd+4-nUSn<p:b=FhPR;)Q>m];q3XD-J0jpA\%2m
%HE9;mAeGS[-@h2;@l@@h!hNc7S)mZ>Xmug/mMn\ZnS5GY0=[9E6]Fp+TerIa#K@>oN]=>)E0,&sB,j^ZTn]+Zn*=rWgHt-WfmF*2
%]:&s*Ahg@@Kr+DZ78t\cHdURI;Cs/Y#K7J>ldY.B7IG,^O?$:JW;//7q(C7E@84LlAM<"E9bPea.$#SJ<:=-'3AT?"^P0:6@0E8?
%bM-`je5N]8lYq"$XE$G'"/;QLG>Rj)_S-G&dVA':OLV^b2'OF7n6O;?F_M]llAOu;B,0$Na]^>6XC&!1V](BTqrb!F0b@/PY?G4]
%6j(s%X6V:330!?b?bEsVe\cHBI3I4igDAN2DE6HP22c-05:pNlQ*IfJpi-6D\DMS2a7ELuqM2C]]l45Te%^A0b9&hm5@G)YRIJZW
%kHamW5QBKQrqW2cnAdbAru_:&^MKgE6tDC`d3HE;Z^:m@2CIJS[?%NhZ]!,\h"+ip?Yf'/ppV@EE:]tlhA`!j^\_q61/dF>o5&1h
%6%A/%^O,Z1ror=Ts0k5<5PQ]'$\,X6d5Pnq)RoX=X4%l6aaU9O/&'EmBAI8r3`GT^QX!S_0,pSWa`feLcEFp*4M:;rT0Gm0Dj>d?
%MZ'gjC?sD/6^$--ab'Y_TO_@=_O2CThe(e@XJB<6^c!Cl*"][r^3=P06qm4uGOnC/UoJ&d8[<8]^[nrkiHhuCo9+<L:<cI%<:q79
%GC2f+]$!7A=:!^N9r#Udc//d?3oP5T+\V#gqqDWgEh=OT'WNYKlm=\PY$F2;gmRZW#N!VlI`^uQ4=3;m`)fX2rJSnkX5EsIDuS4*
%YGpsT+5ZAB-bE2"3A-gLe^Aei*fJ**q%]SBgoNQ=Xks#/9n?a$-DDp#mIYHK?l*s^b6_/c&nF7V=dHh5/_9(00@bbsp;"CO`94=J
%'"XZ74CkF`a`ZbUj@'FNcYp*TW%CVr:2JVb^b_ZlXcA3]graQMj_"J-bdn,L3B<Qr&R-NTaP&%ZHZ?E"4YchkJ5"FkgS0;909#?:
%=b:WCNEq&'negUjlaZp*o3M5cmR9F^\MRA4&D\rLrIL]Xl"f[qlQbKF(8W5F5`-l,7;Y.%^Krr7I_>P@-b8E%_NfT5(<iFm9=N5.
%PHFS:<S)0\:t8f@2u!?F/>WB.j([[$FD7OXmT[DcAPD0OV=5]+=CEc?3mY'lail95qaq(`9A]GS-NE!'ro[(,\9Xd5gq[_N!ra`$
%q1&;1s7,P:huDg;FF;q=Id%BP0DVR6cKIFf8Jd@trMD_i`]die^\"SXW&sS*b,ZK+0,^l.gWV>Lg@Q\0olJm3DeU[KFnt.sn?enE
%,4B^cPn3Wg^r]AOkiTUL[(MT(Jn.aqGhTT>jI&et[9?"O\'h2mTi16eo*<lo:iP8*>WfdImG"6ro3<2Pq!kV-rCS7W=EWp(Guc2D
%3h9.jgU]&hoYP%XNs7%>;:Bac/KkOM>>>.(#"2WolFp\/j@aVXafcpRqJLeZ3rW1u(YRY#fSj,W;.Is%]l0r>7!3Dtnib+B[Imf@
%5Bs)GV`BW"@;V.a<m2cVYXREcX$"Kg/GUGI_i@q:l5CYe"&lsu$^EAdrb>*i>jOr)O.=)AMo?$&rP#2aML.fh!-d<pY[k0!Il.5q
%`0YZ1o;HY0iRR`h4<1c\FWDK??so_ep3OH4TnGY4<u"9JXk[P@!7Rsu36<2P3P%IlWM)(6q71H#OP.Yhk6X/6fAL)ngm;YP<nqs?
%";O:X#A<M6KHKZ2bEBmPIR"TEn(`TgXAehASCs+OK^iroo<!CgbKYJ2l,1ggG<82/`qbsApi&atkFJSb<^<M=Ud*$0!(T%4l5RIi
%#^F2_r\PReOQ\7k1$dr%o_(+d0<tRa0\enG$inoenu]+<$M[VIH?X^2:Olb)m5u[q9;S":StNcJl29!k3"1^M.JapoZ!FDm?*5]?
%Zl54>@KKL(-lk8lkk;G0=uD?Ng;kc,^:hQD:',!A(FE4G@]i!2mQ6=Y=m0XDTr7:0U/`@@,@`<gT3Wka\@&m\/2*Uue1dp9$h7Z]
%%ec#WS+qE]e;7oEs&_hqiFJL*'BWLEb6(f^'FL2P39(Pb1'_sJ8jbknfl(jY9N7jPKYd1]"IN8akO8HP2P?2e.[YlY>MTfSXG`9'
%.M#^M?"bcem\JuNl?'unTiX$G).;[f1Q(Xo.k(]??P\r_-<\TdR6HA9(1N.BY)/WL%YX""hnTt%1o>+]rrbD+'=?uRlaU)J]kWl%
%"IoIjJ9PK:lD2ZYLn<0N(d\;(V8Z7j`&:i`rY<4QJPXAsWsXofl\$J(3IOaF7S-u(0-OlRS!j0;H!IEO9g*MYn=P;@:aNZPS3F)\
%=?pr(i%2J>ZEIFMIO[a2)f2!('ejisAr_5s_R\)g#YZelK.=u1\JfGqWssBd-.@3?6aY40(skY;Oa0rP).6I76,Urre>C[^:=Qu)
%"?W-T+N1=D>(gArBY:lU;ID%I50PfPMk7_Vg74MC\/jM[K#d^q#5>Lmck`q*0c#c*%_.sHoT$YVWfqeRh>FKlppu!c"p9`a#FD*#
%aVX,R4uc.@^uCn3:m)F[#f$g(<_lq8d@bT3IoP7QVT*WcqUQJ\4Y?'^CX!kTg:fa[Vl!'#&Rq8-#9BVn#$%O/_aJS2BaBuepkjHN
%1E!&P7-m&-I+'"D[C"ANhYbf2GlPp:B(gMk(Pt[_ZkpkF7suU)LtLq(5Y<ZX'[N?^O6PB4"d8pH5X!`J'es!%A5"*;XkZ&0d+?g!
%CTkHd-Pr>u;WRTG/(>O'E^/HbT[45s\?fO&A#e:-mVH!_osZO1h6;"rLgg70_iBH%EGrb3k=.,MSIJ4o:T^;Q)n(G2GCRNY;rRoO
%ZsW,GJC&:[_h)PEk.H$[Ft=QVo*pV#+^XF)%86!V&1-;k%1D-;154'AL2CCY4RR)h.dF)TmVZ,=]5ie!DqMGnNQsKL&.I\"@)LEr
%?]7*g]41k?:j;=&Nd\DW??aG]ea0s!&Ob(`+XZ>f1\@27;BSW5@X24!AthedYV\aFTlF65nl(od'"WWu"GK`d9F5Rh+-t[bLPOTS
%Hk1I_S!G<iT36h\`XpA<0b8KuXLLlnF2`nZ$]6"U&+7idVY<31lIE)nEF+@^J,U#j^\DqamBbn+DjOGGYVF82Ae5;7"eJF#C.msP
%%tL'o@lZAu]io;mTIJ+$G/I$hG$!=^"'k[N?+mkt2-sN+0ZDRET/TDL:6QAT:#)N/@3nF&;K(JG7YG>fMq)eL36iRl9B^+LlO-GU
%J@n@Z4STq3c/^3PR9#Ph&&k<HT=?[Z@5[h:eB*-FjJHAK$W@@K94*O%1Z:KShQ2L-r/4Q.cm/<f!9'&JeqS3o1mrb>PQ_oo?+BSu
%,?`q84n^(DWY_9,`]l&F79c=mUOGYjX;;:OIeccgE]a`Cqe3CY[rBno?n5W+mE][!qTgP,+^P&u2b\+_Uj$!VUe45?g`ACYGS2hN
%D=n;P7XW>`!)@gn;fQnT'lRj%Ae<r4O50`6WduhnM#OHI1KD%=ob,'4T@Sj,)BC6l)Z>L7f(CBN"m:R/r:%dE?MAUBo=s(l3V0<V
%"@;Qf7shHLQdO/\LZ\Y51-+8kEGPi&_mI2I'L'Bo=)^>u`/L<hA[Ke"PPi=(q&C&H21E&^T?$$Up\>`-5B,HoE-bQU+'<4:0ie,&
%f`qV4rWX)+[m$1gm"9k-PE>gR5+#D8)D=#\r[b`8)plJ!#f7<37#SjI(d-o)@%RR;,B3-T=F;rTMj-k$p\5N^n-I=\_;0-2h+F8[
%GGRKjHba<oWC1V7V:G0#Mhrj8"7$oA.qs5kR-;QH<e5FP#Wls:[quJkZqUrL]%$.LS&_iIr40/,UO?c"r(@N#p26>+'I_Q9NCQi%
%oN$J^aN6c65K=e;=5-*V2j]tGcn#;/#tA/TDdqRUj\EN;3<n@AJ74"e'>&,d\(X`?(2/e0!lo+M.Ibj;ZelO'`eBh-nt;k2I,!BH
%HdCS!>*BjGCCME8GNB*(gXH?G,02]0HGX9d6?Khq-U9>`7ke[:^f&:r#XQc8r>ZfNZ\c$k>>(@#%5&;i()\-/)tW3N/Y_@b]K.:!
%3^b\[affTV)AMQlN?nr&&/-n)8fFZ4\/=0h&aJW*#,iQE7'p7n+U!_YJ40sEK+b)':e(XS@<V^@5jpRFMST-B!\&]*NOB'>'GRIj
%<M]_VL[]M\h^g:*3-SJG_30V)Os/QU4P<H1QkZ/lO&%.3AGgJ`62I<3U?P,!%WaV"O4:7"KhZFcqf?I$5DR042\GcXEu3d>*X#,q
%R-a5nR4d4=Eu]k9`S%^\L*oSC;"k9GhrBP8T_E6JMnrsN%d%m(!<g)i/Qg8`#u,'Jcji%6Idh(h!A.<jcE6qRqFeh)P,/>CLR-5Y
%HE7Sk1kErQYjJmL!4+[R_APK+;i^OQ-o#ZSN_N9t-K)Fb^bmIO'M&s)1ml?N2g/[='j+(9!o=orb`-'^PHKGAOR%5#@/5B.a$:-$
%L?F>iAe]pe10<Y*nZTZu)`K\X%4Vk8ALdo0.ktFerrD$64gC(oF>L45ZTS3M;l`=d+t+^GY.@c2)PGHf7Gr=Val1a_[i[T=T`Fq@
%&&I9U!gr;DPJsn<>G.uj'a2LTl4:tUD11r2M/pEp`oqS'>d\b7C*45nZAN:7Tuce>L1IhO(f/H:(Eb!.%<BgG3?#U'GgDo33r50_
%SMGd>3"*E&D0]m@&WdK*#Q_'?[fS$fB`PA8VUZn59QDXOOJNr.:L3To6Ks5+H8gMu&D'oG'>AtWSY&#%^B"!+6.l,42f8rPSt2`P
%21i5TEkM$?TQB%4=7CT%G_)1"70n(2.M/J'bu&<[Zeghhh[MR>(bn=L+YNBJ0SnOB#]I+%Y$)Oa3)h]]q+:ZE%_A-6?MNkk=aK5e
%4$T.KpdulbHCCF!e^hRRr3YNPaQ>?-;^lu9?q38r$qL?+k__50X_c5nL&pRu!]%%2kmm/XMWlPZ`!Y/,mnD6o8BK5<],5P9&F'"f
%1BWG->:'m<q:@;4oBb2%.kO#Zm;!nrs&YY-930oS,IZMK"UmT9.)snE';-UXe<sa?)\qoD9c$=\rEB#o0I*EX[s#]\WW,LA4cia<
%0rJ3#;uOaA!PPTEEUT0B"nM^sS.a`sc6lM&Br4pPACbl%HF,(^cM:0#@lA'+`><5t-#hFHHXl.;boF&D(V?>M"iS^Q=>+OA"b^s4
%3A!A.&=pr<4h]Xi2uYh7iD+.\A`0e6pq+[3k3#HcpS`9_TYPKD<E6U2d)+N(JS'+hhlMZ30(;o%&Cse+<XN`SF.mj6,3O4uVeBO)
%a)H)qN^^#ROgE)*jcg4GGPc8*iQ&RfEg$=FS18RTcYl^\RbIAha5%*S]7nG9jJQq,\L0W=nC-FCLZm\Vs&.NL^tKi"13t38b^lu?
%Ns>@Ho`fNb#g0KhP-UL`4s)6IC]>@`iO_ASo@(hAY:QUJP"Eu,0]G;WX%Fr2na?"@2m'[iRaS2h7uDc=<l$RL%geKsZp*;GV'l(o
%HZJ*TgN)u4mdlhDloo@*g\!6Cs!>b%:N<0<X)f='LS8"WM:]7cab*(1@+VAFn!WBX/9TLCU`D\DJHs=u9m7`V1bi?IJF;Dp&l$3F
%qD#r62rSM/4/&j1E:bR99lq1.7gAKCW];519iG'SPYs_[qL_O"lWEnSMS5I8&58b.qsk?OZ\bgl"85N)%8JFY>`QT\Q9@E(]O)"u
%HQ$_BO>D8kG$rcBO:)0cA77*MUa1#2q-^^eE>OK@_^K9rfJ'o^6=s;!C_\B4A0qXM_XLKLm]#S9'NNOOY..G:5cK^0RB,I2_/g4>
%!Xn2p[PRs1U[BtT"/:+^#Z`k0ggL9Tn(&H3-P^6h3,@X(7a.@k[C5c>bMolbC\WRVfc=&US'=n8[U#CCpd-S,,qXINO_qV<GN032
%41j/i"!q"G9&e4Q%f=Wi7eUm\P1.%1%t?B[hPX>hFb688Rihi+,R-diiCJh1$GT4N'_3CnoqIN^nt7(Pq4+6ml;@LYnOH/0PI8b&
%X&^V5/lmK8E+nbIIe6?4+9IHAFa#SFqB\Q9X9mT-P\!meB:Lknm8_sE7Q_>MkRYLL>8nW%85&R\:FZ3^>.o?o8&t@SH,U7K<i>i#
%!0iAl*:^:MKL:39A-egW".:duWN1Jn4hrI8QpqqGBmFI?Cs3?(;OSp^<K4d:TBAe#-FuW`!hqjpm*@nP6;u?l[PW(426@og=/RE=
%]3.9Zq<['NrZ:q6eFAk296>/'GQSV0Q6%0r@&C7u0>2/N',B&G]j\^;kRD7>WnsIt:bWJ_)CgK@>IG3cmA3[*EY"AAT!/%h"Oe/E
%8C!3FP=Kk,C)@UZIp00,MGmO2)f:RO?p&oC4Obl1a!7W7Mfu]J*I2]JOAGT=a0%.NXKSVWT?SLA8e!kBAio&`e'Fs.p$)F=V]N[o
%alNFrf?Qb?<F*O_NulhXo=6/VNAU(q#ihemYs#j2VA!#U_LkmA(*n!=?^]P,rPp5da!&#jWuEhT.ZdG]2s<-kf^i$AZqLc@a3OS2
%RdI9.-MFFX%_&!M;Bg5%;2GJ%M'Yq:.].+Vd7LLmQ$bC\2oFa9*m$7LlmJ@0X+C>^U#s`e,1;s-3dP/S2+J>'JYMGLD]l$cRTnuG
%&JZc3cZ)t"-;BpJTdt$k*\FZ%[2<Hg-.(eRI[%:Q`PeCgIjq4T4CtL!QB+D@#G'FX7A%.J'&>\;e@^qe_m,Id/`V+7<F;9@[]?:R
%3-Zt@W61PK94R`,!-`.$dXgHLMF;Q4RM,JVKS!3AX3@%^]>3pC;:cF5_5BBV9L-5m[2S=_!4_PQDElCP<Ftd=BH+E&Yn&_HoGgMA
%$9<Dp$sOG#CD`RURkI)PZE9='&%3''#FW6k9f3C(KeoGoIL>$A;LL\pM#H<C!1^(]s&b+.$UqHr>F91k'3qV+$C*,]Wbtn[*5-TP
%2MtjDdE:gZ31[)1&NpO7bWJUR8kU!AF+ku!om0?9?=5EBZMR"m7W6-%71C"6]iAg%RL^pRcDHoQ8u"+^\TM8LK.ic5Wntbb.NX@k
%AbtA[!UnZ7QW8q@[>B^I+O"YJclN:dVr+VJg+2;"A<C)2mTjmbDGn'mmoC5n+*+b=F(_FieQ`F>3^e%<\#Hna,a'n5^_=m-a"&*@
%Mcg[TJG-eV&0]Frf`iIgQ;i"7PA^F*^62t%\AQq8^T&',Fr4`U]Cdk?L`S,rXc`!o6*qgs9@]Z#W<>2nH<f1"JQuJoao(Z`Ak2@!
%dPhl#?WBKtZba<$^D15_WdBS?Uc!8u'e?*frL/%:2+9tI<o4O\7^:IA1`::G'tkf%q",'_rt<1I;M:-EhbKqA5JI[bn5SE2K6XHY
%\qG+r1^mOjg`a(:FYIVPEr#M@</c*_TU3)R@ki%`H@-k*E#[)/D#@U%Q(Q9HF/[EqGX4pNg\#+bd3#7P`P97kT]siV!.fZ/*p)gR
%P=(m1EZ!Xm:1RcYC<u/&-NVsqEVP"=5W*Z8FI8JR32&ZL_c*=JqPSV-[qO3c?k%F+BB49AW*Y=.Ln/QA+0(0.!Enu!07:[<efMJ4
%3FkGW]=2-A;(1-obGTANQ@)EVjGcrOZJs,X$`FcWS\dr&N\fL#,=1)@fNJ?*&61UkK.C`O9b1GT_tEXN*23bgW^Y'LTE/=V#""%^
%)(;l5F]J$<GkWS6T.^1XGb^X7-eYBtdugB\3XSF_`]8!D1gW6Le7lOi%.JSE(-`UH9mu3q9@DV3<]XoXccqtTFN//J@^M'MH,VV]
%c$Oad)Ok7^`DK*q:'15&9?h.>&Z%TQ^m=HEL$<Ru.rglnklEdU[!=l"nr^+=4g0a8Oli?IQ^ho_EY&N$URBC91%#%+U:&m&b#QDe
%L:9e4Z0*CqV0+3\E*=9H7MiFhn@e%=Vhc^5%We#2Dds';9l3>3aHSI6G3q0+6!BH%r/[F2r'nd5ACfG_OeYC/k"o(-H+0FpMs?V-
%eeRU>ia?rl;9eSEauQ9G$!7L@Kpp8bBTbtM`iW#6na`otnhbiQa6GW?4?V"28pSnljS76P@`KN";5?4apoY*rf'\*\1?(kc/efP@
%B8JP2UP;,lD64]mcbj$ha^u@Y4(#XU$UN^d`9U?hJp)FnB(I=H$1g6^[Mh&-mQn4QPGc;G8<Ll6VBBfI$4'JS1@h,hQ_Wl6Up4Kf
%4`G^8891o-.#O\oAAqHe=m]BiA*3P$@7gd=E&po.Z8'l0:J5*JedSG05mc[+Zj^]Ll<6X?*;*ZE2ap[d!T2?-2b820;:rKN<DQQ<
%G>O2i^5H8<\Ok6r'TsUVGUje/=cg`&6n"2k'j$1+D<sSL_XJQEiW?m.!:ZkLeKV_XGgrIC_>+qCPJaRoG_"]mdG74hhJTlcP!"uO
%grrihCVc,D;Z=][kTb4c#?S7me%l:iVg^U':%=fo'q:STSWB/9U>+TT!`q*Eg]=uSS5eEo`)2pfJp//Y"1-+k&VP>\k/bm/G*Q>C
%_!5K.2>h7,HPVoO%&iR_7o2=8K*l/TbP1*h1<MtJ1DEj-m"nWaF!52P_Btd":^R`[U2KFmY-a.3U2U.=;?S2Of-gfg0I`TS:l(@6
%qMWqC&41e<g08rXX`KnHMFU2seVGQ>*lWSSKaknX+SV7=,/oq;M/@-@aof%efrLmW(kre+>>sBR"1\Zu31K'dh?E)]Zr%*GI/kGY
%cmg1l@BQToN!(m?_?7Y9T.%CUeO-.V[2p?+38(D#+=EoI-?n+*k7)VcLF!@K7*h\Jr6*8^mgt:_`'<Ci>OTQNH%;?!_RZkLAJ#sk
%Pt^qCQ=.27*c<@he@I!o!:jL=YF?=.d2]QaH<FhVF+k++CD[Memm'WD4/](JV-.#S@ur:#b3pcIj]b?GVHF5oNf2,.*X3;d-1#TC
%nAib:U.:UPj"q&@Z3J4L_:eB_^M*?oMTRjU3EGKjlQgG^(dkb\,,&cm)ac$`K-/Z;-n:5OE0gVKC-&oQOh47#4("Se?\s;O_)7Xl
%^2k]'2;Xa@SSM5-hpOhJdrdu1RKjU.#]%)6C+=$V0/tAk1m:Dh;,HI7S",84k]MMqaopTe71C/(c2hue&sC[0g2MM$aH^m:K3H(@
%D"1X=NoMK-V(\MXH"2>(M]VgWIF)M+`>/V\VD*rOqW-R7=1u453d@@=Y2cF:9i^p1Qc$h"%\G/eO#h3j;G%RCO91)UXucF8>b'?[
%5@HI95aTGs/m6K8KpR3#B^JHSDSCV^[UpDb<W,^';e`%3V:lt^IBW`@0<=)W6eI@6RFc7@+eGi8QZsPqEmY,*pS]kdXW3dGPT;,0
%fbj/VM(Yc&RM@+TWJ^F6NgI?O'#hakAdGM,gFuSk?$5I<B.4[Q.8cVgPdTgDl/H#alEXThJ$(fYMBSTeF%Hd<B-%u:6):*)79p=p
%esb&iD!t?p:YV&<b.^09gg*1$]U?L1Mi:fjdU-WZS%_n7n8sF]23u6#K+SEh4^hLCds+GSM]Pk4b-[W1@T$IH+BNN@-/R/_Lg;?<
%8GNQhgeDUik\t67eJ>,[poDK;`=5?>%(#-`J^C8H&`Y>K9K>-0JdLUX9;eFL=(6_\8!)(t/p;(eCPD#lGc4nH6<g5uY0>DC:8H:i
%%7t'5KL1g+=/7)&7Ese[Hd>9qq)N^P,pDH-64+Per<b'q^fkcJGCS5X-3'BlhgC^"?JguGQPV6Sd1aN1Ic[++H?^#s-]gZBeL<=5
%cSo+gK9G&t6=q(]k343KPa&0/XI5po(B[F?NDk@Y'V@Eka1a;foDqqqG/^g`)0n35><&fYTc^1o`ksb89MTu-Mrf24:AjAb3:6O#
%*qgO7Y^g-RBeB"@9Os_h\qJaV..O]T<H$`DcujOGd<D(emiVA\&!%.FLI^4]1OZVpc[%Z$;VdlSTBg-Nn;HdU*Cums\AhY;`;5aM
%8"4AD,uZBa^k=BJB)K]W!Y;?eHE*oWi6OF;2-lr%U,Wns(610C'SD\"4t\HGV-e+?U?QC>+dW;gNjO!%Q9_`5]u:9M1SIQ*dBdFl
%U33JiZLm*\JiO=;D)"J;e:-X\RT7i%Y_st5%_C%%,)&0&2Ts!Hr(Mb.b8,Rmn8!0CYWtS!`BcX2))XRUW4:kEQj8p^=gItY?-7a+
%]2C;U/>N!g*:4uF(pFCbRI"WT.l^8I).h-#J`sbhnM--*$[(U4K\qM)et)SRdCP8JMJ0P8/N_\uLY#rFQh_oblYdma]X]]C?MC9N
%G]Klm\s"b^>JI>?75LGRdBksuj>mc<$tT:FeWR)RQRLA,[UL?^'+Eg=d<iqu`RPEFke4-F5/i`YHi.Zj&S"o#R]FW1CrVi8q"D^W
%A#D."9=;<p>u<rE>u%::E8kN>NH2+dfYbQYP"g!+.o\Qg2LSR//R^4h]UN$);p4h""`cdVT/E!_h>>stgY9_fEYOepVik8qZ%W:<
%q).4`87?C-;huqZ[aWo%$X>TA3W7Yp4uOhh"9^;tQ2hB`58MgIQPRaF>E#\M]9P!'!>W@YW-&+lV06T1g<#>6P8_s3H>]TKe5b+U
%ckSJF,8c?cKdM1MgQr.=Yg!Wc/30K7l83IiNqKAl!uhOC#\?W;nQ]qZRY9nDj=93"pB]TaCk+p1KBD[?\A.HXGc^]:Z%'M77R`;U
%0#WNs$iRI+khO/9R7=M;l`Q$]bYG+m<>;_N)ka?>7os>a<F`LUJ]4!;h*ps]J\O'<Er.^^(DJ=6l7$kpS1hrJ/3h62m%%0R>=l=m
%!C]m&V9V1:R)^1,MNX^7G:G+@0-VJR^8VhQ!Ug,%Om,^`5"Z*O,kq+X@nhWK_AT+`rjhZIF_m\;MXWReYqu5+SKRhc%lIW3GSBTf
%>JRRE*%PZhg;uLNaK3ZcB^K8lbtTAZA(:TbR(Vmp:@G?Vf5%\pBuHR!UkaaO)1"u1qX\;%)?DHJnCS:J5ef@;P@KdD_?u](R7`FC
%aRX!ESrVeF6+T5q"&Ws](:1/7DH[CK0N<>NppKXn@]98uECl($#o/-=$1`"VCKh-f2rS/Y-(";5pV6&N`c7LAhFm?$?5!BX/hc`H
%ER_E#liHn\!:_!sf!dfhqXDuP/S7@4'TrfiFZodL_*PbeUoO4C`g,a#@^tCFTqIeTHDSP*V(?F8)CVid*Xd:l:7l&ldcjV<&h)mp
%fF=frG@0*a:S"ElC'tandr.uf&m93:8q8\gA)VT-kP,:1lu9e29Jqhss.2@Le3GPiAR'=oMG+e_NUfQQ6Z]+t7o]l&^l0KK(8,Jb
%E0/Wke27\-`H4T$+Pr`F-^W&";,(_L2M0$Ek7+aNa+lCean0P&7M#g0o.\n''fX2lYVLQW];alLS-Pi_Z<;11gs8,;Fp^qr_I':\
%\qb@\)!@VfVOH@99?^&Nif"EQ[p_TqE@%IL5Z6?*;i-tA?"YtD:F=Y%h'@\j%RI"n!&NX5V`.F<nMR_i.Mptk)moI[7]f-KIkV"t
%Z.=bEV&.d-0gVY`]0Jb[ES0#q0L7>6H2%mtXjIAYpj7Ru<48glDV6&Q0m_7R'C@D3.k=Ck/StJQ;'mU#QlRNBgg'V74m"m9kM=bs
%/mHY!@^f9CBT/=3osH5J-T$NO=bX5naQEFGn+IVf3A'd6oq,t:]deB=#CK_X5-HtOG)>(C7r+LFBb)FYJJ;?%S_FJ+!t8M(_c-eB
%b]95cjU1U+`tc(.:7D$qkf3"018S95TXi;6m0)4UqoJ95k[%pIOBC?;7V=Ym?e[pS:SSr\\5t+FGiqFfSN9>6!V"UdQMCGL5-;!/
%S4jmd-0f4I_+`<4a)9@GQhRJ=,#3kr;Ge0a*`jAk86.@ig!q\(qOLMAi:c;MY##q4`'DjM0pRM<LLjh(C=VF:doRXie8R36XC%)d
%mAlt\;TLSjOHR$(-U:GOI6pcF3Qteq=X2j!"A54L;-(Hb"%bNh>`hTIGC%1Voi"j>efY_\)^ldY8?[Ws\HA6G].m7jf4bEXU<`A1
%:`;/G-m_VG%2?D)BeWdhYVKI#Std![k_jm]hAe't<<TK.?j/oURU*K07-g!#!jGP(]dqF<Yh,h+8LrPQFP=&>;@FA&o-UrW>`mZt
%n\_d]rGh<XKcfUrF!OSeI]>G(/m^]J3f_rV$7r2T+Q&M>\\J?FX3G',g9KeA07]BW)3rJ]T]NVh^6frO=DBVIIAO%BWJ:9Wgnl<p
%W"O54'soO?]:u]*:hCE+geJT@&ik:+@)';-i8_CU`CV8T?%_*]9'LIXYX4.A*U>GtUn6j>e&dM=V$9L7@t2`ufu_d\C-)$Sc)&i;
%b08EuIL8&'8Kfh2=&om&IN(cnPG$4Vo77.EF+_/&gbZ83>gRV44Z`B>k&Y_MN724<o&KpS=Tr.NiD\CNFsT'K]#lcicAK`Hff8&k
%cSqa0G$_aP8$cu,VAbB\M1_`Z8Y<9o-m*@,cQ(e'WpM*m3$i&FO@fpX_I6@neb"N5)GLlh!ra_,Iu_TOPXsYiaEK:s/:oj\$.QqM
%fP-T]3ldb0U_6_llY9ZRek<9AMY&##N6O^PGUe_:Up1q#&QH+f.FBrQV6j?*,fRWs-7(*mj".ug`H!<TRW=Xm>?]fiRn>K\R\Y!b
%M0CS;TW#.Q)Jg(hCcU5+WS#N6$$*4/[Oo0W%\L!L2R#&F!np+5H_=&`ZeMH]TUIp(5h6>R4Kg9';c1M\d1XVf>gc#[A/DWjBcLKM
%UL]D-Qo8m`MK?M\8P5^n%o"KeKp#n0,1ebB;4o[eF],RuQfd!9$Cl"5W","";&QTT$auR#+d>3KL^%!H7=Dr"RbN%=PaO#&@rG2X
%k2uf]3\?:@=aA%3fDl%k02n]J(]!9LKdnKU_&?i:+f3Lsc9-YdFXQLlJPK3=\<q5Fp`Q=lBbe.8#_m",]s:irdScZ53=;^0?qlAt
%;k5#oSX]0K<9H.E;)jTPk/.Ki=':Tq8O%kr+dERQ*f)tc;`Ug.$lM!u`I84\Kre4m=f$>Dg8U_,KMlnPr1*X7i(<T_N<;&!]$JD#
%IfHk]kVtLh+erno+s6rdaS.%aQo&#hf*s@<mO\YuGrP$42.<7$;#F6eFB?k;L%#BU==u/9_hDg)C;#aS*cl3UCK)JG4t``q0Jle(
%Ut.5X@:+(9;0?`-`Djb_rJi3U-%&L/GLn7,8R1Z#j_pDdKDYQGQ2eVq?[haQ+91p#J,\VlJ,[oHs4@;Ici<mWr8X?qq_hVRNRm!8
%)lsi,Xae"PeGmE:*?s7gs#L,Ps%V2HS9Ec>s)n#7r4h":+/d*Jqg\15GO1?:81_cVW(.dfCo9iC8'j^TLW[[`o$]S%Vta)\Dpm%]
%lN23GVOC4/=a&WJ^fepBeTE*hK<gGYQ=uS]4Ol^/)$i=B^qI/k6/9tfML1QOU>4cS!fMFIISF9O$;*.1ES:E2eXKED=^KS*e,-&.
%EM$Pj*A)\mdBhqW;u5bc68i#-[sBQrT(N[]5gdnp2'O"aPHC;rQ:rMN,2$h<@=dXVJ^;I[:dO?j)HoWHRnI0W9!??5^pJu59lS&o
%NVc>7#q0Mq,<AM\jsQ:f)[0G`gd3?&DUglW#)Oh\r$[M@qP=hPnBGGKF'$m9QuALt/hN%.SP1l&jj./NhbL%e-e#Pgl*"^'r^ot`
%FJ<&j/J%Z+:fb!9Hq)P$<p@MbMGVh$<shc"dl_^0\,n_[%VdOlPd)$''VAY:A3i8kR0DoEd;WJrERijtNT`.OKK=7%iY"Zm4C7FK
%_V<Bth<r+G^)U#Amr*+CoKW?8-fSj3i=X*.*^_0b6V;F2p-,S9*O_Qg<U7.Ta2FdJ%?QrMf:PDW''dX$ian0,2OuJra$9Og5QBgU
%J,[XePFE*fn9Zhei\!W2Kih%E`Q,1\rTE%qn,Md9kKj0"6ot(1j'Go^HFk2qIf-gmm<@RX[k!oG?!DH>]ga1:8aHe>KD^3#NhEp*
%j!<Am8u\k:B8K&LEo];d-^OdVIhT6R6?9iSn0C'NnqT;.Sj+5>S4!,6gUDS"6/H8:Q+R!9O$Kg3Q[[cTd%@+i%ca[j-9U/t-*ROK
%W[PLpV\IW3[l;f&iu=Rr/4?CbK!'Xom=f'e7O081rD'Z1O'^hPQWuI3qiq!8lk+f[mYsh0kTLMu"bFZjS8(^h-rZY(">4Su?Y,`W
%-]h!+aZ=nGo,GC5pYH<ETLcWTY#K6%e-7=JY#Fnm41tG]\s%uI"ut"k"jteH1!p1^a4R<_Y;diEejR1b/Ij$Rjr8gP[8XauI0Xc:
%M@kVB?_uHILPNSp2l]m[1g'fSA<de_8]`XjjESMI9Z4$"bt:85F[p[PJl!XHXQEX8:,k=WkJ]Y!9Z9MJIP@%pn4L1d55*^b!F(cj
%%'I-;WRL&cLD9P.".:Ul'8ifdkCNg60c<@mRJLO[L8M8]:aNQp3@)R75A(QK$)raK7P4ldS4`'8qPf:()_!ANP9@=8$*TBY1[#CJ
%ZNl'(NH3tT4F$PFjZ-X(oS%r93>SnK[)4UPnEJ<K?)"h*6X0k*&#&sX&_Reo0>8f6V>Ref#K.B=c]=e_5\5IN#f=*ep.`i+Cr6/&
%]ao=,:nuF/(Xp&o-\O4Q">4HLSj+WcqKq_oY<+?o.`=T<TqY*d-CIR2B0F]?9YDVTol0%[F%S5dgTM:t3>eChYMgZZf;Ilr;J+'+
%L+?mD99((>q8=9GCSb'OT[WBsH/OZNSWk"g=@B+r0VH&W>Q%S5hY`Yj96#u]Dp*lMjit1D5[bjS&p#OOVn*7$lGb%057g[<?f2j#
%%0-Fi9F(cR8!Qq+S5h;S:#UXYZ#oS2dk@J!F"A--p_h?dlil6DR2!ogYi*fB^[@aC>u?k$);UB776.$?8ZE]To,8=Z/QB,uY_KJG
%hod_9*Wjkc:JK9L9*9E_b3"8!+mm1<<J[U7OS2s]G,RCSo\QTBNJ<\1*\O<@oML6RX52%7_+Wnj@?FF,N?ItpkWks#NJn$b!0K*#
%B8ZVsZT=-4n=fI3gHUHgq9kJC%OL!\6r#ccW?g(=SBZ1r1_M[s8[-A=5t;_Jg(JsO%TSoVIjb>$l=dV-5PeH*A8rts[2n(/6jSH*
%5pi0!>FmL=%?r0AmRP%T%QI-TVXh?UGGdS3m#>1*?Q)9Mqb`8fTFL0#3r8_n;?qDV2^+Z/66<3Rhag>K7`FS7>Wiq#=4W44AAL[o
%Cn6pqELW\gZK<:F4lE,PRKEU?ADa\m'X(oZUl/X[\$D0cK"I`rMaVa-H.t1YJRZi[b\e#qgH9##KsJ\.Mm(U:!(q>)\NhPK<SSat
%VYNUKF.*oj4Qc=oWiJ,_([MI<08gbu=\H&`IQR`pL#`XKQGEGBHIW>3(MZ8-pSi,8eEp8L-VBIFm=A_jA!r-.pScP/TI.Oh\]$o;
%b,k?TLoMQqX#mVsP:34#_q[N`AE*'5EA.rcIDrjYqk011GjX!5L#l.+".+`N+AWOgTUEt[nfan0m-M=7Fe_%(FX'X\X<l3Zr1lB=
%+lFNVon,PVFYc=_m+'pi.G32<+:uJ6oHg9DAmh@57S2oZrjV15,bWXb<N]i5$+M4<)i<)P<]o_X4`$=%.)1iCefPG32]cbm;"-Jm
%h\`jh4VbKg=IBMfFqm*<lk%!&4W8ZbGJ`?jlm?8C`LhL>fW(e]pP^8h'_T9Z^"K!ee0"G(/t]pQdpXmCU](oZ?8a8b"j>S:?cA.>
%`DQWfBtAQQW]b=bhW#O2Fo:_O+#o&QAp-o<LM3_Q#TA>i!TkU4C>;A<ZWZ)qI<.KhK9q'ff2$NGe!d!P*g^pMou1LOF^]6kStdJ%
%5heV+5cG')XkYA;jWH,pBU#$Pk<%<<^;Rj"`'A(Q^o?<YZKHH#*F<m(.YOg$erk)N*qRi,2ugd^\bY\9](lM+/b/m66_s'Qhg^Ja
%rPn$iHG*de2P\m$Kh%uBb,?3*Xh'c$*1s#N+%df$*d/\WPr6Ru?W2@!mI:^)pXIj.-$e&4R-YXT;(%u`b`hX$ZrM/&lZ5Ut2#6qb
%UfG`fh%O)EM`BhMY?Ef!qI=GmO0@i&I/!FEJ%'jR2f12d\,;u$dhdJT)J:akntQn&?d;L@U&d;pF$5kal@g>Wr'>WtMQ3$.;Ljbg
%UD(6m1acd\cqQFC?Fn>Bd@es,#GccS[@7g7;&p,q,l1:ICV5Gsqb#?WSVNrppf4@R$E<Ng^T"]O<,XT$QhD9Nh`(6%F/l^eR/bY;
%Nag^a3_\&BU1V<\D.p:6CfIS`E=M)MDQ7Q&\r:]MPOcV<IP!$e^:7X4cW5%H)1-kX.W,UuL2SR0/QJ;@:toJQl'mS-q,CT6!.0bb
%b!"KBm1H*!dX1efLXMh`n.0_f<?^2GJ_?%#rSbW\^(TNsXi<9=UU7\K%f;6e&QLOBPhS.koXCOL!n804Vl"]U'e'@?jWJE*DB&##
%Y2(4?&M5Btd)ZaJZJq&1GPbQC>>I`;q,Q0d1`INt;l"nAD;S=IY=c2c8>b@6enBI:b]SsL>MULL$<EN>KC5hA&p0$R/goeq#0eKp
%,3g\MUY-bDGZ6p*'l,]?LUfYG52S3OlY*^.\*p)[Rr=b_kL=>+4nL8iDs?6ZA0nZ]@n]$UN`6$2VhnlFm],GHD2Q2-n2kHoh7qcI
%UYD6a-D%!d+@&$2=/aikip^UukaQ>aVV6K9WblrM5(2ru#V#1&WhV#+8]Da(O0UHN&9nXo,Oeq1g/jR#pEdFm^TU,;*RcEbB"%?t
%eS\@ToZ,hdRs+\+h0rqh%DI#.on]GsM_FH%'B?ITW:Qg\qh&G[jjEiJ&d2a<@(!Pi"e$Budeie99!fN[c:@hla7coV2ddPhg]")+
%^1k(6L3BW#gOKqc45O#d42Gl$nekj&aAg_b(L&h5$9qNSPod?N7F(XGpXSK9DEuJ0kVh-fdUUg:J(;-4W'TsCCAXm^IOhEmh-E>a
%:]&RW"b%c_p:$9PDVIF4C''oK?OQ(u+Q)g'IJ2X:rOsK;VUk]Q[rP.(RJs)>^1k(6KQ\<V-n$sf97738ekP?;AAKtqc2j(5NU3<+
%'E`b*@s`Db$e5\$qVf<Y^(TOn7GX6$>6^7@oD&0HgF22's/+Sc.C\2hEha(fqC6Sc_+>m5-L;QMW!F)8b,l"=+**O;5rdd*!eHal
%Kc[Ps\,0p)>;l<"Z^'9H=:#&F:B@f^Rr\D'gjTpZX[=bKM;TSG6Ol7["pt\?X`-SB\,`u?34#B8>M@qn>QnE_b#nN.r,,l$C4dFA
%Ir8o`f;dO_7h<>5[Vr25\"VLulRRa0:Q?$P+N<D,7t+ONaVr9dN`JP?\,*)FMq/B_>sH^n5.KKOUYRig^\k+FdKXjHp+>A!9tU?n
%Zs2B\64FaqfZg]3>N1c<&+FWbU]MOE"cEoHdZtpB#"4h&!K-fk_cqR9)K)bW>mBBS3>sMm\nf(#r[Vq&e+$/O]rd.oNUkHs^c)_s
%F)&4&rt=suUDF0l5fkjr"5pcLSaLo0F2ck7:@2V0"s=308*IMa<IAc/Y=6>0@GJ<S"lI%'%9GZih_a+I%JO)RE&<RrD&9%jFr8o7
%/@t>X!J;AX=[9Lb%19;;'S0D\U@a1sZTh^)j4C$_+T?6($c%20l4&3]q@23HRsOskW4-ZSop#$Z^8J[`kX@plL<:__Wu4R3%Ht)d
%OTUa"%UTKdDmK1&>e9+MU>\.eDi_=Mr*!')!k78qP2Vmfqe`:A`u#%VS;Yu>;Wb8\I7O1bAqIrUKrIg'D1EJO9I`14/5@EsV#qJ7
%F%S[lq9;htmJFM@PIc16^No@f:9@`nm!G(Z<4CddI<R5C[C/UL8"3[B$+bV(DFjZ1T_lbI)<<4=?-i*hM)O'cbX2<qYIa6#=8g]q
%s7U?b%PqhNHmkTUfW-"\3^Wn915t'K(OuIbmjF]%#UseFR0$EQh=13QoP0E33?(&eGPrReDOXS1DoHP'kK*GMBrg/P5Yn_SS`Z-4
%OJM;rW7d4PQ<T0n7C!C6eU3NJaeWga,f*Nn_.qHnJe2JC.3\Pn6!]^g`Z8.4@mDZ19`eAn_Z=o*!Uif=pX8`M&kM\1,Z>:K_7]G)
%rrlHK-?]U8.YBpFG6^NEEuO3"#hA$aaS]2OdVLet;ie'N4OtO[C'2VH``qsN:c+.=K[4PXfXq[fh"p8jC;6/AG,fNMNan^]RepLH
%*_4`k#M4(Fh;u9Q)<\F57=6^A'RBm@o9*Z%-m5/6TT2,>B8WRef%.';#NVei65AXNe'7Kk*;90p]ubYb538Uk:rJ`m"])u9-2+7#
%D!l\([B-pu/!*$F(m8Uc+e`TDrTT+'ZK(6,SPHM?p:Mb5_d:!T*[dhtArj?68j6H^RK@X[SP"tn#G[PB']^`T9V!:I0Q!bQ(,==/
%XBGu&f+.D(cg=eDio_4RHPK*d'Rit)bB=]akOaU6\UAP=Gr1_TBq7._j.TI+[d_\;GtKbn[+ZhiVRi5*I!7Dg/kRUV2XoVeFZ&Rt
%qosMXG:dN_p\eCN@Br0`DJPN_:RZ#Q1Ke35-s8Haqq13d(iT2l54>e<X(//j,@5R(LY0r^*!7-!K/S>%E?bdD8>CN.+[/=@`b80>
%).U.;%/gmbEMab\5h<C8e/\UW%LPo4<H.mN7E=fX+Jl)F63:.Pk;puLH>$T3Op*/\f2!=oK[PuQ+#SLo&6=@3V/@'RggOEUZTP-;
%I[d5b@[YR0%0%!ud,FdN=uN934^U^_\sMk',N#!c\a3f>nM?[brO@3Q*9(5^`3JBFZJ`.7PGOd(oHo1TK#>)^N[U<KUGo#XEiUX\
%-I28JTHVT-pprZO'LAnu"'9A]mctjdCMGX$e>NN3_%`?$4?YnE6/qgeF.FGCVUCd,gf"i+:I,=n,Q[jhd6'PE#J+9Mm$MG8>eJ[q
%<=-K4^J8XK$&F`&or\`.BPds<4]l)rD)dn:"$o:u%7ed];uGr%;BT:[^;\mO"]om8k;iiihGO;U9ga5$8l^i\qBZhk&=ZrIYchJ<
%BlN5*iKkL3&rhs,djQ4Fir"0^?2T(&=</p-?Eis=Jt]14IS_,Ur8PU(p3b#)`fcbi&sP[nA+,L2iLE\8gjG&)CdAb2kc.g1I<.<3
%Q%(o5,JI,q[$:_3l7(K[Qn/@T"qe0J1=RaGo?jtaYNJJO:f?;C)o#u6b[[.D-WQ-,Q>lVUBMM]P]'8CVep9#UEt@pGZO@MK[tJSs
%b@Jq?H`s-5gN9Jd%,7M1RnIc\SaKHG&=(LI\,"$j7n"c3B4H>O?F9RWYL1PbaI_An_QuOOI)&$-e\lSL-'k0F*X?3@0N,qPh&lfc
%eM7krE<C'(5q[<9g*1Ih+:.Bs%nUB.nunf>EP><Xe!LG[QGMj0L_(PD7"@;$gRQuoKX;<!%25jpU(>AnV/?+i;ej@kEG^(%)9M`S
%&7D5L)PlA:f]<p[r42JM0!MY7HG-(`2H.CtX$g_FbrTIoK<8G#(Mgp&R#.Et>oT6Wjt@H^C6^q2Z-I'?pS!9C(Z%7eOj3KC41'pC
%L4O/O/gb1WMk=M5(!JJmV88W\AX`u;YGn$,A+ZU!rsT_/I%=1/03%DDWnU[mK'9o!lB`YYa*h.8o6b+ncAs3p$6L_1>7f$RI%1*X
%\fIa_&kKhaRCZb[@b3oU"$\PrVThif3H^H!QQ1M9nV9]]3(9%S=W3rSE8PZl"uk:A[rW3XnOOg@:qYU,`d:)!>!*P=[&)tmn6P?l
%MO!%M[s#nj;8`)sLG0M[1;n.p:(>q1r4&QDTEq0J\<g%O]I5pZ16O]B`]>.d7E]c_+&7,GF=QH;hnJ8^XbX!HVNtSI*Ar,4@'o%G
%iNm(g4Ifk\md+F&6E+'#nnS_qGkM>gm6!Dk!FR1?3LfWXb$5koh5*\ld[c)TI/7I$\!Gp1^Kj4YD1"'[]*[AlrFcCA#(AM8o]W!t
%kEXkNQ`Rd\-,ZF9<W,)sh-i&)+rkF$n#&1DV^Ke\cF9@fCiAJl#(DU+jorMq*?1[EokW)Xp!-]_/=G'>^E.+V%A[0G:sa&cK-8J!
%%Er*(F@DMR]FPDJUDLPL)rgZZ:lB,*&[.#p#7\VJ;>Z;EHKg*lUGbj/?Go+1fL;jY'9544s-2h5MA-Y$O5<2HBuUYqr"Vs%Zo-.+
%I(IERO`HIWqkJ;SD@SpiMG@tm)F23lmbqR)*_%/EM[hA-lTX^0D:^=>P,!7cF8&4$'*bc,18a$1k&$F'i)JUqn\]"RTu`$n%/Do)
%RE]ZI=!&ng0iZHQcAs!$2;+L\AB,^:_7@LlW3k7?^)N0GchII"SL\ob93ggAIR"WVb+^'bp/3\aE#Y12M*kr%o=H6$Q<WV[l`r8D
%+"iT/;[F*IU9r/UHc^j=C*ueg)d1XPrEeQP7:RYn%N8U?7<I3g1?)>5XYJ@)pW\ijV0Hn]T:fUn:C<P.*p(lX_Mp][LU:E@rn3OE
%`0'O3V@X$!\_"o8Zu,P?5^VDdkL?)Ga8>L@Jqpspgch3ae/L.&@Zp7%hOBq8miYenJkYJK9Y1%iDROl[c4(V%-phq`Y8@B]Hf5Br
%/O1Ef?,\G%9AE7-:\@"TQVm4:<h$daMPK4i'NVH,HD\/*[<9sEiPljPCn/[;&l<a0T?RZ--C't\:s2e9[u*pM'5,^RQfmq]"6LLo
%;lok're/\Gq7tS.iRu12eEP.1m3_k(mcE^!%kf"?@EVgoM-'i^qqgDTZ+:VU:JeE:CWWB)o=14e\MaCj]^^o2]Ehu52o9k^o.`C%
%d:i\jr61L,qJAIjLhZMHcm6g(_"g5(%msj\L.rU+7,ZuIZHX?^:bVh@&5b;_^s@(_oqnRbonK)gC!`G6@(p$c#8'efLEfLsUXN^h
%]K1lXa3D(^2S>DfZi4UN1ZuC/BCpMjTU=I>9lZ`5YjQ)jin@-$jdI@I3*$uqVnrbPGgQ=M%?f_?>ZGb%Oq.*gIG)FnaBG/#j6E"Y
%NTfNt:?P3:.f0ci"K0.$k?2fnO&20?_9Gi_M]IGYPkf]^#,_\91&&1U4cnMG'?).SrmB9R3`)uWV*foG/dUG4iU16H8Vi,$MPZ`=
%q&"m#R,m%=C0tVZ0:N60;/#S"$L-cR9@"kuHS34Z@gP5ocP4qM)#;btoEkDGLN^32Fh[A;S\26n+-^D&mBF-"VpQf"b=o.IEq\nm
%:*2kck";4HU!g5Q(dNLhN*fA1;i-uXkW'9$?*XF,8tIQKlh)0uVh9WT3=^DRf4@-TTI)YJbJrdR8.o;s9U0M5l+0,c&o!'aZiW8-
%&2u#50sI?-)]2e#R1YaqHFTQ<%.+'n2KdHSII-E0f?M=T)-nI^#]3\qFT<[3+>sac>t@=[>=O]i._R!<Y:F_",tD5\g*b['&/o<Y
%7?-XC>bb16/Sdj)_D+k)EkiUh&Pbs(0D<@(7P$946!<Jjb-j./]"nm'oFi0@rb14D%0^l.n"pFTP>$,-G>7%uE2llE2ZKd'3R($&
%k<#l0*RhUfgZE1D*dWKkll=+<F/E+p?d3_/]8ZM>(U1c<Xd)i+EB8CU(//F"M<UD=^FQVC=8+/QT,p6fKHIG=6^%VEfCSQYMG7/[
%RO6M"`VQ!<d>0"l[2"njZ7\73EXn-AcI6Gj,MOB6GN7bQUH&U:*,L$kZ<Le**2Z'6l-kgEP2's#0K.N*"BsHo13SG<$1g2;ehFIB
%WUe&a,$]P"2;6tUjQ\.R/dcd&c9ZR&638k.ct]kO&"!F$66C`DmMb`V9Nua=NS'RAFmu>PicKsmC8gX7O]%T#Sd6TTO`W7RH)@c6
%L[&>-ad#o*[Q!;\f]JGi^'^55UnUKD1E?SZ@lg'3m3$&EML0BXpl?6cf]R:qo<XJo=lDls]8jf3?/=u7K<c1X/kYck.YP?gkBY_+
%oYEX<eG;/tIO10la'k%8YN/uDf+ed>d[WX->;;*+[Zn11WPd4kd=1[c;$>m[S#:oZ&ka<1l>n9rDUs'@W]UfU.DuEHRp;9-=:Y6b
%Rp_gI]nbg=hcZd3],]7u/#LHOcMWoZI$lbm#EJhu5fT]dL)*AAbNB?\p8<N^*ApAdrSYDCF@;oaQaq?pMBiot89YVp7)LLu0X1H:
%G[X2b,Z817O/Z>=l*5O+7k0.]])pM_IUH&#&N=:4(-65&=UgeejI/O':c^0@p,]+6QS;7MK>4HUi_e!d]Gk+t0d>%""A%/3N2$&s
%"jnZ\dj,a;KneTW^4eqb5Ap0`?bPf7:>jpi3mU[Q&]#_=Fc8[c$q@P*=D`qX(Qq,*(/qTp0q+$63^s5V+/pc[,m4QO$lPkglcRS`
%;J_ZC3s3Jb<J"CJYhu=(4-Z.bh/)@OW<<\4Nn([FRPS"^(V?R.R(KIra5>:oDK"JPlX&g_!W]!/kOF`o<MqI>F!^".4Z;]'r<c8$
%)EH*K00n`VHO`J6i(8\tEF/(u_@So!.C^_UaoC3KEq&rjn>$$Z2iV5GOae:ae!-D9QkU7.d9Td.jZ.s%_J[m11Yl`rdOQ;Z3%Hm]
%ie1c'k-ki4Am*WP]>&fi%b4qDS4d;rA.F5PG1-p@8!ugol!GD1@L@2Fc9[5&J>D!8@K)S$7TdCpPYMD)^2KeOfM@3!=Q4T8ZX_0e
%FNWn-V^+)62Uon]K?"[h,1e=q'[c(7SLr!t>2/8Mo0/^d.sK99>1s:=YU4CcgO%/Vc/J3<Q;p"p&AN3CpZNU2:)29+7]j+ojrdHp
%!V?(V&,j0JGuBV(6U&bnqMUk]pXd@DMs%oHIHT)Hh>hqJA>C7TW=Hs/oIUN5rC6=2-:gU+T%\1G"OTnT%a2NO-Xr3LD-Wl'dDK]_
%HI_*EmLS?ND22c5iATBNg#K`$\!_$,&VSTD5V#ahJ0(_TMp/A<$FoV*e=nL\9^P]FF2/@4"(%^\"je=Y[.^lM6c:V-nU/[_96:?,
%aW]L=+ON=d9Pe67P[)6BcSX*ErAe_8Nhq/aR@)csX,S#6/ENE0[12UE,.7ikcI7YNQSaXMVOjdhVfD2b[T],D>pdo]Qi*;dMIXj/
%=2Bp:QC#JT<R_kf1jCQa;fU$+oWA]Rd%TX'$fCXq+-Y`,4PQOIE%_GK4KgXpHoZnnM#?`;rM8m4ha"=rCIk>Rg#bW`9-%9V+Wf=5
%3$c,,T#oI$*lf8+#0Ebf&L=;(ET=NOSOm%&%RBOm3uJoC[.=^mGj.8Zo2;o)q?5[<7DS3.6kFN-2b`J+]BLIf!HcP,O/Hkj[U8g`
%<uoPp$="lP6ZUI>$UHl3\_;HJ](R,8A8[43;1L(.Y[nL)r*[17f!XUZDoUQJQo,+,mi77b"m2&Ci`Z'l,>26/`K2(.$Dq1ZS>sQt
%K=@0I<j#Fd"l7,72gj&8W;*X<nY4Lk$giaemE"N=9;1W!8C#i5mnYPIi(Nh2I>TpNHZ#@b9d3buS]J]4:_DlTcG:BR1K$hM'>&&4
%A0O[1T9'^V8.F$WRK/"VVj(Z#m[m)`0Op!OF+72e>_?-YMnN3K,qB,CCfgCioYs<48n3b]Q1mK9aX'^@<#P)Vok**f)C]o\];Rim
%4YagR[?u<;3<hMlD(!-$0hhrnRsNKn"?#?n@-/sbcuu&4(Sj!C0q72c;jq!R8(cT?)P!=N?&&6Z,EdS7!h**B>^34qPAGJ;WGUnq
%qI;R#*(A?bD%KXV:;=g,*D:M`krPj:Zco%UZr!U6T+<03P<op1Dm1`Jap?;Ah;r(%_;+tqT^(1FBM*L`3Tq2SUeS\,_`G7J=>MH9
%QEV^M]D/2R*>U<<=0rJ3ko?[m%M)X+4:Fq2ri@A]"4qnOg=eR"-k!U-<2F1#XCYtk'YhL\`4+#YElYU6<9iaGOh_TrUOkoL$7(G+
%6Ds*Gm3-O6BaQsWWLP;)c_98NamDpe8/6F2MmG4q\(,pL/q)5"0?u`Bq%?aYgtfBakO+]n_1nSRX#ilc*@.),6qWu4kY<&tMm[?D
%ZW<.IFtu0$g\H)a(@(V+nY"TO?V._IMG?8XVM*(!*G"#)(5)(3Z)aSfbHsC36FiYWIW8ZHKm.rcOC)`&@j$U4ja*Bfdgi8uA.D'U
%-`u1tkh5dngo>3DoiK57aeM9Zg)r+:OD)@KSdR@qm+FZSQb!Gt/X['J5qeIY+EEQ^b)-fpr,s=6TmZGY=P.n<Yp&1&?I'FY.X3#P
%(O")NY=B&tI-K^4QX)HZ&i#Iec[GT):M(8I3hkrI)FJ(%;k%\1a`a&%O2I::[dE;4G?\0[H`FA(k"./\_V-#Ol-=kT]>#BN9TO;4
%M8q*].8cg]0#mYCjukDiZ6Ek_*Q#H9+ZftVS]O'iLo/XpAE2@>Hh>=LhssILT)R,mj:ZBqj\6Eem$=Q%oBb]h)*bladG%=?53R+3
%$fCrJWH#I=p[<$<rq&GSj/7%`VR,F*\DLeuO*@$0:Y4HA@D((EH+IamYOcA\BgO)FYqKC4hOjVnFa)Sf04+41J,7cHrlZD_r0R"F
%GLBX:aBeY]h%!\i$Rh:qT=FUhT6l4*s0k4a5QAnf0AiEGES'-[54a.8Sr'@r1(UR.Ks,MJ)9j[ph/:(U@iKq@l0=beQ+8thF`tZ,
%dJ49bPpV'3:DJ/%]+bDRk7:lSIXLjLVb>@Mj`JNNTDb86J%KG]gLp9<;qLs`pYVNpfu^lZD4_T?ghZ;g]C%QM>ZF),NfS3bi)^F(
%pmmt6[%>p6Xq]/X"uCI6`N:_,&=R4O8Ft>dAAW?;K6ER:_1h-h`m15(As@!n;HVq_;ThFQ2:@MFmgq50U]7\N/K&h@Q#G^P,r08Y
%e8H2#29/?=Z.u*^NfH;g!E8,@9nE,h4JG],\m\L]Pt+7ar,?)PEc0DR!(qq1cBQ)"V":$7P[\p'rQ_sUN8Wu@W\oV!Y*EP[WDrBN
%4iZV(1A*?DfB[j+<%1'OWQl"L\'!Z+?IPJ'52;5h@8OVWlEKBJgfZLG/OtSsEabG@S#6(5qftUdQ':EB0'Th>B]PlG0!>t[E!Jh#
%dR85U=4+SJ$Z"\bUi.R@dIQl26EfW*cUI4(TLYQ)!EQ;Q=RMJ)o$-Mls(Z"Cs7b1<*3P-]qlC8m7*;12io#)fbrIC,+[,>O^RV&X
%/="n7g$ufGd\fKK3b6C]TqZUO)Yd,WC.janPpspkRl"*BA8<J-^@+\&[PO8<<\:M&p-<29OD7MH5M(TE7,l+!rGq=b*h&4U&0XED
%<p[\t)2,[o:cO2!bP+i0*;`j[ad&Uqk`B=-LFNq8m[0%+S<>:YX-@V_"TEZ9%A-sGRI&ThR(p!GkOf/keEH,g!ZP%>hk/C9L:Su%
%!c.(*]KrRIZq?elEH4Qbe1VPj$1)'*`Aa-%I1qNL/m"L+8]#+,QJOhV0!0)mI<p=gI/g)<:T?#4GP2Q&TtC1.X!nk`ab<]c.&qHd
%nS^kGMG7HZYWg@..C9U\j4je4Xf>=`RUeJM'nh^LXctBl>^ZDE``LY%p6LshCH0s7B_b39/N]Q6;pInD)J\a4L"kio)jF&I,H[[c
%au'FkS8.<SKUaLDrK.<sc6X`a4hl-rkpW.uLX2%-I*LsS_,FUJSeT*!FaDBGT/rB<E`Fq^O?20JQ(je>&#JAJ)Qlt^7=4JR30Epb
%>XtiQC,&t6bkb@k='8fE._<sT4;bP5kEP52]5spV@UHh*;]WL<Y6As2]>CFr#,h[$GN2ZW9S!>;(4D6E+:;\-*`EZL_J**8X2U:Q
%l#+Z>4bmfeWU!b?EK!6UnOQr\YTZ,R;o'JUG@\[$Q:oics*8Y&f;8<<0in$Q`S`D//Sfn.%=R8cGVq/#2)apY=0P&h(1WiCn=B](
%s#j^Znu8.t'I.@/X5eS+VKTjC"&JQ1;-B?(At]IldW9mYV4<c@c;c<VF/DFg9NP1>MX0%-'SbRnf.+@$=AjR$HE'rBUh@0j\pCi3
%1c:l.aZYg*B5<[3Jep)U+hZ%\(&?Q&<*0c.'WY_3d6/Kd0Y3L)+`AjCK#>O?,Ar058LAl])mt&RHH0JqVg]\Ipq&82:RN"7c]n0f
%lC-519N+<ds%1DO+gAD^m,OlA/g7,A/5a?[-9%3)]#1-)=#WFFW29h,i&:@!XZEjElGU-)UPVloK&0p>%'+f:e@KT)3$+WTQhK\/
%o:;@<m6?OH3I&$'K@Ae2%dcq9kp;jX1nU3X`c6.kb&mqnE8$g.`r+fn4IHR'j>c;epuP^h#f&pI^:(OJX$/s>ocEKklu$:2lM*@Z
%+(hf6Ac-VTp6/M^*[%L8B$Sr,k&pHpX2U[Y#S5EiAn%s27aEdHWJ,Bo`+2RUe!L<%X,ME9ob"Tp=oi@EBDCT'\[e#"M-b_BC"ekT
%Xl].=&!s8Ba\)f],sT_8EdNK+CWWnqij_qcmm0`qib*VZ1>TMX#P#nmm#)[q.ji0r^s$(kNOYeH7-Tm%['d@18pV@Y,79Clb+>&g
%"uO9-FoX7,NA=tSj&K<[Pp.l+jJaAZ;[Tm1Ea8MR(7\QB"G`ZBfr2/gFXf0<5@/ZjAa-m*H:ggu\0]:8@/P\`c-U'fHUBO&.\4eM
%4*"nFn<N.Q2/(!oV9$8h%&Vm]FYfn3(EsFde1(ViCOsc+[/eRkro<+,>N:j$ZJ./!O*!A&qMrnHk_lTd_&u=B#ci?f,h$sDI`M)G
%?1%Cp0OTG66`ru/H;.J$]T4l/<CN,!Z8nk(EmH@M(&/eOC0Bq['Y"IerC>TZmSN1q`#f3ZB?m(6:5oS:!I'3h7j0&@qIRgK_dccN
%MomS#E4BE8UNU^?gL07-m%s3V#Lt:P,GWe*p)K>'9YBJWUfE&HAe[:Z2"Dm&*NqOb_p4VClK$_X2=i<CeoZL.:t40-pgYb`#NPX?
%)gGr$C,pf5G\=MjJ.cnqQcM6c@Dqu;*C5OX=2tnS(C:Nn=O9[hBjo9.(fpJ(X:+N^Y+kPnCl%\koO%:")+nNQZVGObVX[W`_UJG0
%`<Nj:24Y]gUTq;G^e!7U'k8lj)@l;Z0sWN$U3EeRrnj+FA&6:RPlH!FH',oCXqiq+M]^Flj41`]jp#Qh\2+r@o#E\.^?Vq<24%-\
%EVcRpdUS3[F!cdps21B8Bl.H)`\F!n]uFX20X;j\1a0q%P.Afg1j2ihlm+BC*HM_a.,E>ZR0F3I$^-P[UlF5BSuq#bRo?//;a.kU
%"I;!T;drn946J-I.6tCGfD0q[(=3;IX-@;`eD7/K#^K[AO[oFRmd%hk'C[_OLD"J$>P9,&W]lpS=0)]:,9E]&dJV^lmH[Ob@=8J"
%m1>B*kmP:&1DDq&D*tOND0W\frO4175dtItSpf'a4YQ:tI*uU15DNF&`Q,2Z$lm78eWo?p]e`XO4+l,*9KtXhd?Wm]:Z6F&gRr0G
%<qb2X+s4Tj)fN)@]=V!"#GqZ0(?;@-X(tK+2UAD(F'4L:P"XE_s*6PJL3ckPs7@`oDC7`FLY.M;,]hkS3GuC;;uIMZB0T_X(@.?7
%[3-GfOm4!=Z>'(o\jKV]9>ThH7(Z*!8QCAM5s$Oc*[StZCm_\FXfFkH'Tf*WPluY#?qiaXIe?8)m*+_tF`u@C1+qu0l6I#XYW*:.
%+Eh,S\J-7s?nj!QW-3pl=fi46_^[&cXOL;%6\LT=)3h)C(][;&e\AYq7IoEAI!kmV8s#B#L1Ldl-1t3,ZEC"dBUQ=ANq`]r%WN:c
%,"Digi@YXLlKt:Te[4?=8aF5ZrUG_s3mmJq&?OZYn*WVVUS[,$-i?^aFgjO$NG=-o1TF`n5,d*cbDsXCW+n47hPs:5:O#CN%WErV
%H*`pe(TJE;X&;-[*6$bFBrl+N1^@I=;jFiErOkVHa[(>;pCnI%%ho&Pft"h^@2/>HCAV&5?8Wo-plVSg;K!nqQ8Z@r\d8:g4uLKo
%AOaie^8Cg.WKq*bDfQ\oP;[F-2D)^!]Uef$g;&_hV]N\.kPuFa9:Y`%0:6*ahNTqBc!`^m+RQ1d@aJ(ha(55iOP@=%K$cq.D+jNK
%[]Ytem=dM_?"p&jm.I%LPV]iSDud@+,)$A@-srl`12+C'+7*]X_b>6I1UD$gQtj25_k:RLg]1/&Ud\Ni$LOZ3#XL@Y(95>Pre>WW
%^][7/?!;NgCfe\jJnK>rCU',jb2OjfX0!4OU^=.6Vp\^G?k)h^-[!!6[H;..B;#]g;#T!VK$bKgn_qup5tHb0a*>&>)lK(UeeelT
%7.Y(%<&k.c4Zi'VWc:5O.cIb--t*V=B9>cU1=!YKH]nHX#%E]Q8]DCQ\bt\fB#n:@;/bWMkO,Fugrdb8=Hg`J-0'g+;R5(8@E^/h
%T)p'3DN$nDf/3E)<:TqK@JXqgR$K]^O%.p1)Fh3>Bi`.WI4s&kG<SRED@T6TdI;o@;MY7JDu+8+2JIB/J<\7BU6&Ku<)^Dn2(DfQ
%8a%^=]9-JUliaM3IE72+F0M2RKi(+)3%;>8Qae@aXS,`!rZbH.ie3#1l(+CSZXu7sVChE+g//9!6/o\^WUS-0#Xg/mV;>PoD[6lT
%EYo,[<5uJpe3/o9:pk+mGq)6ek(+,'hU\A7.$@\Cq`5Ek!j.':I<1+#49nA]>;F^:2Sl8VO/Dp)A^1B&gY@%d?t;hOL/1M'CFrsG
%Wh;T^#mD`ck-q::!3%<*fr`usS_kHRc@ljVeMV^Ts73Se:p'tl3[`kT"tY<eH7d(iUs'=.ghm6o.U\%]8Y+fJU_8V=K%<j;L<"YW
%6;n-<["e=L,P6W-&a]f$7XaMOalj=!!q4XKA;=b<p\7:1EXd81:U8urcY2`8B`r6E/;]BUDDX"jXfLhOqLF[rDY08>ZI+mL?=Z]d
%fT"P/WgK^FBc_`RAq`F.CCO:qC@p;0=E8c1+=ac!,h"oPp;Z(FK-,L2_YHT;_da$PZl%6Mh@3;8;#R^MEM;,?hLZYY'Se/F3.'[;
%[P`#Kog[RJ%Mp8I.bQP"SqP@P:[_]I:>^h37\cWHPk24XNe,%#nH"SaDV'JtMc-(?XWX8XlD<1nG`aZhTprE/L*$ofES-kbYB1\E
%G)DIh7E2PBJf$:=Q-.a8:&03KKmP3sFP@8f5Xh!$DX'QP"H$>OTo`q%Q]62kq&7$\NKPEX!me`^WOnWJPVR1!:bI)[Q5MhP=5_Tr
%_oQPB4OXEmL"V83Oss6lA_"WGpcT+pm[Jt.Y,8:RU'!4!kG0.U`X&:-fPY'S8Fl:k'P$?D[nR;lqek7uKN,eT_iLh.Y>5.YXZ4bN
%0GtLa\<2rt9`#S3%OJXp<"nb6V`U^%UM!8Gm-)chISoci9#LH76Bc-#Z/!snQ7@lNN:/@8\nQmH8gW>OXfkO9UYE9,n%l?T]B=1p
%\/9`.ncR+rU"HC[gf+s)o-huPO%]"#q&WoEm=B*Z>ta&X&@;\`Qk7%RE+O2c"L'F9WZ<m#N#[V8PVm0J+6r3Vd.=&YW-RX*Z8ttd
%<o'6$Y(]t)")8Y/1KbLU"[]'O@RDt28m_\!lX![ZTGIj8TfrGc_`Lt<=$K]0qHDgDFE$rP3r,>Mh4cBM$+>[>4;I#pW(1#&*?ia,
%W>$4,YN`\'d\C35eO3nLBc$I#nE.;/K?=F!<Aq[M-n;5YjFF:o\i>,XS-X[>V*M.AB"VT@g=OTR(tZd9VQBD.X<Sfo&se&Xl8_Z^
%61#:W<BqA=HdsNu@$(_M2@q%@(>r2IOInj6GGp%GQAU%m+>hI^FX4(a2Bd'k`JJg!41O_cS0mn8`>nqob+T&nn?/:^^b6/N78DHE
%"!WVNCuB,?KVq6,G`hJtkinH#!Oj8$+gD(XaSoA@0iWIl#i2Dd?W/?kEoSGMNGsI[7)cBN#j33c.q$Vq^qA<.ZoEG2'(/LaS38:W
%fQ'Z[U+nbu\W]1PCB!p$-sJEd[`FSgcTLkV]&nV*mHN!H!G7_a4m't$DsInD\OK$q?%:KH$Wm93W7fF4GXfjsfhe]Z3KtM!4:8TK
%';Mlj(@Jn#J1cXK(UFn>bcVkk4n?i67f>+\p^N%r(U1ij?3[!@B6fiontj9W$(S6[ZGG"*TXWeQ%uKQ8WuaV[W`-KsL!+NKV)W]C
%%cOG/6#Dl/fA3oiD[Ri8VNabU[J)/%ZCXjRb;eV"c?!-IQd7;)cUAhkIYnrlWWYYPa-k02.7'1bC&bWc(^;*72"bDa'7*^E8u(B\
%lAK0FABWn(VtR$?mX*h-_'+'e"?4uEVmO5WUXZJDGW3)8;=[t>1/_R)/X=H!GpcE=V.HIM!]?nuc.i5"+C7K"SCK<#2%IYPUe>@^
%i(f-Sc7'"73q]j2D]r];6ZkK,aS3r6OL@<NT;C5>l-\as9ak(lYmTf%..Y3H\V1'_V5V;gIfM9u7>2bqUf-k.E6V\TqU!,+1I(Xu
%h*&>%-Se4e!aKGcZO9ial5gBYAkCJcM%aLK!u2OV&$(^'30R:P\7rgDb?(%nm7GQBNDDU%`=)Oq?W2(Q5!%s^.?F[7dd+!!;fS,7
%B6lO/7799kYrfCZ7R^MPf$?#L@9q_ni7@'V/=NotX91f<m.,3Mc(\9D>psGbVknG9@(P32#2qG^nC(9.m9%`c,#Io+cMU$"pe&EJ
%!>t7,nc9:*8!etl8M0JlBtTqcH)&HYIEuAo+6?$6KX/L4/DEPi4sslYG;cGf8Lul7_EsVGk?B/\`:RM\gDg[hJ;%6NF<Ae4<&P*X
%9$P0oc$gCH):uDes2bsM/(PG\+A#R2>uDg'Of2IE]$t9UF0.nTq\[VFeJ60u;\"2Y0Wq\8jM"b\:T"Z_0(fq"deBc=8Algc=:g(>
%pCA0j<VhZR'YD[K.6h$-CPg`aW5h5)9L+']DPs_t0]3#Q)G9uj)_b5%ZJL=L^Y61,6en0;&*K8>)s%&;9PP^\O-t+^-]^F,)>gMs
%9R!,N9AmWNODc`O8g$!j5s]5RWi)YoaE=Ut6LE:(Ft)U:6gboB#3*l!fhEk3h=KI#S]Tm9il3AASM)G-)#AfEamXW9R2grAgUS3s
%<WgWF<jtX<Spe`oqFtilIE?!c-o8O]5G+:KVk%@B^[T&RITT0Po'='jj59d4j0j+%+5VZE'Kr]A!l*sDA`B>J&YSR7dD@Ys\0_1r
%679GshbL!WlS]h+\\5c*?k$-rRs<LF[RLTbh#n.`l3)%eZ1g=D?F]MTD7[!B,-cPU]OiCfDaoAk('^2=$jrha?1h]#(^dDKp=2``
%ZN@Zi\i@<Y]V1/B24pXO$Qb<_*\Ip$prMWheAE6j#!u[S'N-Z_pr0.$j>WA,@&os9Os:CTN%(h?'>5Va:9T*<*DZ0BF/&$`Y5FUF
%jQpm)6%\Cap>&K\O*BLW,kmi9<[gIWIM3oKhSEic3se^Oju_JCf=0PjQf!8el#Cp%keVMtI^C^FF[$p@_*baT3bl1SkP,#VMn=Sk
%aGh<g?eBk\M]nDfWEX+/^*R1i$\eejQT^&=*ZTg;_g(S,^Q75u<DrR)`qDAeE\h:+>@$(6C/qrn%kmH"`:?JT@ke.n]ps\rT)3'`
%0)+5pCcbS"[&[ahF]Gt`N<!sc'ZQcWRuBF-0\ac"aR&N6VsXm./c=j3^sA2%W8W"/p=Qd,6l-9Sg2@gp)Tp$\)tPN"m)9[_p<4n*
%GFA3fB.KlfO'O=Nn4HYFed,C'5Y#%#2]9dfaR$k[jS!lW;g3qR(B3qT#iMHmGcR3`4a-5$i*[3=s4i(=gQAb[q*?c?4or"#nGd%E
%r%WD\H#A)6df"OZC)EW^A/:%ldY'9q\snYTq_NTXrnK\uHKm,,cdJ0/-A9H&99s`ZTqu$Z4"DU-IUF=f.!PYhb`'L^1u$2:BX6fj
%K(kT"*n->?CdC_+)M[<=h<qoZ+B6i#ja>CoSLnN`QWm9uT>s*;Q[<E1c&3kbn9oqFa;Z!W)9V@FbQKaT!Q;:8Pu`G$/*('_au0a_
%k>mV=RQ981Hs_fIj<'K.'_EePPGb<Ched9jg[k+"ou$amC$!!#a>At8NpWOP$L3n,6JVRe[>0$:ZAWaXQIe97YcE9KEr3A\\\?kh
%cJlRA:[jV+26Q<pXhj0)q!HU[SDQKb?B5%^0Cb%r<GrdSFd1eC;-2@f*/XQ\7'C!Oh;;A\2&%i-V!O9CKLj./aN%Q4.-9(K&1JV]
%g=L[#Ik&5!hd@^e[Aq`<jQ_Hi+$(cfR,[P>38s>9q8QHKS/(gBCL_jL*O(6dEYXk_AE%',nfdD:m$%QPJ39#,#Wbo^Gf9Pk4C#;0
%_02q9_dQ)ZAY])mgLS,#0%DYS]o=+IX[bYc33[.5(UHuCT->9e$)BK3UFtsCp]^mcWokQc2F%_EQGQ*j[NIT?'Tur4aoi&"+>9W/
%+6X]4k6###GQr[9@NE3E_jO&7S)E"g@fsLg8#t)p5"HNMIL20m+^&Oqp+?^#4A=]ES6H&7B8p=I@3#0%0'(M@WUk$i0M)h,K+'3D
%X[1RBYU%$:Ju%"mjsSLg;@BT/.3e'lW]"Wp;jW)kAOP$/)O&/)=:I0\=O9B)%OMNs1OKI?B4;Ta6O;jHLDX\i<cL%8(0j*28[C*&
%Z^iuL;Hi%(ToF8s$0KQI:FOgiMTB&_n.:^H+Jh7tF-Km870ZLUlsd])bVD3LP:f=pW5`::@UP!l0Q.#o2GfA9^nlMV";iP11Rb:P
%d.mu3>5"[6NKs&E.,Ef?GpJBXQj`c,8cc.1R<$bBHTAs4`@:35IJF3RcQ]MU;A-&d\(4*We:8_k^*F7g,rklR:tj3X@`YsT7!K0H
%qL_[s.,H*pHd*akhNfRa=D]63$\OL@`*XDQ%-`ngQDD"(MNi/cH%I=P"8-;X77$p?0M#J3p;8)J<LAn`Tm*f-5iqIeg1(Q0FVrMO
%dRFB46V6d/#r[LW>6Zel2%E1e+ef;X<416&JC%BR3(lZg;)J?bERQOj@<DZen0(S8^L>(ECA&Vds7d.TM^/\cW!#]\@B/\RjkTg\
%E]MI>[LHA+,n!a3%[K3YU4]g@/+<gg-9"Zl=TD>2#\R:k()o*Hpo\E5RgHd3T>[*M"Yn`lZO@t(UdRb-\)Ld=e)c4pDs>*MIRsRT
%999TcoXf)PS(iHJ+pJ)U!NKZg8g#aC8Fa(FCPqUaXNIDu[>04)nlL$=f8\`/-j.G#>AEY1Jl?B%8?E"[@g&#5C?*9&Dt\3U3qqB[
%\MuZ)]]VKAr^4pXq*K17JWPZD?&s@sh>i6.%&3KI.Uu,2(Po2Q^J`fKaN]AqNE&#gIk+1Jg=hN$/+1C'!-q.^!e`siE'S,m,*FQm
%Fgl4.A;8$)CFc4rg/."HJBUAQ^3;E"-X;3-7nS>K5_0.iq$JpaB>?0k$Q:9E?;4Y%N-jI@["uD`H"pR/VI>>;2KaUA";^G1l-]\B
%0i=g.%1ImSk:bW<'Ls'iMHAg\:^;`+E!Y[A%?V'NT8M&T8GUkt=Trmi-,+6-:A%6a''"EmnpS4&)i5Al[XM,fdZZQL1.Q.s4J&r=
%"r4(lc=J^(3T1-,fXM2bG;R_Bq]-Am#_UW[P3c;P_9ZM>%]KpOJ/1`^_MIK$*#sRQG<P74O^I9%5PC\%!lg?4LIY?5AH4>*J]8^#
%+D(Ok.\8<qdUZYLB.#Bap(Dc;r87S_0Yo^sPh_+#b@Qo>5k%bOi.5$3C\%6s7hP^XpCIbiKbI6(V"26=_@(G:O3^&'RS#D$m2c'#
%m&0C-+2>1tJ%iTY><cu5X4:lCq/(Pfq79j=he]_C5@!$J+#fhC\$tR4oB5nP:KQ;qrV*qkk0s8NGCRG\S#.-":-S^SbJt-C",FN?k5~>
%AI9_PrivateDataEnd
